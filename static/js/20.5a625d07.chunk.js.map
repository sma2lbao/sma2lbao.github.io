{"version":3,"sources":["views/movies/MovieHome/modules/Filter/index.tsx","views/movies/MovieHome/modules/Sort/index.tsx","views/movies/MovieHome/index.tsx"],"names":["Filter","Placeholder","title","Sort","useStyles","makeStyles","theme","createStyles","content","margin","padding","spacing","background","palette","paper","gridRoot","display","gridTemplateColumns","gridGap","gridAutoFlow","gridCard","gridRow","gridColumn","footer","textAlign","scollButton","position","right","bottom","MovieHome","props","useMoviesPaginatedQuery","variables","query","first","data","loading","fetchMore","classes","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","className","Box","movies_paginated","edges","map","edge","key","cursor","Media","node","pageInfo","hasNextPage","Button","onClick","last","after","endCursor","updateQuery","previousQueryResult","fetchMoreResult","totalCount","__typename","disabled","Typography","color","variant","sticky","Zoom","in","Fab","size","KeyboardArrowUp"],"mappings":"mJAqBe,SAASA,IAGtB,OAAO,gBAACC,EAAA,EAAD,CAAaC,MAAM,iBCTb,SAASC,IACtB,OAAO,gBAACF,EAAA,EAAD,CAAaC,MAAM,e,oICI5B,IAAME,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,QAAS,CACPC,OAAQ,SACRC,QAASJ,EAAMK,QAAQ,GACvBC,WAAYN,EAAMO,QAAQD,WAAWE,OAEvCC,SAAU,CACRC,QAAS,OACTC,oBAAqB,iBACrBC,QAASZ,EAAMK,QAAQ,EAAG,GAC1BQ,aAAc,aAEhBC,SAAU,CACRC,QAAS,SACTC,WAAY,UAEdC,OAAQ,CACNb,QAASJ,EAAMK,QAAQ,GACvBa,UAAW,UAEbC,YAAa,CACXC,SAAU,QACVC,MAAOrB,EAAMK,QAAQ,GACrBiB,OAAQtB,EAAMK,QAAQ,SAKb,SAASkB,EAAUC,GAAe,IAAD,UACTC,YAAwB,CAC3DC,UAAW,CACTC,MAAO,CACLC,MAAO,OAHLC,EADsC,EACtCA,KAAMC,EADgC,EAChCA,QAASC,EADuB,EACvBA,UAoCjBC,EAAUlC,IACRmC,EAAWT,EAAXS,OACFC,EAAUC,YAAiB,CAC/BC,OAAQH,EAASA,SAAWI,EAC5BC,mBAAmB,EACnBC,UAAW,MAGb,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAeC,UAAWR,EAAQ9B,SAChC,gBAACuC,EAAA,EAAD,CAAKD,UAAWR,EAAQvB,UAAxB,OACGoB,QADH,IACGA,GADH,UACGA,EAAMa,wBADT,iBACG,EAAwBC,aAD3B,aACG,EAA+BC,KAAI,SAACC,GACnC,OACE,uBAAKC,IAAKD,EAAKE,OAAQP,UAAWR,EAAQlB,UACxC,gBAACkC,EAAA,EAAgBH,EAAKI,YAKzB,OAAJpB,QAAI,IAAJA,GAAA,UAAAA,EAAMa,wBAAN,mBAAwBQ,gBAAxB,eAAkCC,cACjC,gBAACV,EAAA,EAAD,CAAKD,UAAWR,EAAQf,QACtB,gBAACmC,EAAA,EAAD,CAAQC,QAnDD,WAAO,IAAD,IACrBtB,EAAU,CACRL,UAAW,CACTC,MAAO,CACL2B,KAAM,EACNC,MAAK,OAAE1B,QAAF,IAAEA,GAAF,UAAEA,EAAMa,wBAAR,iBAAE,EAAwBQ,gBAA1B,aAAE,EAAkCM,YAG7CC,YAAa,SAACC,EAAD,GAA+C,IAAD,EAAtBC,EAAsB,EAAtBA,gBACnC,UAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAiBjB,wBAArB,aAAI,EAAmCC,MAAO,CAAC,IAAD,EAKxCgB,EAAgBjB,iBAHlBC,EAF0C,EAE1CA,MAIF,MAAO,CACLD,iBAAkB,CAChBQ,SARwC,EAG1CA,SAMEU,WATwC,EAI1CA,WAMEjB,MAAM,GAAD,mBAAMe,EAAoBhB,iBAAiBC,OAA3C,YAAqDA,IAC1DkB,WAAYH,EAAoBhB,iBAAiBmB,aAIvD,OAAOH,MA2BwBI,SAAUhC,GACnC,gBAACiC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,WACvCnC,EAAU,wBAAW,+BAMhC,gBAAC,IAAD,CAAaoC,QAAM,GACjB,gBAACrE,EAAD,MACA,gBAACH,EAAD,OAEF,gBAACyE,EAAA,EAAD,CAAMC,GAAIlC,GACR,gBAACmC,EAAA,EAAD,CAAKC,KAAK,QAAQ9B,UAAWR,EAAQb,aACnC,gBAACoD,EAAA,EAAD","file":"static/js/20.5a625d07.chunk.js","sourcesContent":["import * as React from \"react\";\nimport // Box,\n// makeStyles,\n// Theme,\n// createStyles,\n// Typography,\n// Chip,\n\"@material-ui/core\";\n// import { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\n// import { Face } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       // display: \"flex\",\n//       // alignItems: \"center\",\n//     },\n//   })\n// );\n\nexport default function Filter() {\n  // const classes = useStyles();\n\n  return <Placeholder title=\"TODO Filter.\" />;\n\n  // return (\n  //   <Box className={classes.root}>\n  //     <div>\n  //       <Typography variant=\"caption\">地区</Typography>\n  //       <div>\n  //         <ToggleButtonGroup value={1}>\n  //           <ToggleButton value={1}>其他</ToggleButton>\n  //           <ToggleButton value={2}>其他</ToggleButton>\n  //           <ToggleButton value={3}>其他</ToggleButton>\n  //           <ToggleButton value={4}>其他</ToggleButton>\n  //         </ToggleButtonGroup>\n  //       </div>\n  //     </div>\n\n  //     <div>\n  //       <Typography variant=\"caption\">地区</Typography>\n  //       <div>\n  //         <ToggleButtonGroup value={1}>\n  //           <ToggleButton value={1}>其他</ToggleButton>\n  //           <ToggleButton value={2}>其他</ToggleButton>\n  //           <ToggleButton value={3}>其他</ToggleButton>\n  //           <ToggleButton value={4}>其他</ToggleButton>\n  //         </ToggleButtonGroup>\n  //       </div>\n  //     </div>\n\n  //     <div>\n  //       <Typography variant=\"caption\">标签</Typography>\n  //       <div>\n  //         <Chip\n  //           color=\"secondary\"\n  //           size=\"small\"\n  //           onDelete={() => {}}\n  //           icon={<Face />}\n  //         />\n  //       </div>\n  //     </div>\n  //   </Box>\n  // );\n}\n","import * as React from \"react\";\n// import { Box, makeStyles, Theme, createStyles } from \"@material-ui/core\";\n// import { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Placeholder from \"@/components/base/Placeholder\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       backgroundColor: theme.palette.background.paper,\n//       display: \"flex\",\n//       padding: theme.spacing(2, 0)\n//     }\n//   })\n// );\n\nexport default function Sort() {\n  return <Placeholder title=\"TODO Sort.\" />;\n  // const classes = useStyles();\n  // const [sorts, setSorts] = React.useState(() => [1, 2]);\n\n  // const _changeCall = (_, newSorts: any[]) => {\n  //   setSorts(newSorts);\n  // };\n\n  // return (\n  //   <Box className={classes.root}>\n  //     <ToggleButtonGroup value={sorts} onChange={_changeCall}>\n  //       <ToggleButton value={1}></ToggleButton>\n  //       <ToggleButton value={2}></ToggleButton>\n  //       <ToggleButton value={3}></ToggleButton>\n  //       <ToggleButton value={4}></ToggleButton>\n  //     </ToggleButtonGroup>\n  //   </Box>\n  // );\n}\n","import * as React from \"react\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { ContentScreen, AiderScreen, BodyScreen } from \"@/layouts/PageLayout\";\nimport { Filter, Sort } from \"./modules\";\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  Fab,\n  useScrollTrigger,\n  Zoom,\n  Button,\n  Typography\n} from \"@material-ui/core\";\nimport { KeyboardArrowUp } from \"@material-ui/icons\";\nimport { useMoviesPaginatedQuery } from \"@/schema\";\n\ninterface Props {\n  window?: () => Window;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      margin: \"0 auto\",\n      padding: theme.spacing(2),\n      background: theme.palette.background.paper\n    },\n    gridRoot: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      gridGap: theme.spacing(1, 1),\n      gridAutoFlow: \"row dense\"\n    },\n    gridCard: {\n      gridRow: \"1 span\",\n      gridColumn: \"1 span\"\n    },\n    footer: {\n      padding: theme.spacing(2),\n      textAlign: \"center\"\n    },\n    scollButton: {\n      position: \"fixed\",\n      right: theme.spacing(2),\n      bottom: theme.spacing(2)\n    }\n  })\n);\n\nexport default function MovieHome(props: Props) {\n  const { data, loading, fetchMore } = useMoviesPaginatedQuery({\n    variables: {\n      query: {\n        first: 16\n      }\n    }\n  });\n  const loadMore = () => {\n    fetchMore({\n      variables: {\n        query: {\n          last: 8,\n          after: data?.movies_paginated?.pageInfo?.endCursor\n        }\n      },\n      updateQuery: (previousQueryResult, { fetchMoreResult }) => {\n        if (fetchMoreResult?.movies_paginated?.edges) {\n          const {\n            edges,\n            pageInfo,\n            totalCount\n          } = fetchMoreResult.movies_paginated;\n          return {\n            movies_paginated: {\n              pageInfo,\n              totalCount,\n              edges: [...previousQueryResult.movies_paginated.edges, ...edges],\n              __typename: previousQueryResult.movies_paginated.__typename\n            }\n          };\n        }\n        return previousQueryResult;\n      }\n    });\n  };\n\n  const classes = useStyles();\n  const { window } = props;\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 500\n  });\n\n  return (\n    <BodyScreen>\n      <ContentScreen className={classes.content}>\n        <Box className={classes.gridRoot}>\n          {data?.movies_paginated?.edges?.map((edge: any) => {\n            return (\n              <div key={edge.cursor} className={classes.gridCard}>\n                <MediaNormal {...edge.node} />\n              </div>\n            );\n          })}\n        </Box>\n        {data?.movies_paginated?.pageInfo?.hasNextPage && (\n          <Box className={classes.footer}>\n            <Button onClick={loadMore} disabled={loading}>\n              <Typography color=\"textSecondary\" variant=\"caption\">\n                {loading ? \"加载中...\" : \"加载更多\"}\n              </Typography>\n            </Button>\n          </Box>\n        )}\n      </ContentScreen>\n      <AiderScreen sticky>\n        <Sort />\n        <Filter />\n      </AiderScreen>\n      <Zoom in={trigger}>\n        <Fab size=\"small\" className={classes.scollButton}>\n          <KeyboardArrowUp />\n        </Fab>\n      </Zoom>\n    </BodyScreen>\n  );\n}\n"],"sourceRoot":""}