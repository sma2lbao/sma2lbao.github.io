{"version":3,"sources":["components/app/FileUpload/useFileUpload.tsx","components/app/FileUpload/FileUpload.tsx","components/app/FileUpload/index.ts","components/base/Editor/NormalEditor.tsx","views/movies/MovieUpload/modules/EditAbout/index.tsx","components/app/Input/useEditableInput.tsx","components/app/Input/EditableInput.tsx","views/movies/MovieUpload/modules/EditCast/index.tsx","views/movies/MovieUpload/modules/EditTop/index.tsx","views/movies/MovieUpload/modules/EditMediumInfo/index.tsx","views/movies/MovieUpload/modules/EditMain/index.tsx","components/base/Confirm/index.tsx","views/movies/MovieUpload/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flexDirection","justifyContent","alignItems","width","props","height","color","palette","text","secondary","flex","icon","custom","base","large","FileUpload","onComplete","onError","children","component","title","classes","inputRef","React","useUploadFileOssMutation","onCompleted","data","upload_file_oss","error","message","loading","Tag","role","onClick","current","click","ref","style","type","accept","onChange","e","currentTarget","validity","file","files","valid","variables","Box","className","CloudUpload","Typography","variant","defaultProps","NormalEditor","raw","onBlur","placeholder","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorState","setEditorState","getRawString","stringify","convertToRaw","getCurrentContent","EditAbout","aboutRaw","setAboutRaw","about","editorRef","rawString","useEditableInput","initValue","value","setValue","target","input","borderColor","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","inherit","EditableInput","rest","Input","backgroundColor","background","paper","EditCast","credits","setCredits","handleChange","dataset","idx","key","cur","List","subheader","ListSubheader","IconButton","avatar","name","description","tags","size","AddCircle","fontSize","length","map","item","ListItem","ListItemAvatar","Avatar","src","inputProps","ListItemSecondaryAction","newCredits","splice","handleDelete","Delete","Placeholder","position","aider","left","top","bottom","padding","spacing","aiderContent","borderRadius","shape","maxHeight","backdropFilter","overflow","main","right","transform","mainContent","posters","posterTool","EditTop","setTitle","sub_title","setSubTitle","setDescription","setPosters","cover","setCover","includes","handleRemovePoster","window","confirm","handleChangeCover","Image","aspectRatio","DEFULAT_MOVIE_COVER","GridList","cellHeight","cols","poster","GridListTile","alt","data-idx","imageUrl","gutterBottom","mt","Button","disabled","body","margin","content","borderRight","divider","sourceWrap","EditMediumInfo","onSave","onCancel","open","setOpen","url","setUrl","setName","alias_name","setAliasName","handleCancle","Dialog","fullScreen","onClose","AppBar","Toolbar","sourceUrl","sticky","box","borderTop","EditMain","forwardRef","useState","openMedium","setOpenMedium","mediums","setMediums","useImperativeHandle","Media","medium","ShowDialog","DialogTitle","DialogContent","DialogContentText","DialogActions","cancel","cancelText","onConfirm","autoFocus","confirmText","Confirm","dialog","options","Promise","resolve","reject","mountPoint","document","createElement","appendChild","clear","remove","ReactDOM","render","MovieUpload","RouterHelper","useRouterHelper","tab","setTab","topRef","mainRef","aboutRef","castRef","useCreateMovieMutation","then","gotoHome","create_movie","Tabs","val","Tab","label","hidden","topFields","mainFields","aboutFields","castFields","movie","sources"],"mappings":"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","file":"static/js/13.8939c37a.chunk.js","sourcesContent":["export const useFileUpload = () => {};\n","import * as React from \"react\";\nimport { useUploadFileOssMutation } from \"@/schema\";\nimport { BaseFileUploadProps } from \"./file-upload\";\nimport {\n  Box,\n  makeStyles,\n  Theme,\n  createStyles,\n  Typography\n} from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport { IPlaceholderProps } from \"@/components/base/Placeholder/placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: IPlaceholderProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: IPlaceholderProps) => {\n        return props.height ?? \"100%\";\n      },\n      color: theme.palette.text.secondary,\n      flex: 1\n    },\n    icon: theme.custom.base.icon.large\n  })\n);\n\nexport const FileUpload: React.FC<BaseFileUploadProps> = props => {\n  const { onComplete, onError, children, component, custom, title } = props;\n  const classes = useStyles(props);\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const [upload_file_oss, { loading }] = useUploadFileOssMutation({\n    onCompleted(data) {\n      onComplete && onComplete(data.upload_file_oss);\n    },\n    onError(error) {\n      onError && onError(error.message);\n    }\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity.valid) {\n      upload_file_oss({ variables: { file } });\n    }\n  };\n\n  const handleClick = () => {\n    if (!loading) {\n      inputRef.current?.click();\n    }\n  };\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag role=\"button\" onClick={handleClick}>\n      <input\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\"*\"\n        onChange={handleChange}\n      />\n      {custom ? (\n        { children }\n      ) : (\n        <Box className={classes.root}>\n          <div>\n            <CloudUpload className={classes.icon} />\n            {/* <CircularProgress className={classes.icon} /> */}\n          </div>\n          <Typography variant=\"h6\">{loading ? \"上传中...\" : title}</Typography>\n        </Box>\n      )}\n    </Tag>\n  );\n};\n\nFileUpload.defaultProps = {\n  custom: false,\n  title: \"点击上传\"\n};\n","export * from \"./useFileUpload\";\nexport * from \"./FileUpload\";\n","import * as React from \"react\";\nimport { Editor, EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps, BaseEditorHandles } from \"./editor\";\n\nexport const NormalEditor = React.forwardRef<\n  BaseEditorHandles,\n  BaseEditorProps\n>((props, ref) => {\n  const { raw, onBlur, placeholder } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    raw\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(raw)))\n      : EditorState.createEmpty()\n  );\n\n  React.useImperativeHandle(ref, () => ({\n    getRawString: () => {\n      return JSON.stringify(convertToRaw(editorState.getCurrentContent()));\n    }\n  }));\n\n  return (\n    <Editor\n      editorState={editorState}\n      onChange={setEditorState}\n      onBlur={onBlur}\n      placeholder={placeholder}\n    />\n  );\n});\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\nimport { EditorHandles } from \"@/components/base/Editor/editor\";\n\nexport interface EditAboutHandles {\n  about?: string;\n}\n\nexport const EditAbout = React.forwardRef<EditAboutHandles, unknown>(\n  (props, ref) => {\n    const [aboutRaw, setAboutRaw] = React.useState(\"\");\n\n    React.useImperativeHandle(ref, () => ({\n      about: aboutRaw\n    }));\n    const editorRef = React.createRef<EditorHandles>();\n\n    const handleBlur = () => {\n      const rawString = editorRef.current?.getRawString();\n      setAboutRaw(rawString);\n    };\n\n    return (\n      <div>\n        <NormalEditor ref={editorRef} onBlur={handleBlur} />\n      </div>\n    );\n  }\n);\n\nexport default EditAbout;\n","import * as React from \"react\";\n\nexport const useEditableInput = (initValue?: any): [any, any] => {\n  const [value, setValue] = React.useState(initValue);\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n  };\n\n  return [value, onChange];\n};\n","import * as React from \"react\";\nimport { Input, makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport { BaseInputProps } from \"./input\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {},\n    input: {\n      borderColor: \"transparent\"\n    },\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n    /* Styles applied to the root element if `variant=\"inherit\"`. */\n    inherit: {}\n  });\n});\n\nexport const EditableInput: React.FC<BaseInputProps> = props => {\n  const { value, onChange, placeholder, variant = \"body1\", ...rest } = props;\n  const classes = useStyles();\n  return (\n    <Input\n      classes={{\n        root: classes.root\n      }}\n      className={classes[variant]}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      {...rest}\n    />\n  );\n};\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\nimport { EditableInput } from \"@/components/app/Input\";\n\nexport interface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport interface EditCastHandles {\n  credits: CharacterEdit[];\n}\n\nexport const EditCast = React.forwardRef<EditCastHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      credits\n    }));\n\n    const handleAddCredit = () => {\n      setCredits([\n        ...credits,\n        {\n          avatar: \"\",\n          name: \"\",\n          description: \"\",\n          tags: []\n        }\n      ]);\n    };\n\n    const handleChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      const { dataset, value } = e.target;\n      if (dataset.idx && dataset.key) {\n        const cur = credits[dataset.idx];\n        cur[dataset.key] = value;\n        setCredits([...credits, cur]);\n      }\n    };\n\n    const handleDelete = (idx: number) => {\n      const newCredits = credits.splice(idx, 1);\n      setCredits([...newCredits]);\n    };\n\n    return (\n      <Box className={classes.root}>\n        <List\n          subheader={\n            <ListSubheader>\n              <Typography>演职表</Typography>\n              <IconButton onClick={handleAddCredit} size=\"small\">\n                <AddCircle fontSize=\"small\" />\n              </IconButton>\n            </ListSubheader>\n          }\n        >\n          {credits.length ? (\n            <>\n              {credits.map((item, idx) => {\n                return (\n                  <ListItem key={idx}>\n                    <ListItemAvatar>\n                      <Avatar src={item.avatar}></Avatar>\n                    </ListItemAvatar>\n                    <div>\n                      <EditableInput\n                        inputProps={{ \"data-idx\": idx, \"data-key\": \"name\" }}\n                        value={item.name}\n                        onChange={handleChange}\n                        placeholder=\"请输入名字\"\n                      />\n\n                      <EditableInput\n                        inputProps={{\n                          \"data-idx\": idx,\n                          \"data-key\": \"description\"\n                        }}\n                        value={item.name}\n                        onChange={handleChange}\n                        placeholder=\"请输入描述\"\n                      />\n                    </div>\n                    <ListItemSecondaryAction>\n                      <IconButton onClick={() => handleDelete(idx)}>\n                        <Delete />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </>\n          ) : (\n            <div>\n              <Placeholder title=\"请添加演职人员\" />\n            </div>\n          )}\n        </List>\n      </Box>\n    );\n  }\n);\n\nexport default EditCast;\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Button,\n  Box,\n  GridList,\n  GridListTile\n} from \"@material-ui/core\";\n\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    aider: {\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"45%\",\n      padding: theme.spacing(8)\n    },\n    aiderContent: {\n      width: \"50%\",\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      maxHeight: \"100%\",\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      overflow: \"auto\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    mainContent: {\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      padding: theme.spacing(4),\n      borderRadius: theme.shape.borderRadius\n    },\n    posters: {},\n    posterTool: {\n      display: \"none\"\n    }\n  })\n);\n\nexport interface EditTopHandles {\n  title: string;\n\n  sub_title?: string;\n\n  description?: string;\n\n  posters?: string[];\n\n  cover: string;\n}\n\nexport const EditTop = React.forwardRef<EditTopHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [title, setTitle] = useEditableInput(\"\");\n    const [sub_title, setSubTitle] = useEditableInput(\"\");\n    const [description, setDescription] = useEditableInput(\"\");\n    const [posters, setPosters] = React.useState<string[]>([]);\n    const [cover, setCover] = React.useState<string>(\"\");\n\n    React.useEffect(() => {\n      if (posters && posters.length > 0) {\n        if (!cover || !posters.includes(cover)) setCover(posters[0]);\n      } else {\n        setCover(\"\");\n      }\n    }, [cover, posters]);\n\n    React.useImperativeHandle(ref, () => ({\n      title,\n      sub_title,\n      description,\n      posters,\n      cover\n    }));\n\n    const handleAddPoster = imageUrl => {\n      if (imageUrl && !posters.includes(imageUrl)) {\n        setPosters([...posters, imageUrl]);\n      }\n    };\n\n    const handleRemovePoster = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const result = window.confirm(\"delete?\");\n      if (result) {\n        const { dataset } = e.currentTarget;\n        if (dataset.idx) {\n          posters.splice(+dataset.idx, 1);\n          setPosters([...posters]);\n        }\n      }\n    };\n\n    const handleChangeCover = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const { dataset } = e.currentTarget;\n      if (dataset.idx) {\n        setCover(posters[dataset.idx]);\n      }\n    };\n\n    return (\n      <div className={classes.root}>\n        <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n        <div className={classes.aider}>\n          <div className={classes.aiderContent}>\n            <GridList cellHeight=\"auto\" className={classes.posters} cols={1}>\n              {posters.map((poster, idx) => (\n                <GridListTile key={poster} cols={1}>\n                  <Image\n                    aspectRatio={16 / 9}\n                    src={poster}\n                    alt={\"poster\" + idx}\n                  />\n                  <div className={classes.posterTool}>\n                    <div data-idx={idx} onClick={handleRemovePoster}>\n                      remove poster\n                    </div>\n                    <div data-idx={idx} onClick={handleChangeCover}>\n                      {cover === poster ? \"is cover\" : \"isn't cover\"}\n                    </div>\n                  </div>\n                </GridListTile>\n              ))}\n              <GridListTile cols={1}>\n                <FileUpload onComplete={handleAddPoster} title=\"上传海报\" />\n              </GridListTile>\n            </GridList>\n          </div>\n        </div>\n        <div className={classes.main}>\n          <div className={classes.mainContent}>\n            <Typography gutterBottom variant=\"h4\" component=\"div\">\n              <EditableInput\n                variant=\"h4\"\n                value={title}\n                onChange={setTitle}\n                placeholder=\"movie title\"\n              />\n            </Typography>\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n              <EditableInput\n                value={sub_title}\n                onChange={setSubTitle}\n                placeholder=\"请输入副标题\"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\">\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"请输入电影描述...\"\n              />\n            </Typography>\n            <Box mt={3}>\n              <Button disabled size=\"large\" variant=\"contained\" color=\"primary\">\n                播放\n              </Button>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default EditTop;\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    sourceWrap: {\n      width: \"100%\",\n      position: \"relative\"\n    }\n  })\n);\n\nexport interface EditMediumInfoProp {\n  open: boolean;\n\n  onSave?(medium: unknown): void;\n\n  onCancel?(): void;\n}\n\nexport const EditMediumInfo: React.FC<EditMediumInfoProp> = (\n  props: EditMediumInfoProp\n) => {\n  const { onSave, onCancel } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [url, setUrl] = React.useState(\"\");\n  const [cover, setCover] = React.useState(\"\");\n  const [name, setName] = useEditableInput(\"\");\n  const [alias_name, setAliasName] = useEditableInput(\"\");\n  const [description, setDescription] = useEditableInput(\"\");\n\n  React.useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  const reset = () => {\n    setOpen(false);\n    setUrl(\"\");\n    setCover(\"\");\n    setName(\"\");\n    setAliasName(\"\");\n    setDescription(\"\");\n  };\n\n  const handleChangeCover = imageUrl => {\n    if (imageUrl) {\n      setCover(imageUrl);\n    }\n  };\n\n  const handleChangeSource = sourceUrl => {\n    if (sourceUrl) {\n      setUrl(sourceUrl);\n    }\n  };\n\n  const handleSave = () => {\n    onSave &&\n      onSave({\n        url,\n        cover,\n        name,\n        alias_name,\n        description\n      });\n    handleCancle();\n  };\n\n  const handleCancle = () => {\n    setOpen(false);\n    onCancel && onCancel();\n    reset();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleCancle}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Button onClick={handleSave} color=\"inherit\">\n              save\n            </Button>\n            <Button onClick={handleCancle} color=\"inherit\">\n              cancle\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <FullScreen>\n            <BodyScreen>\n              <div className={classes.sourceWrap}>\n                <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n                <FileUpload onComplete={handleChangeCover}>\n                  add cover\n                </FileUpload>\n                <FileUpload onComplete={handleChangeSource}>\n                  add source\n                </FileUpload>\n              </div>\n            </BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              {/* <VideoInfo /> */}\n              {/* <NextPlay /> */}\n              <EditableInput\n                value={name}\n                onChange={setName}\n                placeholder=\"name\"\n              />\n              <EditableInput\n                value={alias_name}\n                onChange={setAliasName}\n                placeholder=\"alias_name\"\n              />\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"description...\"\n              />\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              {/* <Comment /> */}\n              <Placeholder title=\"评论区\" />\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  GridList,\n  GridListTile,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { EditMediumInfo } from \"../EditMediumInfo\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport interface EditMainHandles {\n  mediums: any[];\n}\n\nexport const EditMain = React.forwardRef<EditMainHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [openMedium, setOpenMedium] = React.useState(false);\n    const [mediums, setMediums] = React.useState<any>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      mediums: mediums\n    }));\n\n    const handleSave = medium => {\n      setMediums([...mediums, medium]);\n    };\n\n    return (\n      <>\n        <Box className={classes.root}>\n          <Box className={classes.box}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              相关资源\n            </Typography>\n            <GridList cellHeight=\"auto\" cols={4}>\n              {mediums.map((item, idx) => {\n                return (\n                  <GridListTile cols={1} key={idx}>\n                    <MediaNormal {...item} />\n                  </GridListTile>\n                );\n              })}\n\n              <Button onClick={() => setOpenMedium(true)}>添加</Button>\n            </GridList>\n          </Box>\n          {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n        </Box>\n        <EditMediumInfo\n          open={openMedium}\n          onSave={handleSave}\n          onCancel={() => setOpenMedium(false)}\n        />\n      </>\n    );\n  }\n);\n\nexport default EditMain;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  DialogProps\n} from \"@material-ui/core\";\n\ninterface ConfirmProps extends Omit<DialogProps, \"open\"> {\n  title?: string;\n  content: string;\n  cancel?: boolean;\n  cancelText?: string;\n  confirmText?: string;\n}\n\ninterface ConfirmEventProps {\n  onConfirm?(): void;\n  onCancel?(): void;\n}\n\nconst ShowDialog = (props: ConfirmEventProps & ConfirmProps) => {\n  const [open, setOpen] = React.useState(true);\n  const handleCancel = () => {\n    setOpen(false);\n    props.onCancel && props.onCancel();\n  };\n\n  const handleConfirm = () => {\n    setOpen(false);\n    props.onConfirm && props.onConfirm();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onCancel && props.onCancel();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        {props.title && <DialogTitle>{props.title}</DialogTitle>}\n        <DialogContent>\n          <DialogContentText>{props.content}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {props.cancel && (\n            <Button onClick={handleCancel} color=\"primary\">\n              {props.cancelText || \"取消\"}\n            </Button>\n          )}\n          <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n            {props.confirmText || \"确定\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport const Confirm = {\n  dialog: function(options: ConfirmProps): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const mountPoint = document.createElement(\"div\");\n      document.body.appendChild(mountPoint);\n      const clear = () => {\n        mountPoint.remove();\n      };\n      const onConfirm = () => {\n        resolve(true);\n        clear();\n      };\n      const onCancel = () => {\n        resolve(false);\n        clear();\n      };\n      ReactDOM.render(\n        <div>\n          <ShowDialog {...options} onConfirm={onConfirm} onCancel={onCancel} />\n        </div>,\n        mountPoint\n      );\n    });\n  }\n};\n\nexport default Confirm;\n","import * as React from \"react\";\nimport {\n  EditAbout,\n  EditCast,\n  EditMain,\n  EditTop,\n  EditCastHandles,\n  EditTopHandles,\n  EditMainHandles,\n  EditAboutHandles\n} from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport { useCreateMovieMutation } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport Confirm from \"@/components/base/Confirm\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const MovieUpload: React.FC = () => {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [tab, setTab] = React.useState(0);\n  const topRef = React.createRef<EditTopHandles>();\n  const mainRef = React.createRef<EditMainHandles>();\n  const aboutRef = React.createRef<EditAboutHandles>();\n  const castRef = React.createRef<EditCastHandles>();\n\n  const [create_movie] = useCreateMovieMutation({\n    onCompleted() {\n      Confirm.dialog({\n        title: \"提示\",\n        content: \"上传成功。\"\n      }).then(() => {\n        RouterHelper.gotoHome();\n      });\n    }\n  });\n\n  const handleCreateMovie = () => {\n    const topFields = topRef.current;\n    const mainFields = mainRef.current;\n    const aboutFields = aboutRef.current;\n    const castFields = castRef.current;\n\n    create_movie({\n      variables: {\n        movie: {\n          title: topFields?.title || \"\",\n          cover: topFields?.cover || \"\",\n          posters: topFields?.posters,\n          description: topFields?.description,\n          credits: castFields?.credits,\n          about: aboutFields?.about,\n          sources: mainFields?.mediums\n        }\n      }\n    });\n  };\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop ref={topRef} />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMain ref={mainRef} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} />\n            </div>\n            <div>\n              <div onClick={handleCreateMovie}>create</div>\n            </div>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default MovieUpload;\n"],"sourceRoot":""}