{"version":3,"sources":["../node_modules/@material-ui/icons/esm/MoreVert.js","views/movies/Movie/modules/About/index.tsx","../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","views/movies/Movie/modules/Cast/index.tsx","views/movies/Movie/modules/MovieMain/index.tsx","views/movies/Movie/modules/Relative/index.tsx","views/movies/Movie/modules/Top/index.tsx","views/movies/Movie/index.tsx"],"names":["createElement","d","useStyles","makeStyles","theme","createStyles","root","height","default","display","flexDirection","justifyContent","alignItems","padding","spacing","color","palette","text","secondary","emptyIcon","fontSize","About","props","classes","html","Box","className","dangerouslySetInnerHTML","__html","clsx","Typography","ref","_props$color","_props$component","component","Component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","other","concat","capitalize","sticky","gutters","withStyles","boxSizing","lineHeight","listStyle","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","colorPrimary","primary","main","colorInherit","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","name","background","paper","Cast","List","subheader","map","_","i","ListItem","key","ListItemAvatar","Avatar","src","ListItemText","ListItemSecondaryAction","IconButton","MoreVert","box","borderTop","divider","MovieMain","variant","gutterBottom","GridList","cellHeight","cols","GridListTile","Relative","width","right","transform","Top","movieQuery","React","MovieContext","RouterHelper","useRouterHelper","Image","aspectRatio","movie","cover","DEFULAT_MOVIE_COVER","mt","Button","size","onClick","gotoMoviePlay","id","borderRight","flex","aider","content","undefined","Movie","useParams","useMovieQuery","variables","data","error","console","log","tab","setTab","Provider","value","Tabs","onChange","e","val","Tab","label","description"],"mappings":"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","file":"static/js/10.f1a15ba9.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import * as React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    default: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: theme.spacing(5),\n      color: theme.palette.text.secondary\n    },\n    emptyIcon: {\n      fontSize: 150\n      // marginBottom: theme.spacing(3)\n    }\n  })\n);\n\nexport interface AboutProps {\n  html?: string;\n}\n\nexport default function About(props: AboutProps) {\n  const classes = useStyles();\n  // const defaulHtml = \"该资源没有介绍\";\n  const { html } = props;\n  return (\n    <Box className={classes.root}>\n      {html ? (\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      ) : (\n        <Box className={classes.default}>\n          <i className={clsx(\"iconfont icon-404\", classes.emptyIcon)}></i>\n          <Typography>该资源没有介绍</Typography>\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MoreVert } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nconst Cast: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <List\n        subheader={\n          <ListSubheader>\n            <div>演职表</div>\n            {/* <div>\n              <IconButton>\n                <AddCircle />\n              </IconButton>\n              <IconButton>\n                <AddCircle />\n              </IconButton>\n              <IconButton>\n                <AddCircle />\n              </IconButton>\n            </div> */}\n          </ListSubheader>\n        }\n      >\n        {[1, 2, 3, 4].map((_, i) => {\n          return (\n            <ListItem key={i}>\n              <ListItemAvatar>\n                <Avatar src=\"\"></Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"姓名\" secondary=\"介绍\" />\n              <ListItemSecondaryAction>\n                <IconButton>\n                  <MoreVert />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default Cast;\n","import React from \"react\";\nimport { Box, Typography, GridList, GridListTile } from \"@material-ui/core\";\n// import { Rating } from \"@material-ui/lab\";\n// import { Favorite } from \"@material-ui/icons\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/MediaCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport default function MovieMain() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          平均评分\n        </Typography>\n        <Rating\n          readOnly\n          value={2}\n          precision={0.5}\n          icon={<Favorite fontSize=\"inherit\" />}\n        />\n      </Box> */}\n      <Box className={classes.box}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          视频图片\n        </Typography>\n        <GridList cellHeight=\"auto\" cols={4}>\n          <GridListTile cols={1}>\n            <MediaNormal />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <MediaNormal />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <MediaNormal />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <MediaNormal />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <MediaNormal />\n          </GridListTile>\n        </GridList>\n      </Box>\n      <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport { MediaNormal } from \"@/components/app/MediaCard\";\nimport { Box, GridListTile, GridList, Typography } from \"@material-ui/core\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2, 0)\n    }\n  })\n);\n\nexport default function Relative() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        喜欢该视频的也喜欢\n      </Typography>\n      <GridList cellHeight=\"auto\" cols={4}>\n        <GridListTile>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile>\n          <MediaNormal />\n        </GridListTile>\n      </GridList>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { MovieContext } from \"../..\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Typography, Button, Box } from \"@material-ui/core\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\"\n    }\n  })\n);\n\nexport const Top: React.FC = () => {\n  const movieQuery = React.useContext(MovieContext);\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n\n  const goMoviePlay = () => {\n    RouterHelper.gotoMoviePlay(movieQuery?.movie.id);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Image\n        aspectRatio={16 / 9}\n        src={\n          (movieQuery && movieQuery.movie && movieQuery.movie.cover) ||\n          DEFULAT_MOVIE_COVER\n        }\n      />\n      <div className={classes.main}>\n        <Typography gutterBottom variant=\"h4\" component=\"div\">\n          电影名\n        </Typography>\n        <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n          电影信息补充\n        </Typography>\n        {/* <div></div> */}\n        <Typography variant=\"body2\" component=\"div\">\n          电影介绍一定要长，这样才能撑开布局，这样才好看，一般是三行最佳。\n          电影介绍一定要长，这样才能撑开布局，这样才好看，一般是三行最佳。\n          电影介绍一定要长，这样才能撑开布局，这样才好看，一般是三行最佳。\n          电影介绍一定要长，这样才能撑开布局，这样才好看，一般是三行最佳。\n        </Typography>\n        <Box mt={3}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={goMoviePlay}\n          >\n            播放\n          </Button>\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default Top;\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Box } from \"@material-ui/core\";\nimport { MovieMain, Relative, Cast, About, Top } from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport { useMovieQuery, MovieQuery } from \"@/schema\";\nimport { useParams } from \"react-router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`,\n      flex: 4\n    },\n    aider: {\n      flex: 1\n    },\n    content: {\n      flex: 1\n    }\n  })\n);\n\nexport const MovieContext = React.createContext<MovieQuery | undefined>(\n  undefined\n);\n\nexport default function Movie() {\n  const { id } = useParams();\n  const { data, error } = useMovieQuery({\n    variables: {\n      id: id\n    }\n  });\n\n  console.log(error);\n  const classes = useStyles();\n  const [tab, setTab] = React.useState(0);\n\n  return (\n    <Box>\n      <MovieContext.Provider value={data}>\n        <FullScreen>\n          <BodyScreen>\n            <Top />\n          </BodyScreen>\n        </FullScreen>\n        <BodyScreen>\n          <ContentScreen className={classes.main}>\n            <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n              <Tab label=\"信息\"></Tab>\n              <Tab label=\"相关推荐\"></Tab>\n              <Tab label=\"关于\"></Tab>\n            </Tabs>\n            <div className={classes.content}>\n              {tab === 0 && <MovieMain />}\n              {tab === 1 && <Relative />}\n              {tab === 2 && <About html={data?.movie?.description || \"\"} />}\n            </div>\n          </ContentScreen>\n          <AiderScreen className={classes.aider}>\n            <Cast />\n          </AiderScreen>\n        </BodyScreen>\n      </MovieContext.Provider>\n    </Box>\n  );\n}\n"],"sourceRoot":""}