{"version":3,"sources":["components/base/Placeholder/PlaceholderDefault.tsx","components/base/Placeholder/index.ts","components/base/Editor/NormalEditor.tsx","views/movies/MovieUpload/modules/EditAbout/index.tsx","views/movies/MovieUpload/modules/EditCast/index.tsx","views/movies/MovieUpload/modules/EditMediumInfo/index.tsx","views/movies/MovieUpload/modules/EditMovieMain/index.tsx","views/movies/MovieUpload/modules/EditTop/index.tsx","views/movies/MovieUpload/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","icon","fontSize","PlaceholderDefault","props","classes","title","subtitle","className","clsx","Placeholder","NormalEditor","React","EditorState","createEmpty","editorState","setEditorState","onChange","EditAbout","root","backgroundColor","palette","background","paper","EditCast","credits","setCredits","handleChange","e","target","dataset","value","idx","key","cur","Box","List","subheader","ListSubheader","Typography","IconButton","onClick","avatar","name","description","tags","size","AddCircle","length","map","item","ListItem","ListItemAvatar","Avatar","src","ListItemText","primary","Input","data-idx","data-key","placeholder","secondary","ListItemSecondaryAction","Edit","Done","Delete","height","body","display","margin","content","padding","spacing","borderRight","divider","aider","overflow","box","borderTop","EditMovieMain","variant","gutterBottom","GridList","cellHeight","cols","GridListTile","position","width","main","top","right","transform","color","EditTop","sub_title","movie","setMovie","Image","aspectRatio","DEFULAT_MOVIE_COVER","component","rows","mt","Button","disabled","MovieUpload","tab","setTab","Tabs","val","Tab","label"],"mappings":"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","file":"static/js/12.75b80d37.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { IPlaceholderProps } from \"./placeholder.d\";\nimport clsx from \"clsx\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    icon: {\n      fontSize: 120\n    }\n  })\n);\n\nexport const PlaceholderDefault: React.FC<IPlaceholderProps> = (\n  props: IPlaceholderProps\n) => {\n  const classes = useStyles();\n  const { title, subtitle } = props;\n  return (\n    <div>\n      <div>\n        <div>\n          <i className={clsx(\"iconfont icon-404\", classes.icon)}></i>\n        </div>\n        {title && <div>{title}</div>}\n        {subtitle && <div>{subtitle}</div>}\n      </div>\n    </div>\n  );\n};\n","import { PlaceholderDefault } from \"./PlaceholderDefault\";\n\nexport default PlaceholderDefault;\nexport const Placeholder = PlaceholderDefault;\nexport * from \"./PlaceholderDefault\";\n","import * as React from \"react\";\nimport { Editor, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps } from \"./editor\";\n\nexport const NormalEditor: React.FC<BaseEditorProps> = (\n  props: BaseEditorProps\n) => {\n  //   const { value, onChange } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    EditorState.createEmpty()\n  );\n\n  const handleChange = (editorState: EditorState) => {\n    setEditorState(editorState);\n  };\n\n  return <Editor editorState={editorState} onChange={handleChange} />;\n};\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\n\nexport const EditAbout: React.FC = () => {\n  return (\n    <div>\n      <NormalEditor />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography,\n  Input\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete, Done, Edit } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\n\ninterface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport const EditCast: React.FC = () => {\n  const classes = useStyles();\n  const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n  const handleAddCredit = () => {\n    setCredits([\n      ...credits,\n      {\n        avatar: \"\",\n        name: \"\",\n        description: \"\",\n        tags: []\n      }\n    ]);\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const { dataset, value } = e.target;\n    if (dataset.idx && dataset.key) {\n      const cur = credits[dataset.idx];\n      cur[dataset.key] = value;\n      setCredits([...credits, cur]);\n    }\n  };\n\n  return (\n    <Box className={classes.root}>\n      <List\n        subheader={\n          <ListSubheader>\n            <Typography>演职表</Typography>\n            <IconButton onClick={handleAddCredit} size=\"small\">\n              <AddCircle fontSize=\"small\" />\n            </IconButton>\n          </ListSubheader>\n        }\n      >\n        {credits.length ? (\n          <>\n            {credits.map((item, idx) => {\n              return (\n                <ListItem key={idx}>\n                  {\n                    <div>\n                      <ListItemAvatar>\n                        <Avatar src={item.avatar}></Avatar>\n                      </ListItemAvatar>\n                    </div>\n                  }\n                  <ListItemText\n                    primary={\n                      <div>\n                        <Input\n                          data-idx={idx}\n                          data-key=\"name\"\n                          onChange={handleChange}\n                          value={item.name}\n                          placeholder=\"请输入名字\"\n                        />\n                      </div>\n                    }\n                    secondary={\n                      <div>\n                        <Input\n                          data-idx={idx}\n                          data-key=\"description\"\n                          value={item.description}\n                          placeholder=\"请输入描述\"\n                        />\n                      </div>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton>\n                      <Edit />\n                    </IconButton>\n                    <IconButton>\n                      <Done />\n                    </IconButton>\n                    <IconButton>\n                      <Delete />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n          </>\n        ) : (\n          <div>\n            <Placeholder title=\"请添加演职人员\" />\n          </div>\n        )}\n      </List>\n    </Box>\n  );\n};\n\nexport default EditCast;\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    }\n  })\n);\n\nexport const EditMediumInfo: React.FC = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleClose}>\n        <AppBar>\n          <Toolbar>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <FullScreen>\n            <BodyScreen>{/* <MoviePlayer /> */}</BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              {/* <VideoInfo /> */}\n              {/* <NextPlay /> */}\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              {/* <Comment /> */}\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Box, Typography, GridList, GridListTile } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/MediaCard\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport const EditMovieMain: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.box}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          相关资源\n        </Typography>\n        <GridList cellHeight=\"auto\" cols={4}>\n          <GridListTile cols={1}>\n            <MediaNormal />\n          </GridListTile>\n        </GridList>\n      </Box>\n      {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n    </Box>\n  );\n};\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Typography, Button, Box, Input } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\"\n    }\n  })\n);\n\nexport const EditTop: React.FC = () => {\n  const classes = useStyles();\n  const [movie, setMovie] = React.useState({\n    title: \"\",\n    sub_title: \"\",\n    description: \"\"\n  });\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const { dataset, value } = e.target;\n    if (dataset.key) {\n      setMovie({\n        ...movie,\n        [dataset.key]: value\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n      <div className={classes.main}>\n        <Typography gutterBottom variant=\"h4\" component=\"div\">\n          <Input\n            data-key=\"title\"\n            value={movie.title}\n            onChange={handleChange}\n            // placeholder=\"请输入名字\"\n          />\n        </Typography>\n        <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n          <Input\n            data-key=\"sub_title\"\n            value={movie.sub_title}\n            onChange={handleChange}\n            // placeholder=\"请输入名字\"\n          />\n        </Typography>\n        {/* <div></div> */}\n        <Typography variant=\"body2\" component=\"div\">\n          <Input\n            rows={4}\n            data-key=\"description\"\n            value={movie.description}\n            onChange={handleChange}\n            // placeholder=\"请输入名字\"\n          />\n        </Typography>\n        <Box mt={3}>\n          <Button disabled size=\"large\" variant=\"contained\" color=\"primary\">\n            播放\n          </Button>\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default EditTop;\n","import * as React from \"react\";\nimport { EditAbout, EditCast, EditMovieMain, EditTop } from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const MovieUpload: React.FC = () => {\n  const classes = useStyles();\n  const [tab, setTab] = React.useState(0);\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            {tab === 0 && <EditMovieMain />}\n            {/* {tab === 1 && <Relative />} */}\n            {tab === 2 && <EditAbout />}\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default MovieUpload;\n"],"sourceRoot":""}