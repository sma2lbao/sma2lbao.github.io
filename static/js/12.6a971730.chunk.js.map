{"version":3,"sources":["components/app/FileUpload/useFileUpload.tsx","components/app/FileUpload/FileUpload.tsx","components/app/FileUpload/index.ts","../node_modules/@material-ui/icons/esm/CloudUpload.js","views/Test/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flexDirection","justifyContent","alignItems","width","props","height","color","palette","text","secondary","flex","icon","custom","base","large","FileUpload","onComplete","onError","children","component","classes","inputRef","React","useUploadFileOssMutation","onCompleted","data","upload_file_oss","error","message","loading","Tag","role","onClick","current","click","ref","style","type","accept","onChange","e","currentTarget","validity","file","files","valid","variables","Box","className","CloudUpload","Typography","variant","defaultProps","createElement","d","Test"],"mappings":"+FAAO,I,oECaDA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,cACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAO,SAACC,GAA8B,IAAD,EACnC,iBAAOA,EAAMD,aAAb,QAAsB,QAExBE,OAAQ,SAACD,GAA8B,IAAD,EACpC,iBAAOA,EAAMC,cAAb,QAAuB,QAEzBC,MAAOV,EAAMW,QAAQC,KAAKC,UAC1BC,KAAM,GAERC,KAAMf,EAAMgB,OAAOC,KAAKF,KAAKG,WAIpBC,EAA4C,SAAAX,GAAU,IACzDY,EAAqDZ,EAArDY,WAAYC,EAAyCb,EAAzCa,QAASC,EAAgCd,EAAhCc,SAAUC,EAAsBf,EAAtBe,UAAWP,EAAWR,EAAXQ,OAC5CQ,EAAU1B,EAAUU,GAEpBiB,EAAWC,cAJ+C,EAMzBC,YAAyB,CAC9DC,YAD8D,SAClDC,GACVT,GAAcA,EAAWS,EAAKC,kBAEhCT,QAJ8D,SAItDU,GACNV,GAAWA,EAAQU,EAAMC,YAXmC,mBAMzDF,EANyD,KAMtCG,EANsC,KAMtCA,QAyBpBC,EAAMX,GAAa,MAEzB,OACE,gBAACW,EAAD,CAAKC,KAAK,SAASC,QATD,WACH,IAAD,EAATH,IACH,UAAAR,EAASY,eAAT,SAAkBC,WAQlB,yBACEC,IAAKd,EACLe,MAAO,CAAErC,QAAS,QAClBsC,KAAK,OACLC,OAAO,IACPC,SAzBe,SAACC,GAA4C,IAAD,EAI3DA,EAAEC,cAFJC,EAF6D,EAE7DA,SACQC,EAHqD,cAG7DC,MAH6D,MAK3DF,EAASG,OACXnB,EAAgB,CAAEoB,UAAW,CAAEH,aAqB9B/B,EACC,CAAEM,YAEF,gBAAC6B,EAAA,EAAD,CAAKC,UAAW5B,EAAQtB,MACtB,2BACE,gBAACmD,EAAA,EAAD,CAAaD,UAAW5B,EAAQT,QAGlC,gBAACuC,EAAA,EAAD,CAAYC,QAAQ,MACjBtB,EAAU,wBAAW,+BAQlCd,EAAWqC,aAAe,CACxBxC,QAAQ,GC7FV,mC,iCCAA,4BAEe,gBAAc,IAAMyC,cAAc,OAAQ,CACvDC,EAAG,yLACD,gB,iCCJJ,2BA0BeC,UAnBQ,WASrB,OACE,2BACE,2BAEE,gBAAC,IAAD","file":"static/js/12.6a971730.chunk.js","sourcesContent":["export const useFileUpload = () => {};\n","import * as React from \"react\";\nimport { useUploadFileOssMutation } from \"@/schema\";\nimport { BaseFileUploadProps } from \"./file-upload\";\nimport {\n  Box,\n  makeStyles,\n  Theme,\n  createStyles,\n  Typography\n} from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport { IPlaceholderProps } from \"@/components/base/Placeholder/placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: IPlaceholderProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: IPlaceholderProps) => {\n        return props.height ?? \"100%\";\n      },\n      color: theme.palette.text.secondary,\n      flex: 1\n    },\n    icon: theme.custom.base.icon.large\n  })\n);\n\nexport const FileUpload: React.FC<BaseFileUploadProps> = props => {\n  const { onComplete, onError, children, component, custom } = props;\n  const classes = useStyles(props);\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const [upload_file_oss, { loading }] = useUploadFileOssMutation({\n    onCompleted(data) {\n      onComplete && onComplete(data.upload_file_oss);\n    },\n    onError(error) {\n      onError && onError(error.message);\n    }\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity.valid) {\n      upload_file_oss({ variables: { file } });\n    }\n  };\n\n  const handleClick = () => {\n    if (!loading) {\n      inputRef.current?.click();\n    }\n  };\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag role=\"button\" onClick={handleClick}>\n      <input\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\"*\"\n        onChange={handleChange}\n      />\n      {custom ? (\n        { children }\n      ) : (\n        <Box className={classes.root}>\n          <div>\n            <CloudUpload className={classes.icon} />\n            {/* <CircularProgress className={classes.icon} /> */}\n          </div>\n          <Typography variant=\"h6\">\n            {loading ? \"上传中...\" : \"点击上传\"}\n          </Typography>\n        </Box>\n      )}\n    </Tag>\n  );\n};\n\nFileUpload.defaultProps = {\n  custom: false\n};\n","export * from \"./useFileUpload\";\nexport * from \"./FileUpload\";\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');","import * as React from \"react\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n// import { withTool, MediaNormal } from \"@/components/app/Media\";\n// import Confirm from \"@/components/base/Confirm\";\n\n// const ToolMediaNormal = withTool(MediaNormal);\n\nconst Test: React.FC = () => {\n  // const handleConfirm = async () => {\n  //   const isConfirm = await Confirm.dialog({\n  //     title: \"标题\",\n  //     content: \"内容\",\n  //   });\n  //   console.log(isConfirm);\n  // };\n\n  return (\n    <div>\n      <div>\n        {/* <div onClick={handleConfirm}>confirm</div> */}\n        <FileUpload />\n      </div>\n    </div>\n  );\n};\n\nexport default Test;\n"],"sourceRoot":""}