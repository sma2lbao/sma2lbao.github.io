{"version":3,"sources":["layouts/PageLayout/components/FullScreen.tsx","layouts/PageLayout/components/BodyScreen.tsx","layouts/PageLayout/components/ContentScreen.tsx","layouts/PageLayout/components/AiderScreen.tsx","layouts/PageLayout/index.tsx","pages/Movie/components/MovieMain/index.tsx","pages/Movie/components/About/index.tsx","pages/Movie/components/Relative/index.tsx","pages/Movie/components/Cast/index.tsx","pages/Movie/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","FullScreen","props","classes","className","clsx","children","maxWidth","BodyScreen","ContentScreen","style","Object","assign","AiderScreen","padding","spacing","box","borderTop","palette","divider","MovieMain","Box","Typography","variant","gutterBottom","Rating","readOnly","value","precision","icon","Favorite","fontSize","GridList","cellHeight","cols","GridListTile","height","default","display","flexDirection","justifyContent","alignItems","color","text","secondary","emptyIcon","About","html","dangerouslySetInnerHTML","__html","Relative","backgroundColor","background","paper","Cast","List","subheader","ListSubheader","map","_","i","ListItem","key","ListItemAvatar","Avatar","src","ListItemText","primary","ListItemSecondaryAction","IconButton","MoreVert","body","margin","main","borderRight","flex","aider","content","MOVIE","gql","Movie","useQuery","variables","id","data","error","console","log","React","tab","setTab","Image","aspectRatio","movie","cover","Tabs","onChange","e","val","Tab","label","description"],"mappings":"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","file":"static/js/11.a76e2a55.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { FullScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    }\n  })\n);\n\nexport default function FullScreen(props: FullScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { BodyScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1600\n    }\n  })\n);\n\nexport default function BodyScreen(props: BodyScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { ContentScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1200\n    }\n  })\n);\n\nexport default function ContentScreen(props: ContentScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={Object.assign({}, props.width ? { width: props.width } : {})}\n      className={clsx(classes.root, props.className)}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { AiderScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 400\n    }\n  })\n);\n\nexport default function AiderScreen(props: AiderScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\n\ninterface PageLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function PageLayout(props: PageLayoutProps) {\n  return <div>{props.children}</div>;\n}\n\nexport { default as FullScreen } from \"./components/FullScreen\";\nexport { default as BodyScreen } from \"./components/BodyScreen\";\nexport { default as ContentScreen } from \"./components/ContentScreen\";\nexport { default as AiderScreen } from \"./components/AiderScreen\";\n","import React from \"react\";\nimport { Box, Typography, GridList, GridListTile } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { Favorite } from \"@material-ui/icons\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { VideoWithAuthor } from \"@/components/VideoCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport default function MovieMain() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.box}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          平均评分\n        </Typography>\n        <Rating\n          readOnly\n          value={2}\n          precision={0.5}\n          icon={<Favorite fontSize=\"inherit\" />}\n        />\n      </Box>\n      <Box className={classes.box}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          视频图片\n        </Typography>\n        <GridList cellHeight=\"auto\" cols={4}>\n          <GridListTile cols={1}>\n            <VideoWithAuthor />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <VideoWithAuthor />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <VideoWithAuthor />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <VideoWithAuthor />\n          </GridListTile>\n          <GridListTile cols={1}>\n            <VideoWithAuthor />\n          </GridListTile>\n        </GridList>\n      </Box>\n      <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    default: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: theme.spacing(5),\n      color: theme.palette.text.secondary\n    },\n    emptyIcon: {\n      fontSize: 150\n      // marginBottom: theme.spacing(3)\n    }\n  })\n);\n\nexport interface AboutProps {\n  html?: string;\n}\n\nexport default function About(props: AboutProps) {\n  const classes = useStyles();\n  // const defaulHtml = \"该资源没有介绍\";\n  const { html } = props;\n  return (\n    <Box className={classes.root}>\n      {html ? (\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      ) : (\n        <Box className={classes.default}>\n          <i className={clsx(\"iconfont icon-404\", classes.emptyIcon)}></i>\n          <Typography>该资源没有介绍</Typography>\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport { VideoWithAuthor } from \"@/components/VideoCard\";\nimport { Box, GridListTile, GridList, Typography } from \"@material-ui/core\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2, 0)\n    }\n  })\n);\n\nexport default function Relative() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        喜欢该视频的也喜欢\n      </Typography>\n      <GridList cellHeight=\"auto\" cols={4}>\n        <GridListTile>\n          <VideoWithAuthor />\n        </GridListTile>\n        <GridListTile>\n          <VideoWithAuthor />\n        </GridListTile>\n        <GridListTile>\n          <VideoWithAuthor />\n        </GridListTile>\n        <GridListTile>\n          <VideoWithAuthor />\n        </GridListTile>\n        <GridListTile>\n          <VideoWithAuthor />\n        </GridListTile>\n        <GridListTile>\n          <VideoWithAuthor />\n        </GridListTile>\n      </GridList>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MoreVert } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport default function Cast() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <List subheader={<ListSubheader>演职表</ListSubheader>}>\n        {[1, 2, 3, 4].map((_, i) => {\n          return (\n            <ListItem key={i}>\n              <ListItemAvatar>\n                <Avatar src=\"\"></Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"姓名\" secondary=\"介绍\" />\n              <ListItemSecondaryAction>\n                <IconButton>\n                  <MoreVert />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Box } from \"@material-ui/core\";\nimport Image from \"@/components/Image\";\nimport MovieMain from \"./components/MovieMain\";\nimport About from \"./components/About\";\nimport Relative from \"./components/Relative\";\nimport Cast from \"./components/Cast\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    body: {\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    main: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`,\n      flex: 4\n    },\n    aider: {\n      flex: 1\n    },\n    content: {\n      flex: 1\n    }\n  })\n);\n\nconst MOVIE = gql`\n  query($id: Int!) {\n    movie(id: $id) {\n      title\n      cover\n      posters\n      actors\n      description\n      author {\n        nickname\n        avatar\n      }\n    }\n  }\n`;\n\nexport default function Movie() {\n  const { data, error } = useQuery(MOVIE, {\n    variables: {\n      id: 1\n    }\n  });\n  console.log(data, error);\n\n  const classes = useStyles();\n  const [tab, setTab] = React.useState(0);\n\n  return (\n    <Box>\n      <FullScreen>\n        <Image\n          aspectRatio={16 / 9}\n          src={data && data.movie && data.movie.cover}\n        />\n      </FullScreen>\n      <BodyScreen className={classes.body}>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\"></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div className={classes.content}>\n            {tab === 0 && <MovieMain />}\n            {tab === 1 && <Relative />}\n            {tab === 2 && (\n              <About html={data && data.movie && data.movie.description} />\n            )}\n          </div>\n        </ContentScreen>\n        <AiderScreen className={classes.aider}>\n          <Cast />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n}\n"],"sourceRoot":""}