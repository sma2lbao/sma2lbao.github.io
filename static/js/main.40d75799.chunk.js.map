{"version":3,"sources":["components/base/Placeholder/PlaceholderDefault.tsx","components/base/Placeholder/index.ts","components/base/Exception/ExceptionDefault.tsx","components/base/Exception/index.tsx","theme/overrides/index.ts","theme/overrides/MuiTabs.ts","theme/overrides/MuiTab.ts","theme/custom/index.ts","theme/custom/layout.ts","theme/custom/base.ts","theme/index.ts","theme/palette.ts","theme/typography.ts","layouts/Main/modules/Sidebar/useMenus.tsx","layouts/Main/modules/Sidebar/index.tsx","layouts/Main/modules/Topbar/components/Search.tsx","layouts/Main/modules/Topbar/components/Account.tsx","layouts/Main/modules/Topbar/components/Notice.tsx","layouts/Main/modules/Topbar/index.tsx","layouts/Main/index.tsx","layouts/RouteWithLayout/index.tsx","views/Home/modules/Aider/index.tsx","views/Home/modules/Recommend/Movie.tsx","views/Home/modules/Recommend/index.tsx","views/Home/modules/Topic/index.tsx","views/Home/index.tsx","views/public/H5NotSupported/index.tsx","router/index.tsx","components/base/Message/index.tsx","graphql/cache.ts","graphql/local/schema.ts","graphql/__mock__/resolvers/index.ts","graphql/__mock__/resolvers/user.mock.ts","graphql/__mock__/resolvers/character.mock.ts","graphql/index.ts","App.tsx","serviceWorker.ts","index.tsx","hooks/router.helper.ts","hooks/follow.helper.ts","hooks/index.ts","common/constants/default.constant.ts","common/constants/route.constant.ts","schema.tsx","components/base/Image/index.tsx","components/app/Duration/index.tsx","components/app/Media/MediaNormal.tsx","components/app/Media/MediaOwn.tsx","components/app/Media/MediaPlain.tsx","components/app/Media/withTool.tsx","components/app/Media/index.ts","components/public/SpecialBox/SpecialBoxDefault.tsx","components/public/SpecialBox/index.tsx","layouts/PageLayout/modules/AiderScreen.tsx","layouts/PageLayout/modules/BodyScreen.tsx","layouts/PageLayout/modules/ContentScreen.tsx","layouts/PageLayout/modules/FullScreen.tsx","layouts/PageLayout/index.tsx","components/base/Loading/LoadingDefault.tsx","components/base/Loading/index.ts"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flexDirection","justifyContent","alignItems","width","props","height","flex","icon","custom","base","large","PlaceholderDefault","classes","title","subtitle","children","className","clsx","Typography","variant","Placeholder","ExceptionDefault","Exception","MuiTabs","MuiTab","layout","size","parent","fontSize","createMuiTheme","palette","tertiary","main","overrides","typography","menus","id","Home","label","HourglassEmpty","path","HOME","disabled","Movie","value","MOVIE_HOME","Person","useMenus","toolbar","mixins","flexShrink","child","overflow","padding","spacing","Sidebar","closeSidebarHandler","rest","RouterHelper","useRouterHelper","React","pid","setPid","cid","setCid","Drawer","onClose","map","idx","key","IconButton","color","onClick","push","handleParentClick","Icon","hidden","index","handleChildClick","active","gutterBottom","search","borderRadius","shape","backgroundColor","fade","common","white","margin","pointerEvents","input","paddingRight","transition","transitions","create","Search","InputBase","placeholder","inputProps","Account","anchorEl","setAnchorEl","_close","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","keepMounted","open","Boolean","MenuItem","Notice","Mail","appBar","zIndex","drawer","boxShadow","shadows","marginLeft","Topbar","AppBar","position","Toolbar","Box","toggleSidebar","Menu","gotoMovieUpload","AddCircle","Divider","shiftMain","easing","sharp","duration","leavingScreen","minHeight","Main","hideSidebar","isDesktop","useMediaQuery","openSidebar","setOpenSidebar","paper","RouteWithLayout","Layout","Component","component","Loading","loading","lazy","render","matchProps","fallback","Aider","useUserUrgesQuery","data","error","List","user_urges","length","user","i","ListItem","gotoProfile","username","ListItemAvatar","Avatar","src","avatar","ListItemText","nickname","description","ListItemSecondaryAction","SpecialBox","MovieRecommend","useMovieUrgesQuery","paddingY","Link","gotoMovieHome","movie_urges","GridList","cellHeight","cols","movie","Grow","in","timeout","GridListTile","Media","loadingNode","Array","_","Recommend","paddingTop","VirtualizeSwipeableViews","virtualize","SwipeableViews","head","headItem","bannerRoot","banner","bannerItem","Topic","setIndex","useCurrentTopicQuery","mb","current_topic","KeyboardArrowLeft","onChangeIndex","enableMouseEvents","slideRenderer","params","items","top_movies","mod","KeyboardArrowRight","top_movie","paddingLeft","aider","borderLeft","borderColor","divider","sticky","H5NotSupported","Paper","MovieHome","TVHome","MoviePlay","MovieUpload","TV","Profile","Personal","Resume","Login","Completion","NotFound","Forbidden","InternalServerError","Test","AppRoute","test","navigator","userAgent","exact","MainLayout","mountPoint","document","createElement","body","appendChild","ShowSnackbar","enqueueSnackbar","useSnackbar","message","options","Message","success","msg","this","toast","warning","info","opts","ReactDOM","maxSnack","cache","InMemoryCache","typePolicies","User","fields","read","DEFAULT_USER_AVATAR","DEFAULT_USER_NICKNAME","DEFAULT_USER_DESCRIPTION","Character","PlatformAuthWay","http_domain","httpDomainVar","makeVar","process","REACT_APP_HTTP_DOMAIN_URL","typeDefs","gql","resolvers","Query","uid","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","authLink","setContext","headers","access_token","localStorage","getItem","authorization","errorLink","onError","graphQLErrors","networkError","console","log","forEach","locations","Sentry","uploadLink","createUploadLink","REACT_APP_ENV","mockResolvers","client","ApolloClient","link","from","connectToDevTools","App","ThemeProvider","CssBaseline","window","location","hostname","match","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","enabled","dsn","rootElement","getElementById","hasChildNodes","hydrate","serviceWorker","ready","then","registration","unregister","history","useHistory","state","gotoHome","PROFILE","gotoMovie","movie_id","MOVIE_DETAIL","gotoMoviePlay","MOVIE_PLAY","MOVIE_UPLOAD","gotoAuthCompletion","AUTH_COMPLETION","useFollowHelper","owner_uid","following","setFollowing","useIsFollowingLazyQuery","onCompleted","is_following","isFollowing","variables","useCreateFollowMutation","createFollow","useRemoveFollowMutation","removeFollow","toggleFollow","follow","DEFULAT_MOVIE_COVER","DEFAULT_PROFILE_COVER","Region","ReviewMedium","VoteStatus","MeFragmentDoc","AuthorFragmentDoc","MovieFragmentDoc","MovieSourceFragmentDoc","LoginDocument","useLoginMutation","baseOptions","ApolloReactHooks","SendRegisterEmailDocument","useSendRegisterEmailMutation","CreateUserWithCodeDocument","useCreateUserWithCodeMutation","UpdateUserDocument","useUpdateUserMutation","CreateMovieDocument","useCreateMovieMutation","UploadFileOssDocument","useUploadFileOssMutation","CreateFollowDocument","RemoveFollowDocument","PlatformAuthWayDocument","usePlatformAuthWayQuery","HasUsernameDocument","useHasUsernameQuery","MeDocument","useMeQuery","useMeLazyQuery","CurrentTopicDocument","MovieUrgesDocument","UserUrgesDocument","MovieDocument","useMovieQuery","MoviesPaginatedDocument","useMoviesPaginatedQuery","UserMoviesPaginatedDocument","useUserMoviesPaginatedQuery","MovieUrgesByMovieDocument","useMovieUrgesByMovieQuery","MovieNextUrgesByMovieDocument","useMovieNextUrgesByMovieQuery","PlaylistsPaginatedDocument","usePlaylistsPaginatedQuery","IsFollowingDocument","UserDocument","useUserQuery","ImageStatus","aspect","aspectRatio","image","top","left","objectFit","container","Image","alt","status","setStatus","_loadImage","Success","_loadImageFail","Failuare","onLoad","animation","Duration","unit","hh","moment","hours","mm","minutes","ss","seconds","format","padStart","defaultProps","wrap","cover","border","bottom","right","breakpoints","down","MediaNormal","e","stopPropagation","author","noWrap","create_at","MediaNormalLoading","Skeleton","MediaOwn","Date","MediaPlain","tool","withTool","onDelete","SpecialBoxDefault","placeholderTitle","placeholderSubtitle","PlaceholderNode","placeholderNode","loadingTitle","loadingSubtitle","LoadingNode","errorTitle","errorSubtitle","ErrorNode","errorNode","maxWidth","agent","keys","Object","top_normal","style","maxHeight","entity","top_current","assign","AiderScreen","BodyScreen","ContentScreen","FullScreen","backgroundClip","fontWeight","backgroundRepeat","backgroundImage","backgroundSize","logo","backgroundPosition","LoadingDefault"],"mappings":"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","file":"static/js/main.40d75799.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { IPlaceholderProps } from \"./placeholder.d\";\nimport clsx from \"clsx\";\nimport { makeStyles, Theme, createStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: IPlaceholderProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: IPlaceholderProps) => {\n        return props.height ?? \"100%\";\n      },\n      flex: 1\n    },\n    icon: theme.custom.base.icon.large\n  })\n);\n\nexport const PlaceholderDefault: React.FC<IPlaceholderProps> = (\n  props: IPlaceholderProps\n) => {\n  const classes = useStyles(props);\n  const { title, subtitle, children } = props;\n  return (\n    <div className={classes.root}>\n      <div>\n        <i className={clsx(\"iconfont icon-404\", classes.icon)}></i>\n      </div>\n      {title && <Typography variant=\"h6\">{title}</Typography>}\n      {subtitle && <Typography variant=\"subtitle1\">{subtitle}</Typography>}\n      {children}\n    </div>\n  );\n};\n","import { PlaceholderDefault } from \"./PlaceholderDefault\";\n\nexport default PlaceholderDefault;\nexport const Placeholder = PlaceholderDefault;\nexport * from \"./PlaceholderDefault\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { BaseExceptionProps } from \"./exception\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: BaseExceptionProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: BaseExceptionProps) => {\n        return props.height ?? \"100%\";\n      },\n      flex: 1\n    },\n    icon: theme.custom.base.icon.large\n  })\n);\n\nexport const ExceptionDefault: React.FC<BaseExceptionProps> = (\n  props: BaseExceptionProps\n) => {\n  const classes = useStyles(props);\n  const { title, subtitle, children } = props;\n  return (\n    <div className={classes.root}>\n      <div>\n        <i className={clsx(\"iconfont icon-404\", classes.icon)}></i>\n      </div>\n      {title && <Typography variant=\"h6\">{title}</Typography>}\n      {subtitle && <Typography variant=\"subtitle1\">{subtitle}</Typography>}\n      {children}\n    </div>\n  );\n};\n","import { ExceptionDefault } from \"./ExceptionDefault\";\n\nexport default ExceptionDefault;\nexport const Exception = ExceptionDefault;\nexport * from \"./ExceptionDefault\";\n","import MuiTabs from \"./MuiTabs\";\nimport MuiTab from \"./MuiTab\";\n\nexport default {\n  MuiTabs,\n  MuiTab\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","import layout, { LayoutOptions } from \"./layout\";\nimport base, { BaseOptions } from \"./base\";\n\nexport interface customOption {\n  layout: LayoutOptions;\n  base: BaseOptions;\n}\n\nexport default {\n  layout,\n  base\n};\n","export interface LayoutOptions {\n  size: {\n    parent: {\n      width: React.CSSProperties[\"width\"];\n    };\n  };\n}\n\nexport default {\n  size: {\n    parent: {\n      width: 80\n    }\n  }\n} as Partial<LayoutOptions>;\n","export interface BaseOptions {\n  icon: {\n    large: {\n      fontSize: React.CSSProperties[\"fontSize\"];\n    };\n  };\n}\n\nexport default {\n  icon: {\n    large: {\n      fontSize: 120\n    }\n  }\n} as Partial<BaseOptions>;\n","import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n// import * as Colors from '@material-ui/core/colors'\nimport overrides from \"./overrides\";\nimport typography from \"./typography\";\nimport palette from \"./palette\";\nimport custom, { customOption } from \"./custom\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    custom: customOption;\n  }\n}\n\nconst theme = createMuiTheme(\n  {\n    palette,\n    overrides,\n    typography\n  },\n  {\n    custom\n  }\n);\n\nexport default theme;\n","import {\n  PaletteOptions,\n  PaletteColorOptions\n} from \"@material-ui/core/styles/createPalette\";\n\nexport default {\n  tertiary: {\n    main: \"#ccc\"\n  } as Partial<PaletteColorOptions>\n} as Partial<PaletteOptions>;\n","export default {};\n","import * as React from \"react\";\nimport { Home, Movie, Person, HourglassEmpty } from \"@material-ui/icons\";\nimport { HOME, MOVIE_HOME } from \"@/common/constants/route.constant\";\n\nexport interface MenuProps {\n  id: number;\n\n  icon: React.ReactElement;\n\n  label: string;\n\n  value?: string;\n\n  path?: string;\n\n  disabled?: boolean;\n\n  children?: MenuProps[];\n}\n\nconst HomeMenus: MenuProps = {\n  id: 1000,\n  icon: <Home />,\n  label: \"Home\",\n  children: [\n    {\n      id: 1001,\n      icon: <HourglassEmpty />,\n      label: \"Home\",\n      path: HOME\n    },\n    {\n      id: 1002,\n      icon: <HourglassEmpty />,\n      label: \"History Topics\",\n      path: \"/topics\",\n      disabled: true\n    }\n  ]\n};\n\nconst MovieMenus: MenuProps = {\n  id: 2000,\n  icon: <Movie />,\n  label: \"Movie\",\n  value: \"movie\",\n  path: MOVIE_HOME,\n  children: []\n};\n\nconst UserMenus: MenuProps = {\n  id: 3000,\n  icon: <Person />,\n  label: \"My\",\n  value: \"user\",\n  path: \"\",\n  children: [\n    {\n      id: 3001,\n      icon: <HourglassEmpty />,\n      label: \"My Homepage\",\n      value: \"personal\",\n      path: \"/personal\"\n    },\n    {\n      id: 3002,\n      icon: <HourglassEmpty />,\n      label: \"Setting\",\n      value: \"setting\",\n      path: \"/setting\",\n      disabled: true\n    }\n  ]\n};\n\nconst menus: MenuProps[] = [HomeMenus, MovieMenus, UserMenus];\n\nexport const useMenus = (): [MenuProps[]] => {\n  return [menus];\n};\n\nexport default useMenus;\n","import * as React from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  // Icon,\n  Typography,\n  Icon\n  // Divider,\n} from \"@material-ui/core\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { DrawerProps } from \"@material-ui/core/Drawer\";\nimport useMenus, { MenuProps } from \"./useMenus\";\nimport clsx from \"clsx\";\nimport { useRouterHelper } from \"@/hooks\";\n\ntype CloseSidebarFunc = (...args: any[]) => void;\n\ninterface SidebarProps extends DrawerProps {\n  closeSidebarHandler?: CloseSidebarFunc;\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    toolbar: theme.mixins.toolbar,\n    root: {\n      display: \"flex\"\n    },\n    parent: {\n      width: theme.custom?.layout.size.parent.width,\n      flexShrink: 0,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    child: {\n      flex: 1,\n      overflow: \"hidden\",\n      padding: theme.spacing(2, 1)\n    }\n  });\n});\n\nexport default function Sidebar(props: SidebarProps) {\n  const { closeSidebarHandler, ...rest } = props;\n  const [menus] = useMenus();\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [pid, setPid] = React.useState(1000);\n  const [cid, setCid] = React.useState(1001);\n\n  const handleParentClick = (parent: MenuProps) => {\n    setPid(parent.id);\n    if (parent.path && !parent.disabled) {\n      RouterHelper.push(parent.path);\n    }\n  };\n\n  const handleChildClick = (child: MenuProps) => {\n    setCid(child.id);\n    if (child.path && !child.disabled) {\n      RouterHelper.push(child.path);\n    }\n  };\n\n  return (\n    <Drawer {...rest} onClose={closeSidebarHandler}>\n      <div className={classes.toolbar}></div>\n      <div className={classes.root}>\n        <div className={classes.parent}>\n          {menus.map((parent, idx) => (\n            <div key={idx}>\n              <IconButton\n                color={pid === parent.id ? \"primary\" : \"default\"}\n                onClick={() => handleParentClick(parent)}\n              >\n                <Icon>{parent.icon}</Icon>\n              </IconButton>\n            </div>\n          ))}\n        </div>\n        {menus.map((parent, idx) => {\n          return (\n            <div key={idx} className={classes.child} hidden={parent.id !== pid}>\n              {parent.children ? (\n                parent?.children.map((child, index) => {\n                  return (\n                    <div\n                      key={index}\n                      onClick={() => handleChildClick(child)}\n                      className={clsx({ active: child.id === cid })}\n                    >\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        {child.label}\n                      </Typography>\n                    </div>\n                  );\n                })\n              ) : (\n                <div>no children router</div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n      <div onClick={closeSidebarHandler}>close menu</div>\n    </Drawer>\n  );\n}\n","import * as React from \"react\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport { Theme, InputBase } from \"@material-ui/core\";\nimport { createStyles, makeStyles, fade } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    search: {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      margin: theme.spacing(0, 1)\n    },\n    icon: {\n      pointerEvents: \"none\",\n      margin: theme.spacing(0, 1)\n    },\n    input: {\n      color: \"inherit\",\n      paddingRight: theme.spacing(1),\n      transition: theme.transitions.create(\"width\"),\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  });\n});\n\nexport default function Search() {\n  const classes = useStyles();\n  return (\n    <div className={classes.search}>\n      <SearchIcon className={classes.icon} />\n      <InputBase\n        classes={{ input: classes.input }}\n        placeholder=\"搜索\"\n        inputProps={{ \"aria-label\": \"Search\" }}\n      />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { AccountCircle } from \"@material-ui/icons\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\n\nexport default function Account() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  function _close() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <>\n      <IconButton\n        aria-controls=\"account-menu\"\n        aria-haspopup=\"true\"\n        onClick={event => {\n          setAnchorEl(event.currentTarget);\n        }}\n        color=\"inherit\"\n      >\n        <AccountCircle />\n      </IconButton>\n      <Menu\n        id=\"account-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={_close}\n      >\n        <MenuItem onClick={_close}>Resume</MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Mail } from \"@material-ui/icons\";\n\nexport default function Notice() {\n  return (\n    <IconButton color=\"inherit\">\n      <Mail />\n    </IconButton>\n  );\n}\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  // Typography,\n  Box,\n  Divider,\n  IconButton,\n  Icon\n} from \"@material-ui/core\";\nimport { Menu, AddCircle } from \"@material-ui/icons\";\nimport Search from \"./components/Search\";\nimport Account from \"./components/Account\";\nimport Notice from \"./components/Notice\";\nimport clsx from \"clsx\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      boxShadow: theme.shadows[0]\n    },\n    icon: {\n      marginLeft: theme.spacing(2)\n    },\n    toolbar: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    search: {\n      margin: theme.spacing(0, 1)\n    }\n  });\n});\n\ntype ToggleidebarFunc = (...args: any[]) => void;\n\ninterface TopbarProps {\n  toggleSidebar?: ToggleidebarFunc;\n}\n\nexport default function Topbar(props: TopbarProps) {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  return (\n    <>\n      <AppBar color=\"inherit\" position=\"fixed\" className={classes.appBar}>\n        <Toolbar classes={{ root: classes.toolbar }}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <div>\n              <Icon\n                fontSize=\"large\"\n                className={clsx(\"iconfont icon-logo\")}\n              ></Icon>\n            </div>\n            <IconButton\n              size=\"small\"\n              onClick={props.toggleSidebar}\n              className={classes.icon}\n            >\n              <Menu fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              onClick={RouterHelper.gotoMovieUpload}\n              size=\"small\"\n              className={classes.icon}\n            >\n              <AddCircle fontSize=\"small\" />\n            </IconButton>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Search />\n            <Notice />\n            <Account />\n          </Box>\n        </Toolbar>\n        <Divider />\n      </AppBar>\n      {/* <Toolbar></Toolbar> */}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  makeStyles,\n  createStyles,\n  Theme\n  // useTheme\n} from \"@material-ui/core/styles\";\nimport { useMediaQuery, Toolbar } from \"@material-ui/core\";\nimport { Sidebar, Topbar } from \"./modules\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      backgroundColor: \"#f5f5f5\"\n    },\n    drawer: {\n      width: 290\n    },\n    shiftMain: {\n      marginLeft: 290\n    },\n    main: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      // minHeight: \"100%\",\n      minHeight: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    }\n  })\n);\n\ninterface MainProps {\n  children?: React.ReactNode;\n  hideSidebar?: boolean;\n}\n\nconst Main: React.FC<MainProps> = (props: MainProps) => {\n  const { children, hideSidebar } = props;\n  const classes = useStyles();\n  // const theme = useTheme();\n  // const isDesktop = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const isDesktop = useMediaQuery(\"(min-width: 1600px)\");\n  const [openSidebar, setOpenSidebar] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Topbar toggleSidebar={() => setOpenSidebar(!openSidebar)} />\n      <div>\n        {!hideSidebar && (\n          <Sidebar\n            classes={{ paper: classes.drawer }}\n            open={openSidebar}\n            variant={isDesktop ? \"persistent\" : \"temporary\"}\n            closeSidebarHandler={() => setOpenSidebar(false)}\n          />\n        )}\n        <main\n          className={clsx(classes.main, {\n            [classes.shiftMain]: openSidebar && isDesktop\n          })}\n        >\n          <Toolbar />\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport const MainWithoutSidebar: React.FC = props => {\n  return <Main hideSidebar>{props.children}</Main>;\n};\n\nexport default Main;\n","import * as React from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\nimport { LoadingDefault } from \"@/components/base/Loading\";\n\ninterface IProps extends RouteProps {\n  layout?: any;\n  component: any;\n  lazy?: boolean;\n  loading?: any;\n}\n\nexport default function RouteWithLayout(props: IProps) {\n  const {\n    layout: Layout,\n    component: Component,\n    loading: Loading,\n    lazy,\n    ...rest\n  } = props;\n\n  return Layout ? (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          {lazy ? (\n            <React.Suspense\n              fallback={Loading ? <Loading /> : <LoadingDefault />}\n            >\n              <Component {...matchProps} />\n            </React.Suspense>\n          ) : (\n            <Component {...matchProps} />\n          )}\n        </Layout>\n      )}\n    />\n  ) : (\n    <Route\n      {...rest}\n      render={matchProps => {\n        if (lazy) {\n          return (\n            <React.Suspense\n              fallback={Loading ? <Loading /> : <LoadingDefault />}\n            >\n              <Component {...matchProps} />\n            </React.Suspense>\n          );\n        } else {\n          return <Component {...matchProps} />;\n        }\n      }}\n    />\n  );\n}\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Avatar,\n  Typography\n  // Button,\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useUserUrgesQuery } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { SpecialBox } from \"@/components/public/SpecialBox\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    title: {\n      padding: theme.spacing(1, 2)\n    }\n  })\n);\n\nexport default function Aider() {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n\n  const { data, loading, error } = useUserUrgesQuery();\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography className={classes.title} variant=\"h6\">\n          贡献榜\n        </Typography>\n        <List>\n          {data?.user_urges.length ? (\n            data.user_urges.map((user, i) => {\n              return (\n                <ListItem\n                  key={i}\n                  onClick={() => RouterHelper.gotoProfile(user?.username)}\n                >\n                  <ListItemAvatar>\n                    <Avatar src={user.avatar}></Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography>{user.nickname}</Typography>\n                    <Typography variant=\"caption\">\n                      {user.description}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    {/* <Button>\n                      <Typography>关注</Typography>\n                    </Button> */}\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })\n          ) : (\n            <SpecialBox loading={loading} error={!!error} />\n          )}\n        </List>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Typography, Box, Link, Grow } from \"@material-ui/core\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\nimport { useMovieUrgesQuery } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { SpecialBox } from \"@/components/public/SpecialBox\";\n\nexport default function MovieRecommend() {\n  const RouterHelper = useRouterHelper();\n  const { data, loading, error } = useMovieUrgesQuery();\n\n  return (\n    <Box padding={0}>\n      <Box\n        paddingY={1}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Typography component=\"span\" variant=\"h6\">\n          电影推荐\n        </Typography>\n        <Link\n          onClick={RouterHelper.gotoMovieHome}\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          更多\n        </Link>\n      </Box>\n\n      {data?.movie_urges.length ? (\n        <GridList cellHeight=\"auto\" cols={4}>\n          {data.movie_urges.map((movie: any, index: number) => {\n            return (\n              <Grow key={index} in timeout={index * 500}>\n                <GridListTile cols={movie.cols || 1}>\n                  <MediaNormal key={index} {...movie} />\n                </GridListTile>\n              </Grow>\n            );\n          })}\n        </GridList>\n      ) : (\n        <SpecialBox\n          loading={loading}\n          error={!!error}\n          loadingNode={() => {\n            return (\n              <GridList cellHeight=\"auto\" cols={4}>\n                {new Array(8).map((_, index: number) => {\n                  return (\n                    <GridListTile key={index} cols={1}>\n                      <MediaNormal loading />\n                    </GridListTile>\n                  );\n                })}\n              </GridList>\n            );\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport MovieRecommend from \"./Movie\";\n// import TvRecommend from \"./Tv\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function Recommend() {\n  return (\n    <>\n      <Box paddingTop={4}>\n        <MovieRecommend />\n      </Box>\n      {/* <Box paddingTop={4}>\n        <TvRecommend />\n      </Box> */}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box, Typography, IconButton } from \"@material-ui/core\";\n// import { Skeleton } from \"@material-ui/lab\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { virtualize } from \"react-swipeable-views-utils\";\nimport { mod } from \"react-swipeable-views-core\";\nimport clsx from \"clsx\";\nimport { useCurrentTopicQuery } from \"@/schema\";\nimport { SpecialBox } from \"@/components/public/SpecialBox\";\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    },\n    bannerRoot: {\n      flex: 1,\n      overflow: \"hidden\"\n    },\n    banner: {\n      paddingRight: \"50%\"\n    },\n    bannerItem: {\n      minHeight: 200,\n      margin: theme.spacing(0, 0.25),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      overflow: \"hidden\"\n    }\n  })\n);\n\nfunction Topic() {\n  const [index, setIndex] = React.useState(0);\n  const classes = useStyles();\n  const { data, loading, error } = useCurrentTopicQuery();\n\n  return (\n    <>\n      {data ? (\n        <div className={classes.head}>\n          <div className={classes.headItem}>\n            <Box>\n              <Box mb={3}>\n                <Typography variant=\"h6\" gutterBottom>\n                  每月精选\n                </Typography>\n                <Typography variant=\"h5\" gutterBottom>\n                  {data?.current_topic.title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {data?.current_topic.description}\n                </Typography>\n              </Box>\n              <Box display=\"flex\" alignItems=\"center\">\n                <Box>\n                  <IconButton size=\"small\" onClick={() => setIndex(index - 1)}>\n                    <KeyboardArrowLeft />\n                  </IconButton>\n                </Box>\n                <div className={classes.bannerRoot}>\n                  <VirtualizeSwipeableViews\n                    className={classes.banner}\n                    index={index}\n                    onChangeIndex={index => setIndex(index)}\n                    enableMouseEvents\n                    slideRenderer={params => {\n                      const { key, index } = params;\n                      const items = data?.current_topic.top_movies || [];\n                      const idx = mod(index, items.length);\n\n                      if (items[idx]) {\n                        return (\n                          <div key={key} className={clsx(classes.bannerItem)}>\n                            <MediaNormal {...items[idx]} />\n                          </div>\n                        );\n                      }\n                    }}\n                  />\n                </div>\n                <Box>\n                  <IconButton size=\"small\" onClick={() => setIndex(index + 1)}>\n                    <KeyboardArrowRight />\n                  </IconButton>\n                </Box>\n              </Box>\n            </Box>\n          </div>\n          <div className={classes.headItem}>\n            <MediaNormal {...data?.current_topic.top_movie} />\n          </div>\n        </div>\n      ) : (\n        <SpecialBox loading={loading} error={!!error} />\n      )}\n    </>\n  );\n}\n\nexport default Topic;\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Recommend, Topic, Aider } from \"./modules\";\nimport { Divider } from \"@material-ui/core\";\nimport {\n  BodyScreen,\n  ContentScreen,\n  AiderScreen,\n  FullScreen\n} from \"@/layouts/PageLayout\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: \"#fff\",\n      paddingLeft: theme.spacing(8),\n      paddingRight: theme.spacing(8)\n    },\n    aider: {\n      backgroundColor: \"#fff\",\n      width: \"100%\",\n      padding: theme.spacing(2, 2),\n      borderLeft: \"1px solid\",\n      borderColor: theme.palette.divider\n    },\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    }\n  })\n);\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Topic />\n          <Divider />\n          <Recommend />\n        </ContentScreen>\n        <AiderScreen sticky className={classes.aider}>\n          <Aider />\n        </AiderScreen>\n      </BodyScreen>\n    </FullScreen>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Typography, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  })\n);\n\nexport default function H5NotSupported() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h5\">\n        暂不支持移动端访问，请在PC浏览器访问。\n      </Typography>\n    </Paper>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport {\n  RouteWithLayout as Route,\n  Main as MainLayout\n  // MainWithoutSidebar as SecondaryLayout,\n} from \"../layouts\";\nimport Home from \"@/views/Home\";\nimport H5NotSupported from \"@/views/public/H5NotSupported\";\n\nconst MovieHome = React.lazy(() => import(\"@/views/movies/MovieHome\"));\nconst TVHome = React.lazy(() => import(\"@/views/tvs/TVHome\"));\nconst Movie = React.lazy(() => import(\"@/views/movies/Movie\"));\nconst MoviePlay = React.lazy(() => import(\"@/views/movies/MoviePlay\"));\nconst MovieUpload = React.lazy(() => import(\"@/views/movies/MovieUpload\"));\nconst TV = React.lazy(() => import(\"@/views/tvs/TV\"));\nconst Profile = React.lazy(() => import(\"@/views/users/Profile\"));\nconst Personal = React.lazy(() => import(\"@/views/users/Personal\"));\nconst Resume = React.lazy(() => import(\"@/views/users/Resume\"));\nconst Login = React.lazy(() => import(\"@/views/auth/Login\"));\nconst Completion = React.lazy(() => import(\"@/views/auth/Completion\"));\nconst NotFound = React.lazy(() => import(\"@/views/public/NotFound\"));\nconst Forbidden = React.lazy(() => import(\"@/views/public/Forbidden\"));\nconst InternalServerError = React.lazy(() =>\n  import(\"@/views/public/InternalServer\")\n);\nconst Test = React.lazy(() => import(\"@/views/Test\"));\n\nfunction AppRoute() {\n  const isH5 = /Android|webOS|iPhone|iPod|BlackBerry/i.test(\n    navigator.userAgent\n  );\n  if (isH5) {\n    return (\n      <Router>\n        <Switch>\n          <Route component={H5NotSupported} />\n        </Switch>\n      </Router>\n    );\n  }\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} layout={MainLayout} />\n        <Route lazy path=\"/home\" component={Home} layout={MainLayout} />\n        <Route\n          path=\"/movie-home\"\n          lazy\n          component={MovieHome}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/movie/:id\" component={Movie} layout={MainLayout} />\n        <Route\n          lazy\n          path=\"/movie-play/:id\"\n          component={MoviePlay}\n          layout={MainLayout}\n        />\n        <Route\n          lazy\n          path=\"/movie-upload\"\n          component={MovieUpload}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/tv-home\" component={TVHome} layout={MainLayout} />\n        <Route lazy path=\"/tv\" component={TV} layout={MainLayout} />\n        <Route\n          lazy\n          path=\"/profile/:username\"\n          component={Profile}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/personal\" component={Personal} layout={MainLayout} />\n        <Route lazy path=\"/resume\" component={Resume} />\n        <Route lazy path=\"/login\" component={Login} />\n        <Route lazy path=\"/completion\" component={Completion} />\n        <Route lazy path=\"/403\" exact component={Forbidden} />\n        <Route lazy path=\"/404\" exact component={NotFound} />\n        <Route lazy path=\"/50x\" exact component={InternalServerError} />\n        <Route lazy path=\"/test\" exact component={Test} />\n        <Route lazy component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRoute;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { SnackbarProvider, useSnackbar, OptionsObject } from \"notistack\";\n\ntype SnackbarProps = {\n  message: React.ReactNode;\n  options?: OptionsObject | undefined;\n};\n\n// add a <div> child to body under which to mount the snackbars\nconst mountPoint = document.createElement(\"div\");\ndocument.body.appendChild(mountPoint);\n\nconst ShowSnackbar = (props: SnackbarProps) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { message, options } = props;\n  enqueueSnackbar(message, options);\n  return <div></div>;\n};\n\nexport const Message = {\n  success: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"success\" });\n  },\n  warning: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"warning\" });\n  },\n  info: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"info\" });\n  },\n  error: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"error\" });\n  },\n  toast: function(msg: React.ReactNode, opts?: OptionsObject | undefined) {\n    ReactDOM.render(\n      <div>\n        <SnackbarProvider maxSnack={3}>\n          <ShowSnackbar message={msg} options={opts} />\n        </SnackbarProvider>\n      </div>,\n      mountPoint\n    );\n  }\n};\n\nexport default Message;\n","import { InMemoryCache, ReactiveVar, makeVar } from \"@apollo/client\";\nimport {\n  DEFAULT_USER_AVATAR,\n  DEFAULT_USER_NICKNAME,\n  DEFAULT_USER_DESCRIPTION\n} from \"@/common/constants/default.constant\";\n\nexport const cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    User: {\n      fields: {\n        avatar: {\n          read(avatar = DEFAULT_USER_AVATAR) {\n            return avatar ? avatar : DEFAULT_USER_AVATAR;\n          }\n        },\n        nickname: {\n          read(_) {\n            return _ ? _ : DEFAULT_USER_NICKNAME;\n          }\n        },\n        description: {\n          read(_) {\n            return _ ? _ : DEFAULT_USER_DESCRIPTION;\n          }\n        }\n      }\n    },\n    Character: {\n      fields: {\n        avatar: {\n          read(avatar = DEFAULT_USER_AVATAR) {\n            return avatar ? avatar : DEFAULT_USER_AVATAR;\n          }\n        }\n      }\n    },\n    PlatformAuthWay: {\n      fields: {\n        http_domain: {\n          read() {\n            return httpDomainVar();\n          }\n        }\n      }\n    }\n  }\n});\n\nexport const httpDomainVar: ReactiveVar<string> = makeVar<string>(\n  process.env.REACT_APP_HTTP_DOMAIN_URL || \"\"\n);\n","import { gql } from \"@apollo/client\";\n\nexport const typeDefs = gql`\n  directive @client on FIELD\n\n  extend type PlatformAuthWay {\n    http_domain: String!\n  }\n\n  extend type User {\n    avatar: String!\n  }\n\n  extend type Character {\n    avatar: String!\n  }\n`;\n\nexport default typeDefs;\n","import UserResolver from \"./user.mock\";\nimport CharacterResolver from \"./character.mock\";\n\nexport const resolvers = {\n  ...UserResolver,\n  ...CharacterResolver\n};\n","// import * as faker from \"faker\";\n\nexport default {\n  // User: {\n  //   uid: () => faker.random.uuid(),\n  //   username: () => faker.internet.userName(),\n  //   email: () => faker.internet.email(),\n  //   nickname: () => faker.name.firstName(),\n  //   avatar: () => faker.image.avatar(),\n  //   mobile: () => faker.phone.phoneNumber(),\n  //   address: () => faker.address.streetAddress(),\n  //   description: () => faker.lorem.lines(2),\n  //   create_at: () => faker.date.recent(3),\n  // },\n  Query: {\n    current_topic: () => {\n      return {\n        title: \"title\",\n        description: \"description\",\n        top_movies: [],\n        top_movie: null\n      };\n    },\n    user_urges: () => {\n      return [\n        {\n          nickname: null,\n          avatar: null,\n          username: \"sma2lbao080\",\n          uid: \"046bef3a-8bd1-4343-b0db-2a78c23eb9b3\",\n          description: null\n        }\n      ];\n    }\n  }\n};\n","// import * as faker from \"faker\";\n\nexport default {\n  // Character: {\n  //   name: faker.name.firstName(),\n  //   avatar: faker.image.avatar(),\n  //   description: faker.lorem.lines(2),\n  //   tags: faker.lorem.paragraphs(),\n  // },\n};\n","import Message from \"@/components/base/Message\";\nimport * as Sentry from \"@sentry/browser\";\nimport { ApolloClient, HttpLink, from, split, Resolvers } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { setContext } from \"@apollo/link-context\";\nimport { onError } from \"@apollo/link-error\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { cache } from \"./cache\";\nimport { typeDefs } from \"./local/schema\";\nimport { resolvers as mockResolvers } from \"./__mock__/resolvers\";\n\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_HTTP_URL\n});\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.REACT_APP_WEBSOCKET_URL || \"\",\n  options: {\n    reconnect: true\n  }\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nconst authLink = setContext((_, { headers }) => {\n  const access_token = localStorage.getItem(\"access_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: access_token ? `Bearer ${access_token}` : \"\"\n    }\n  };\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.log(\"graphQLErrors\", graphQLErrors);\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      Message.error(message || \"服务器繁忙\");\n      Sentry.captureMessage(message);\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      );\n    });\n  }\n  if (networkError) {\n    Sentry.captureException(networkError);\n    Message.error(\"服务器繁忙\");\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\nconst uploadLink = createUploadLink({\n  uri: process.env.REACT_APP_UPLOAD_URL\n});\n\nconst resolvers = process.env.REACT_APP_ENV === \"mock\" ? mockResolvers : {};\n\nexport const client = new ApolloClient({\n  resolvers: resolvers as Resolvers,\n  typeDefs,\n  cache,\n  link: from([errorLink, uploadLink, authLink, splitLink]),\n  connectToDevTools: true\n});\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { SnackbarProvider } from \"notistack\";\nimport theme from \"./theme\";\nimport AppRoute from \"./router\";\nimport { client } from \"./graphql\";\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={client}>\n          <AppRoute />\n        </ApolloProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/analytics\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n});\nfirebase.analytics();\n\nSentry.init({\n  enabled: process.env.NODE_ENV === \"production\",\n  dsn: process.env.REACT_APP_SENTRY_DSN\n});\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\nconst rootElement = document.getElementById(\"root\");\nif (rootElement?.hasChildNodes()) {\n  ReactDOM.hydrate(<App />, rootElement);\n} else {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  PROFILE,\n  MOVIE_DETAIL,\n  HOME,\n  MOVIE_HOME,\n  MOVIE_PLAY,\n  MOVIE_UPLOAD,\n  AUTH_COMPLETION\n} from \"@/common/constants/route.constant\";\n\nexport const useRouterHelper = () => {\n  const history = useHistory();\n\n  // go home page.\n  const gotoHome = () => {\n    history.push(`${HOME}`);\n  };\n\n  // go profile page.\n  const gotoProfile = (username: string | undefined | null) => {\n    history.push(`${PROFILE}/${username}`);\n  };\n\n  // go movie detail page.\n  const gotoMovie = (movie_id: number | undefined | null | string) => {\n    history.push(`${MOVIE_DETAIL}/${movie_id}`);\n  };\n\n  // go movie home page.\n  const gotoMovieHome = () => {\n    history.push(MOVIE_HOME);\n  };\n\n  // go movie play page.\n  const gotoMoviePlay = (movie_id: number | undefined | string | null) => {\n    history.push(`${MOVIE_PLAY}/${movie_id}`);\n  };\n\n  // go movie upload.\n  const gotoMovieUpload = () => {\n    history.push(`${MOVIE_UPLOAD}`);\n  };\n\n  // go info completion page.\n  const gotoAuthCompletion = () => {\n    history.push(`${AUTH_COMPLETION}`);\n  };\n\n  return {\n    push: (path: string, state?: any) => {\n      // console.log(path, state);\n      history.push(path, state);\n    },\n    gotoHome,\n    gotoProfile,\n    gotoMovie,\n    gotoMovieHome,\n    gotoMoviePlay,\n    gotoMovieUpload,\n    gotoAuthCompletion\n  };\n};\n","import * as React from \"react\";\nimport {\n  useIsFollowingLazyQuery,\n  useCreateFollowMutation,\n  useRemoveFollowMutation\n} from \"@/schema\";\nimport { useSnackbar } from \"notistack\";\n\nexport interface IFollowProps {\n  owner_uid: string;\n}\n\nexport const useFollowHelper = (props: IFollowProps) => {\n  const { owner_uid } = props;\n  const { enqueueSnackbar } = useSnackbar();\n  const [following, setFollowing] = React.useState<boolean>(false);\n\n  const [isFollowing] = useIsFollowingLazyQuery({\n    onCompleted(data) {\n      setFollowing(data.is_following);\n    }\n  });\n\n  React.useEffect(() => {\n    if (owner_uid) {\n      isFollowing({\n        variables: {\n          owner_uid\n        }\n      });\n    }\n  }, [isFollowing, owner_uid]);\n\n  const [createFollow] = useCreateFollowMutation({\n    onCompleted() {\n      enqueueSnackbar(\"关注成功\");\n    }\n  });\n  const [removeFollow] = useRemoveFollowMutation({\n    onCompleted() {\n      enqueueSnackbar(\"取消成功\");\n    }\n  });\n\n  const toggleFollow = () => {\n    if (owner_uid) {\n      if (following) {\n        removeFollow({\n          variables: {\n            follow: {\n              owner_uid\n            }\n          }\n        });\n      } else {\n        createFollow({\n          variables: {\n            follow: {\n              owner_uid: owner_uid\n            }\n          }\n        });\n      }\n    }\n  };\n  return {\n    following,\n    toggleFollow\n  };\n};\n","export * from \"./router.helper\";\nexport * from \"./follow.helper\";\n","export const DEFAULT_USER_NICKNAME = \"今天我们都是代号\";\n\nexport const DEFAULT_USER_DESCRIPTION = \"这个人很神秘，什么也没有留下！\";\n\nexport const DEFAULT_USER_AVATAR =\n  \"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3888102971,552433212&fm=26&gp=0.jpg\";\n\nexport const DEFAULT_HOLDER =\n  \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1599499118148&di=5c0774cf80d4e177da28a0e178fe05a9&imgtype=0&src=http%3A%2F%2Fimg.ewebweb.com%2Fuploads%2F20191006%2F18%2F1570356488-vKNlgYMhGu.jpg\";\n\nexport const DEFULAT_MOVIE_COVER =\n  \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1599499118148&di=5c0774cf80d4e177da28a0e178fe05a9&imgtype=0&src=http%3A%2F%2Fimg.ewebweb.com%2Fuploads%2F20191006%2F18%2F1570356488-vKNlgYMhGu.jpg\";\n\nexport const DEFAULT_PROFILE_COVER =\n  \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1599499118148&di=5c0774cf80d4e177da28a0e178fe05a9&imgtype=0&src=http%3A%2F%2Fimg.ewebweb.com%2Fuploads%2F20191006%2F18%2F1570356488-vKNlgYMhGu.jpg\";\n","// home page\nexport const HOME = \"/home\";\n\n// movie home page\nexport const MOVIE_HOME = \"/movie-home\";\n\n// movie detail page\nexport const MOVIE_DETAIL = \"/movie\";\n\n// profile page\nexport const PROFILE = \"/profile\";\n\n// movie play page\nexport const MOVIE_PLAY = \"/movie-play\";\n\n// movie upload page\nexport const MOVIE_UPLOAD = \"/movie-upload\";\n\n// auth completion page\nexport const AUTH_COMPLETION = \"/completion\";\n","import gql from \"graphql-tag\";\nimport * as ApolloReactCommon from \"@apollo/client\";\nimport * as ApolloReactHooks from \"@apollo/client\";\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: number | string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** Date custom scalar type */\n  Date: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type Bullet = {\n  readonly __typename?: \"Bullet\";\n  readonly id: Scalars[\"ID\"];\n  readonly content: Scalars[\"String\"];\n  readonly point?: Maybe<Scalars[\"Float\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly author: User;\n  readonly medium: Medium;\n};\n\nexport type Category = {\n  readonly __typename?: \"Category\";\n  readonly id: Scalars[\"ID\"];\n  readonly label: Scalars[\"String\"];\n  readonly alias?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly children?: Maybe<ReadonlyArray<Category>>;\n  readonly parent?: Maybe<Category>;\n};\n\nexport type Character = {\n  readonly __typename?: \"Character\";\n  readonly avatar: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly name: Scalars[\"String\"];\n  readonly tags?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n};\n\nexport type CreateBulletInput = {\n  readonly content: Scalars[\"String\"];\n  readonly point?: Maybe<Scalars[\"Float\"]>;\n  readonly medium_id: Scalars[\"Int\"];\n};\n\nexport type CreateCategoryInput = {\n  readonly label: Scalars[\"String\"];\n  readonly alias?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly parent_id?: Maybe<Scalars[\"Float\"]>;\n  readonly children?: Maybe<ReadonlyArray<CreateCategoryInput>>;\n};\n\nexport type CreateCharacterInput = {\n  readonly name: Scalars[\"String\"];\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly tags?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n};\n\nexport type CreateFollowInput = {\n  readonly follower_uid?: Maybe<Scalars[\"ID\"]>;\n  readonly owner_uid: Scalars[\"ID\"];\n};\n\nexport type CreateMovieInput = {\n  readonly title: Scalars[\"String\"];\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly cover: Scalars[\"String\"];\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly about?: Maybe<Scalars[\"String\"]>;\n  readonly region?: Maybe<Scalars[\"String\"]>;\n  readonly credits?: Maybe<ReadonlyArray<CreateCharacterInput>>;\n  readonly sources?: Maybe<ReadonlyArray<CreateMovieMediumInput>>;\n};\n\nexport type CreateMovieMediumInput = {\n  readonly name: Scalars[\"String\"];\n  readonly url: Scalars[\"String\"];\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly movie_id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type CreatePlaylistInput = {\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateReviewInput = {\n  readonly content: Scalars[\"String\"];\n  readonly author_uid?: Maybe<Scalars[\"ID\"]>;\n  readonly type: ReviewMedium;\n  readonly type_id: Scalars[\"ID\"];\n};\n\nexport type CreateTagInput = {\n  readonly label: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateTopicInput = {\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly top_movie_id?: Maybe<Scalars[\"ID\"]>;\n  readonly top_movies_ids?: Maybe<ReadonlyArray<Scalars[\"ID\"]>>;\n};\n\nexport type CreateUserInput = {\n  readonly username: Scalars[\"String\"];\n  readonly password: Scalars[\"String\"];\n  readonly email: Scalars[\"String\"];\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateUserWithCodeInput = {\n  readonly username: Scalars[\"String\"];\n  readonly password: Scalars[\"String\"];\n  readonly email: Scalars[\"String\"];\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly code: Scalars[\"String\"];\n};\n\nexport type CreateVideoInput = {\n  readonly title: Scalars[\"String\"];\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly cover: Scalars[\"String\"];\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly sources?: Maybe<ReadonlyArray<CreateVideoMediumInput>>;\n};\n\nexport type CreateVideoMediumInput = {\n  readonly name: Scalars[\"String\"];\n  readonly url: Scalars[\"String\"];\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly video_id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type CreateVoteInput = {\n  readonly medium_id: Scalars[\"Float\"];\n  readonly status: VoteStatus;\n  readonly owner_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type DeleteFollowInput = {\n  readonly follower_uid?: Maybe<Scalars[\"ID\"]>;\n  readonly owner_uid: Scalars[\"ID\"];\n};\n\nexport type Follow = {\n  readonly __typename?: \"Follow\";\n  readonly follower: User;\n  readonly owner: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type FollowEdge = {\n  readonly __typename?: \"FollowEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Follow;\n};\n\nexport type FollowPageInfo = {\n  readonly __typename?: \"FollowPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type FollowPaginated = {\n  readonly __typename?: \"FollowPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<FollowEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Follow>>;\n  readonly pageInfo: FollowPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Medium = {\n  readonly __typename?: \"Medium\";\n  readonly id: Scalars[\"ID\"];\n  readonly name?: Maybe<Scalars[\"String\"]>;\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly duration?: Maybe<Scalars[\"Float\"]>;\n  readonly preview_url?: Maybe<Scalars[\"String\"]>;\n  readonly url: Scalars[\"String\"];\n  readonly low_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly high_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly super_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly version: Scalars[\"Float\"];\n};\n\nexport type Movie = {\n  readonly __typename?: \"Movie\";\n  readonly id: Scalars[\"ID\"];\n  readonly title: Scalars[\"String\"];\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly cover: Scalars[\"String\"];\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly about?: Maybe<Scalars[\"String\"]>;\n  readonly region: Region;\n  readonly credits?: Maybe<ReadonlyArray<Character>>;\n  readonly sources: ReadonlyArray<MovieMedium>;\n  readonly author: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type MovieEdge = {\n  readonly __typename?: \"MovieEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Movie;\n};\n\nexport type MovieMedium = {\n  readonly __typename?: \"MovieMedium\";\n  readonly id: Scalars[\"ID\"];\n  readonly name?: Maybe<Scalars[\"String\"]>;\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly duration?: Maybe<Scalars[\"Float\"]>;\n  readonly preview_url?: Maybe<Scalars[\"String\"]>;\n  readonly url: Scalars[\"String\"];\n  readonly low_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly high_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly super_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly version: Scalars[\"Float\"];\n};\n\nexport type MoviePageInfo = {\n  readonly __typename?: \"MoviePageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type MoviePaginated = {\n  readonly __typename?: \"MoviePaginated\";\n  readonly edges?: Maybe<ReadonlyArray<MovieEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Movie>>;\n  readonly pageInfo: MoviePageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Mutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_tag: Tag;\n  readonly add_movie_to_tag: Scalars[\"Boolean\"];\n  readonly add_category_to_tag: Scalars[\"Boolean\"];\n  readonly create_movie: Movie;\n  readonly update_movie: Movie;\n  readonly add_mediums_to_movie: Movie;\n  readonly create_category: Category;\n  readonly delete_category: Scalars[\"Boolean\"];\n  readonly create_bullet: Bullet;\n  readonly login: Scalars[\"String\"];\n  /** create user. */\n  readonly create_user: User;\n  /** create user with verif code. */\n  readonly create_user_with_code: User;\n  readonly send_register_email: Scalars[\"Boolean\"];\n  readonly update_user: User;\n  readonly upload_file_oss: Scalars[\"String\"];\n  readonly create_topic: Topic;\n  readonly create_review: Review;\n  readonly create_playlist: Playlist;\n  readonly add_movie_to_playlist: Scalars[\"Boolean\"];\n  readonly create_follow: Follow;\n  readonly remove_follow: Follow;\n  readonly create_video: Video;\n  readonly add_mediums_to_video: Video;\n  readonly create_or_update_vote: Vote;\n};\n\nexport type MutationCreate_TagArgs = {\n  tag: CreateTagInput;\n};\n\nexport type MutationAdd_Movie_To_TagArgs = {\n  tag_id: Scalars[\"Float\"];\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type MutationAdd_Category_To_TagArgs = {\n  tag_id: Scalars[\"Float\"];\n  category_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_MovieArgs = {\n  movie: CreateMovieInput;\n};\n\nexport type MutationUpdate_MovieArgs = {\n  movie: UpdateMovieInput;\n  movie_id: Scalars[\"ID\"];\n};\n\nexport type MutationAdd_Mediums_To_MovieArgs = {\n  movie_medium: CreateMovieMediumInput;\n  movie_id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_CategoryArgs = {\n  category: CreateCategoryInput;\n};\n\nexport type MutationDelete_CategoryArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_BulletArgs = {\n  bullet: CreateBulletInput;\n};\n\nexport type MutationLoginArgs = {\n  password: Scalars[\"String\"];\n  username: Scalars[\"String\"];\n};\n\nexport type MutationCreate_UserArgs = {\n  user: CreateUserInput;\n};\n\nexport type MutationCreate_User_With_CodeArgs = {\n  user: CreateUserWithCodeInput;\n};\n\nexport type MutationSend_Register_EmailArgs = {\n  email: Scalars[\"String\"];\n};\n\nexport type MutationUpdate_UserArgs = {\n  user: UpdateUserInput;\n};\n\nexport type MutationUpload_File_OssArgs = {\n  file: Scalars[\"Upload\"];\n};\n\nexport type MutationCreate_TopicArgs = {\n  topic: CreateTopicInput;\n};\n\nexport type MutationCreate_ReviewArgs = {\n  review: CreateReviewInput;\n};\n\nexport type MutationCreate_PlaylistArgs = {\n  playlist: CreatePlaylistInput;\n};\n\nexport type MutationAdd_Movie_To_PlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_FollowArgs = {\n  follow: CreateFollowInput;\n};\n\nexport type MutationRemove_FollowArgs = {\n  follow: DeleteFollowInput;\n};\n\nexport type MutationCreate_VideoArgs = {\n  video: CreateVideoInput;\n};\n\nexport type MutationAdd_Mediums_To_VideoArgs = {\n  video_medium: CreateVideoMediumInput;\n  video_id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_Or_Update_VoteArgs = {\n  vote: CreateVoteInput;\n};\n\nexport type PaginatedQuery = {\n  readonly first?: Maybe<Scalars[\"Int\"]>;\n  readonly after?: Maybe<Scalars[\"String\"]>;\n  readonly last?: Maybe<Scalars[\"Int\"]>;\n  readonly before?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type PlatformAuthWay = {\n  readonly __typename?: \"PlatformAuthWay\";\n  readonly http_domain: Scalars[\"String\"];\n  readonly platform: Scalars[\"String\"];\n  readonly url: Scalars[\"String\"];\n};\n\nexport type Playlist = {\n  readonly __typename?: \"Playlist\";\n  readonly id: Scalars[\"ID\"];\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly movies?: Maybe<ReadonlyArray<Movie>>;\n  readonly movies_count?: Maybe<Scalars[\"Float\"]>;\n  readonly author: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type PlaylistEdge = {\n  readonly __typename?: \"PlaylistEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Playlist;\n};\n\nexport type PlaylistPageInfo = {\n  readonly __typename?: \"PlaylistPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type PlaylistPaginated = {\n  readonly __typename?: \"PlaylistPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<PlaylistEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Playlist>>;\n  readonly pageInfo: PlaylistPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Query = {\n  readonly __typename?: \"Query\";\n  readonly movie: Movie;\n  readonly movies_paginated: MoviePaginated;\n  readonly user_movies_paginated: MoviePaginated;\n  readonly me: User;\n  readonly platform_auth_way: ReadonlyArray<PlatformAuthWay>;\n  /** find username exit. */\n  readonly has_username: Scalars[\"Boolean\"];\n  /** find user by uid or username. */\n  readonly user: User;\n  /** all user with paginated. */\n  readonly users_paginated: UserPaginated;\n  readonly current_topic: Topic;\n  readonly movie_urges: ReadonlyArray<Movie>;\n  readonly movie_urges_by_movie: ReadonlyArray<Movie>;\n  readonly user_urges: ReadonlyArray<User>;\n  readonly movie_next_urges_by_movie: ReadonlyArray<Movie>;\n  readonly reviews_paginated: ReviewPaginated;\n  readonly playlists_paginated: PlaylistPaginated;\n  readonly playlist: Playlist;\n  readonly follows: ReadonlyArray<Follow>;\n  readonly follows_paginated: FollowPaginated;\n  readonly follows_total: Scalars[\"Int\"];\n  readonly fans: ReadonlyArray<Follow>;\n  readonly fans_paginated: FollowPaginated;\n  readonly fans_total: Scalars[\"Int\"];\n  readonly is_following: Scalars[\"Boolean\"];\n  readonly video: Video;\n  readonly videos_paginated: VideoPaginated;\n  readonly vote: Vote;\n  readonly medium_vote_count: Scalars[\"Int\"];\n};\n\nexport type QueryMovieArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryMovies_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryUser_Movies_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n  author_username: Scalars[\"String\"];\n};\n\nexport type QueryHas_UsernameArgs = {\n  username: Scalars[\"String\"];\n};\n\nexport type QueryUserArgs = {\n  username?: Maybe<Scalars[\"String\"]>;\n  uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryUsers_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryMovie_Urges_By_MovieArgs = {\n  movie_id: Scalars[\"ID\"];\n};\n\nexport type QueryMovie_Next_Urges_By_MovieArgs = {\n  movie_id: Scalars[\"ID\"];\n};\n\nexport type QueryReviews_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n  type_id?: Maybe<Scalars[\"ID\"]>;\n  type?: Maybe<ReviewMedium>;\n};\n\nexport type QueryPlaylists_PaginatedArgs = {\n  author_username?: Maybe<Scalars[\"String\"]>;\n  author_uid?: Maybe<Scalars[\"String\"]>;\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryPlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n};\n\nexport type QueryFollows_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFollows_TotalArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryFans_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFans_TotalArgs = {\n  owner_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryIs_FollowingArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n  owner_uid: Scalars[\"String\"];\n};\n\nexport type QueryVideoArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryVideos_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryVoteArgs = {\n  medium_id: Scalars[\"Float\"];\n};\n\nexport type QueryMedium_Vote_CountArgs = {\n  status: Scalars[\"String\"];\n  medium_id: Scalars[\"Float\"];\n};\n\nexport enum Region {\n  Mainland = \"Mainland\",\n  America = \"America\",\n  Hongkong = \"Hongkong\",\n  Taiwan = \"Taiwan\",\n  Britain = \"Britain\",\n  India = \"India\"\n}\n\nexport type Review = {\n  readonly __typename?: \"Review\";\n  readonly id: Scalars[\"ID\"];\n  readonly content: Scalars[\"String\"];\n  readonly author: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type ReviewEdge = {\n  readonly __typename?: \"ReviewEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Review;\n};\n\nexport enum ReviewMedium {\n  Medium = \"MEDIUM\",\n  Movie = \"MOVIE\"\n}\n\nexport type ReviewPageInfo = {\n  readonly __typename?: \"ReviewPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type ReviewPaginated = {\n  readonly __typename?: \"ReviewPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<ReviewEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Review>>;\n  readonly pageInfo: ReviewPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Subscription = {\n  readonly __typename?: \"Subscription\";\n  readonly user_created: User;\n  readonly review_created: Review;\n};\n\nexport type SubscriptionReview_CreatedArgs = {\n  type_id: Scalars[\"ID\"];\n  type: ReviewMedium;\n};\n\nexport type Tag = {\n  readonly __typename?: \"Tag\";\n  readonly id: Scalars[\"ID\"];\n  readonly label: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly movies?: Maybe<ReadonlyArray<Movie>>;\n  readonly categories?: Maybe<ReadonlyArray<Category>>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n};\n\nexport type Topic = {\n  readonly __typename?: \"Topic\";\n  readonly id: Scalars[\"ID\"];\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly top_movie?: Maybe<Movie>;\n  readonly top_movies?: Maybe<ReadonlyArray<Movie>>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type UpdateMovieInput = {\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly about?: Maybe<Scalars[\"String\"]>;\n  readonly region?: Maybe<Scalars[\"String\"]>;\n  readonly credits?: Maybe<ReadonlyArray<CreateCharacterInput>>;\n  readonly sources?: Maybe<ReadonlyArray<CreateMovieMediumInput>>;\n  readonly title?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UpdateUserInput = {\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly password?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type User = {\n  readonly __typename?: \"User\";\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly avatar: Scalars[\"String\"];\n  readonly create_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly email?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly uid: Scalars[\"ID\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly username: Scalars[\"String\"];\n};\n\nexport type UserEdge = {\n  readonly __typename?: \"UserEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: User;\n};\n\nexport type UserPageInfo = {\n  readonly __typename?: \"UserPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type UserPaginated = {\n  readonly __typename?: \"UserPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<UserEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<User>>;\n  readonly pageInfo: UserPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Video = {\n  readonly __typename?: \"Video\";\n  readonly id: Scalars[\"ID\"];\n  readonly title: Scalars[\"String\"];\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly cover: Scalars[\"String\"];\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly sources: ReadonlyArray<VideoMedium>;\n  readonly author: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type VideoEdge = {\n  readonly __typename?: \"VideoEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Video;\n};\n\nexport type VideoMedium = {\n  readonly __typename?: \"VideoMedium\";\n  readonly id: Scalars[\"ID\"];\n  readonly name?: Maybe<Scalars[\"String\"]>;\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly duration?: Maybe<Scalars[\"Float\"]>;\n  readonly preview_url?: Maybe<Scalars[\"String\"]>;\n  readonly url: Scalars[\"String\"];\n  readonly low_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly high_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly super_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly version: Scalars[\"Float\"];\n};\n\nexport type VideoPageInfo = {\n  readonly __typename?: \"VideoPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type VideoPaginated = {\n  readonly __typename?: \"VideoPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<VideoEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Video>>;\n  readonly pageInfo: VideoPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Vote = {\n  readonly __typename?: \"Vote\";\n  readonly id: Scalars[\"ID\"];\n  readonly status: VoteStatus;\n  readonly owner: User;\n  readonly medium: Medium;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport enum VoteStatus {\n  Likd = \"LIKD\",\n  Dislike = \"DISLIKE\",\n  Default = \"DEFAULT\"\n}\n\nexport type LoginMutationVariables = Exact<{\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n}>;\n\nexport type LoginMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly login: string;\n};\n\nexport type SendRegisterEmailMutationVariables = Exact<{\n  email: Scalars[\"String\"];\n}>;\n\nexport type SendRegisterEmailMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly send_register_email: boolean;\n};\n\nexport type CreateUserWithCodeMutationVariables = Exact<{\n  user: CreateUserWithCodeInput;\n}>;\n\nexport type CreateUserWithCodeMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_user_with_code: {\n    readonly __typename?: \"User\";\n    readonly username: string;\n    readonly avatar: string;\n  };\n};\n\nexport type UpdateUserMutationVariables = Exact<{\n  user: UpdateUserInput;\n}>;\n\nexport type UpdateUserMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly update_user: {\n    readonly __typename?: \"User\";\n    readonly uid: number | string;\n    readonly username: string;\n    readonly email?: Maybe<string>;\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly mobile?: Maybe<string>;\n    readonly address?: Maybe<string>;\n    readonly description?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n  };\n};\n\nexport type CreateMovieMutationVariables = Exact<{\n  movie: CreateMovieInput;\n}>;\n\nexport type CreateMovieMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_movie: {\n    readonly __typename?: \"Movie\";\n    readonly create_at: any;\n  };\n};\n\nexport type UpdateMovieMutationVariables = Exact<{\n  movie: UpdateMovieInput;\n  movie_id: Scalars[\"ID\"];\n}>;\n\nexport type UpdateMovieMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly update_movie: {\n    readonly __typename?: \"Movie\";\n    readonly create_at: any;\n  };\n};\n\nexport type AddMediumsToMovieMutationVariables = Exact<{\n  movie_id: Scalars[\"ID\"];\n  movie_medium: CreateMovieMediumInput;\n}>;\n\nexport type AddMediumsToMovieMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly add_mediums_to_movie: {\n    readonly __typename?: \"Movie\";\n    readonly sources: ReadonlyArray<{\n      readonly __typename?: \"MovieMedium\";\n      readonly name?: Maybe<string>;\n    }>;\n  };\n};\n\nexport type UploadFileOssMutationVariables = Exact<{\n  file: Scalars[\"Upload\"];\n}>;\n\nexport type UploadFileOssMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly upload_file_oss: string;\n};\n\nexport type CreateFollowMutationVariables = Exact<{\n  follow: CreateFollowInput;\n}>;\n\nexport type CreateFollowMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_follow: {\n    readonly __typename?: \"Follow\";\n    readonly create_at: any;\n  };\n};\n\nexport type RemoveFollowMutationVariables = Exact<{\n  follow: DeleteFollowInput;\n}>;\n\nexport type RemoveFollowMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly remove_follow: {\n    readonly __typename?: \"Follow\";\n    readonly create_at: any;\n  };\n};\n\nexport type PlatformAuthWayQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type PlatformAuthWayQuery = {\n  readonly __typename?: \"Query\";\n  readonly platform_auth_way: ReadonlyArray<{\n    readonly __typename?: \"PlatformAuthWay\";\n    readonly platform: string;\n    readonly url: string;\n    readonly http_domain: string;\n  }>;\n};\n\nexport type HasUsernameQueryVariables = Exact<{\n  username: Scalars[\"String\"];\n}>;\n\nexport type HasUsernameQuery = {\n  readonly __typename?: \"Query\";\n  readonly has_username: boolean;\n};\n\nexport type MeQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MeQuery = {\n  readonly __typename?: \"Query\";\n  readonly me: {\n    readonly __typename?: \"User\";\n    readonly uid: number | string;\n    readonly username: string;\n    readonly email?: Maybe<string>;\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly mobile?: Maybe<string>;\n    readonly address?: Maybe<string>;\n    readonly description?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n  };\n};\n\nexport type CurrentTopicQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type CurrentTopicQuery = {\n  readonly __typename?: \"Query\";\n  readonly current_topic: {\n    readonly __typename?: \"Topic\";\n    readonly id: number | string;\n    readonly title: string;\n    readonly description?: Maybe<string>;\n    readonly top_movies?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"Movie\";\n        readonly id: number | string;\n        readonly description?: Maybe<string>;\n        readonly title: string;\n        readonly sub_title?: Maybe<string>;\n        readonly create_at: any;\n        readonly update_at: any;\n        readonly cover: string;\n        readonly posters?: Maybe<ReadonlyArray<string>>;\n        readonly author: {\n          readonly __typename?: \"User\";\n          readonly uid: number | string;\n          readonly avatar: string;\n          readonly nickname?: Maybe<string>;\n          readonly username: string;\n          readonly description?: Maybe<string>;\n        };\n      }>\n    >;\n    readonly top_movie?: Maybe<{\n      readonly __typename?: \"Movie\";\n      readonly id: number | string;\n      readonly description?: Maybe<string>;\n      readonly title: string;\n      readonly sub_title?: Maybe<string>;\n      readonly create_at: any;\n      readonly update_at: any;\n      readonly cover: string;\n      readonly posters?: Maybe<ReadonlyArray<string>>;\n      readonly author: {\n        readonly __typename?: \"User\";\n        readonly uid: number | string;\n        readonly avatar: string;\n        readonly nickname?: Maybe<string>;\n        readonly username: string;\n        readonly description?: Maybe<string>;\n      };\n    }>;\n  };\n};\n\nexport type MovieUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MovieUrgesQuery = {\n  readonly __typename?: \"Query\";\n  readonly movie_urges: ReadonlyArray<{\n    readonly __typename?: \"Movie\";\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n  }>;\n};\n\nexport type UserUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type UserUrgesQuery = {\n  readonly __typename?: \"Query\";\n  readonly user_urges: ReadonlyArray<{\n    readonly __typename?: \"User\";\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly username: string;\n    readonly uid: number | string;\n    readonly description?: Maybe<string>;\n  }>;\n};\n\nexport type MovieQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type MovieQuery = {\n  readonly __typename?: \"Query\";\n  readonly movie: {\n    readonly __typename?: \"Movie\";\n    readonly alias_title?: Maybe<string>;\n    readonly region: Region;\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly credits?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"Character\";\n        readonly avatar: string;\n        readonly name: string;\n        readonly description?: Maybe<string>;\n      }>\n    >;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n    readonly sources: ReadonlyArray<{\n      readonly __typename?: \"MovieMedium\";\n      readonly id: number | string;\n      readonly url: string;\n      readonly super_quality_url?: Maybe<string>;\n      readonly preview_url?: Maybe<string>;\n      readonly posters?: Maybe<ReadonlyArray<string>>;\n      readonly name?: Maybe<string>;\n      readonly medium_quality_url?: Maybe<string>;\n      readonly low_quality_url?: Maybe<string>;\n      readonly high_quality_url?: Maybe<string>;\n      readonly duration?: Maybe<number>;\n      readonly description?: Maybe<string>;\n      readonly alias_name?: Maybe<string>;\n      readonly create_at: any;\n      readonly update_at: any;\n    }>;\n  };\n};\n\nexport type MoviesPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type MoviesPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly movies_paginated: {\n    readonly __typename?: \"MoviePaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"MoviePageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"MovieEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Movie\";\n          readonly id: number | string;\n          readonly description?: Maybe<string>;\n          readonly title: string;\n          readonly sub_title?: Maybe<string>;\n          readonly create_at: any;\n          readonly update_at: any;\n          readonly cover: string;\n          readonly posters?: Maybe<ReadonlyArray<string>>;\n          readonly author: {\n            readonly __typename?: \"User\";\n            readonly uid: number | string;\n            readonly avatar: string;\n            readonly nickname?: Maybe<string>;\n            readonly username: string;\n            readonly description?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type UserMoviesPaginatedQueryVariables = Exact<{\n  author_username: Scalars[\"String\"];\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type UserMoviesPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly user_movies_paginated: {\n    readonly __typename?: \"MoviePaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"MoviePageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"MovieEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Movie\";\n          readonly id: number | string;\n          readonly description?: Maybe<string>;\n          readonly title: string;\n          readonly sub_title?: Maybe<string>;\n          readonly create_at: any;\n          readonly update_at: any;\n          readonly cover: string;\n          readonly posters?: Maybe<ReadonlyArray<string>>;\n          readonly author: {\n            readonly __typename?: \"User\";\n            readonly uid: number | string;\n            readonly avatar: string;\n            readonly nickname?: Maybe<string>;\n            readonly username: string;\n            readonly description?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type MovieUrgesByMovieQueryVariables = Exact<{\n  movie_id: Scalars[\"ID\"];\n}>;\n\nexport type MovieUrgesByMovieQuery = {\n  readonly __typename?: \"Query\";\n  readonly movie_urges_by_movie: ReadonlyArray<{\n    readonly __typename?: \"Movie\";\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n  }>;\n};\n\nexport type MovieNextUrgesByMovieQueryVariables = Exact<{\n  movie_id: Scalars[\"ID\"];\n}>;\n\nexport type MovieNextUrgesByMovieQuery = {\n  readonly __typename?: \"Query\";\n  readonly movie_next_urges_by_movie: ReadonlyArray<{\n    readonly __typename?: \"Movie\";\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n  }>;\n};\n\nexport type PlaylistsPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n  author_uid?: Maybe<Scalars[\"String\"]>;\n  author_username?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type PlaylistsPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly playlists_paginated: {\n    readonly __typename?: \"PlaylistPaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"PlaylistPageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"PlaylistEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Playlist\";\n          readonly title: string;\n          readonly description?: Maybe<string>;\n          readonly cover?: Maybe<string>;\n          readonly create_at: any;\n        };\n      }>\n    >;\n  };\n};\n\nexport type IsFollowingQueryVariables = Exact<{\n  owner_uid: Scalars[\"String\"];\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type IsFollowingQuery = {\n  readonly __typename?: \"Query\";\n  readonly is_following: boolean;\n};\n\nexport type UserQueryVariables = Exact<{\n  uid?: Maybe<Scalars[\"String\"]>;\n  username?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type UserQuery = {\n  readonly __typename?: \"Query\";\n  readonly user: {\n    readonly __typename?: \"User\";\n    readonly uid: number | string;\n    readonly username: string;\n    readonly email?: Maybe<string>;\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly mobile?: Maybe<string>;\n    readonly address?: Maybe<string>;\n    readonly description?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly delete_at?: Maybe<any>;\n  };\n};\n\nexport type ReviewCreatedSubscriptionVariables = Exact<{\n  type: ReviewMedium;\n  type_id: Scalars[\"ID\"];\n}>;\n\nexport type ReviewCreatedSubscription = {\n  readonly __typename?: \"Subscription\";\n  readonly review_created: {\n    readonly __typename?: \"Review\";\n    readonly content: string;\n    readonly create_at: any;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly nickname?: Maybe<string>;\n      readonly avatar: string;\n    };\n  };\n};\n\nexport const MeFragmentDoc = gql`\n  fragment Me on User {\n    uid\n    username\n    email\n    nickname\n    avatar\n    mobile\n    address\n    description\n    create_at\n    update_at\n  }\n`;\nexport const AuthorFragmentDoc = gql`\n  fragment Author on User {\n    uid\n    avatar\n    nickname\n    username\n    description\n  }\n`;\nexport const MovieFragmentDoc = gql`\n  fragment Movie on Movie {\n    id\n    description\n    title\n    sub_title\n    create_at\n    update_at\n    cover\n    posters\n  }\n`;\nexport const MovieSourceFragmentDoc = gql`\n  fragment MovieSource on MovieMedium {\n    id\n    url\n    super_quality_url\n    preview_url\n    posters\n    name\n    medium_quality_url\n    low_quality_url\n    high_quality_url\n    duration\n    description\n    alias_name\n    create_at\n    update_at\n  }\n`;\nexport const LoginDocument = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)\n  }\n`;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<\n  LoginMutation,\n  LoginMutationVariables\n>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      username: // value for 'username'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    LoginMutation,\n    LoginMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(\n    LoginDocument,\n    baseOptions\n  );\n}\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<\n  LoginMutation\n>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  LoginMutation,\n  LoginMutationVariables\n>;\nexport const SendRegisterEmailDocument = gql`\n  mutation sendRegisterEmail($email: String!) {\n    send_register_email(email: $email)\n  }\n`;\nexport type SendRegisterEmailMutationFn = ApolloReactCommon.MutationFunction<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\n\n/**\n * __useSendRegisterEmailMutation__\n *\n * To run a mutation, you first call `useSendRegisterEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSendRegisterEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [sendRegisterEmailMutation, { data, loading, error }] = useSendRegisterEmailMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useSendRegisterEmailMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >(SendRegisterEmailDocument, baseOptions);\n}\nexport type SendRegisterEmailMutationHookResult = ReturnType<\n  typeof useSendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationResult = ApolloReactCommon.MutationResult<\n  SendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\nexport const CreateUserWithCodeDocument = gql`\n  mutation createUserWithCode($user: CreateUserWithCodeInput!) {\n    create_user_with_code(user: $user) {\n      username\n      avatar\n    }\n  }\n`;\nexport type CreateUserWithCodeMutationFn = ApolloReactCommon.MutationFunction<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\n\n/**\n * __useCreateUserWithCodeMutation__\n *\n * To run a mutation, you first call `useCreateUserWithCodeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateUserWithCodeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createUserWithCodeMutation, { data, loading, error }] = useCreateUserWithCodeMutation({\n *   variables: {\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useCreateUserWithCodeMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >(CreateUserWithCodeDocument, baseOptions);\n}\nexport type CreateUserWithCodeMutationHookResult = ReturnType<\n  typeof useCreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationResult = ApolloReactCommon.MutationResult<\n  CreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\nexport const UpdateUserDocument = gql`\n  mutation updateUser($user: UpdateUserInput!) {\n    update_user(user: $user) {\n      ...Me\n    }\n  }\n  ${MeFragmentDoc}\n`;\nexport type UpdateUserMutationFn = ApolloReactCommon.MutationFunction<\n  UpdateUserMutation,\n  UpdateUserMutationVariables\n>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useUpdateUserMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    UpdateUserMutation,\n    UpdateUserMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    UpdateUserMutation,\n    UpdateUserMutationVariables\n  >(UpdateUserDocument, baseOptions);\n}\nexport type UpdateUserMutationHookResult = ReturnType<\n  typeof useUpdateUserMutation\n>;\nexport type UpdateUserMutationResult = ApolloReactCommon.MutationResult<\n  UpdateUserMutation\n>;\nexport type UpdateUserMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  UpdateUserMutation,\n  UpdateUserMutationVariables\n>;\nexport const CreateMovieDocument = gql`\n  mutation createMovie($movie: CreateMovieInput!) {\n    create_movie(movie: $movie) {\n      create_at\n    }\n  }\n`;\nexport type CreateMovieMutationFn = ApolloReactCommon.MutationFunction<\n  CreateMovieMutation,\n  CreateMovieMutationVariables\n>;\n\n/**\n * __useCreateMovieMutation__\n *\n * To run a mutation, you first call `useCreateMovieMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateMovieMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createMovieMutation, { data, loading, error }] = useCreateMovieMutation({\n *   variables: {\n *      movie: // value for 'movie'\n *   },\n * });\n */\nexport function useCreateMovieMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateMovieMutation,\n    CreateMovieMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateMovieMutation,\n    CreateMovieMutationVariables\n  >(CreateMovieDocument, baseOptions);\n}\nexport type CreateMovieMutationHookResult = ReturnType<\n  typeof useCreateMovieMutation\n>;\nexport type CreateMovieMutationResult = ApolloReactCommon.MutationResult<\n  CreateMovieMutation\n>;\nexport type CreateMovieMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateMovieMutation,\n  CreateMovieMutationVariables\n>;\nexport const UpdateMovieDocument = gql`\n  mutation updateMovie($movie: UpdateMovieInput!, $movie_id: ID!) {\n    update_movie(movie_id: $movie_id, movie: $movie) {\n      create_at\n    }\n  }\n`;\nexport type UpdateMovieMutationFn = ApolloReactCommon.MutationFunction<\n  UpdateMovieMutation,\n  UpdateMovieMutationVariables\n>;\n\n/**\n * __useUpdateMovieMutation__\n *\n * To run a mutation, you first call `useUpdateMovieMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateMovieMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateMovieMutation, { data, loading, error }] = useUpdateMovieMutation({\n *   variables: {\n *      movie: // value for 'movie'\n *      movie_id: // value for 'movie_id'\n *   },\n * });\n */\nexport function useUpdateMovieMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    UpdateMovieMutation,\n    UpdateMovieMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    UpdateMovieMutation,\n    UpdateMovieMutationVariables\n  >(UpdateMovieDocument, baseOptions);\n}\nexport type UpdateMovieMutationHookResult = ReturnType<\n  typeof useUpdateMovieMutation\n>;\nexport type UpdateMovieMutationResult = ApolloReactCommon.MutationResult<\n  UpdateMovieMutation\n>;\nexport type UpdateMovieMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  UpdateMovieMutation,\n  UpdateMovieMutationVariables\n>;\nexport const AddMediumsToMovieDocument = gql`\n  mutation addMediumsToMovie(\n    $movie_id: ID!\n    $movie_medium: CreateMovieMediumInput!\n  ) {\n    add_mediums_to_movie(movie_id: $movie_id, movie_medium: $movie_medium) {\n      sources {\n        name\n      }\n    }\n  }\n`;\nexport type AddMediumsToMovieMutationFn = ApolloReactCommon.MutationFunction<\n  AddMediumsToMovieMutation,\n  AddMediumsToMovieMutationVariables\n>;\n\n/**\n * __useAddMediumsToMovieMutation__\n *\n * To run a mutation, you first call `useAddMediumsToMovieMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddMediumsToMovieMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addMediumsToMovieMutation, { data, loading, error }] = useAddMediumsToMovieMutation({\n *   variables: {\n *      movie_id: // value for 'movie_id'\n *      movie_medium: // value for 'movie_medium'\n *   },\n * });\n */\nexport function useAddMediumsToMovieMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    AddMediumsToMovieMutation,\n    AddMediumsToMovieMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    AddMediumsToMovieMutation,\n    AddMediumsToMovieMutationVariables\n  >(AddMediumsToMovieDocument, baseOptions);\n}\nexport type AddMediumsToMovieMutationHookResult = ReturnType<\n  typeof useAddMediumsToMovieMutation\n>;\nexport type AddMediumsToMovieMutationResult = ApolloReactCommon.MutationResult<\n  AddMediumsToMovieMutation\n>;\nexport type AddMediumsToMovieMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  AddMediumsToMovieMutation,\n  AddMediumsToMovieMutationVariables\n>;\nexport const UploadFileOssDocument = gql`\n  mutation uploadFileOss($file: Upload!) {\n    upload_file_oss(file: $file)\n  }\n`;\nexport type UploadFileOssMutationFn = ApolloReactCommon.MutationFunction<\n  UploadFileOssMutation,\n  UploadFileOssMutationVariables\n>;\n\n/**\n * __useUploadFileOssMutation__\n *\n * To run a mutation, you first call `useUploadFileOssMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUploadFileOssMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [uploadFileOssMutation, { data, loading, error }] = useUploadFileOssMutation({\n *   variables: {\n *      file: // value for 'file'\n *   },\n * });\n */\nexport function useUploadFileOssMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    UploadFileOssMutation,\n    UploadFileOssMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    UploadFileOssMutation,\n    UploadFileOssMutationVariables\n  >(UploadFileOssDocument, baseOptions);\n}\nexport type UploadFileOssMutationHookResult = ReturnType<\n  typeof useUploadFileOssMutation\n>;\nexport type UploadFileOssMutationResult = ApolloReactCommon.MutationResult<\n  UploadFileOssMutation\n>;\nexport type UploadFileOssMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  UploadFileOssMutation,\n  UploadFileOssMutationVariables\n>;\nexport const CreateFollowDocument = gql`\n  mutation createFollow($follow: CreateFollowInput!) {\n    create_follow(follow: $follow) {\n      create_at\n    }\n  }\n`;\nexport type CreateFollowMutationFn = ApolloReactCommon.MutationFunction<\n  CreateFollowMutation,\n  CreateFollowMutationVariables\n>;\n\n/**\n * __useCreateFollowMutation__\n *\n * To run a mutation, you first call `useCreateFollowMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateFollowMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createFollowMutation, { data, loading, error }] = useCreateFollowMutation({\n *   variables: {\n *      follow: // value for 'follow'\n *   },\n * });\n */\nexport function useCreateFollowMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateFollowMutation,\n    CreateFollowMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateFollowMutation,\n    CreateFollowMutationVariables\n  >(CreateFollowDocument, baseOptions);\n}\nexport type CreateFollowMutationHookResult = ReturnType<\n  typeof useCreateFollowMutation\n>;\nexport type CreateFollowMutationResult = ApolloReactCommon.MutationResult<\n  CreateFollowMutation\n>;\nexport type CreateFollowMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateFollowMutation,\n  CreateFollowMutationVariables\n>;\nexport const RemoveFollowDocument = gql`\n  mutation removeFollow($follow: DeleteFollowInput!) {\n    remove_follow(follow: $follow) {\n      create_at\n    }\n  }\n`;\nexport type RemoveFollowMutationFn = ApolloReactCommon.MutationFunction<\n  RemoveFollowMutation,\n  RemoveFollowMutationVariables\n>;\n\n/**\n * __useRemoveFollowMutation__\n *\n * To run a mutation, you first call `useRemoveFollowMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRemoveFollowMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [removeFollowMutation, { data, loading, error }] = useRemoveFollowMutation({\n *   variables: {\n *      follow: // value for 'follow'\n *   },\n * });\n */\nexport function useRemoveFollowMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    RemoveFollowMutation,\n    RemoveFollowMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    RemoveFollowMutation,\n    RemoveFollowMutationVariables\n  >(RemoveFollowDocument, baseOptions);\n}\nexport type RemoveFollowMutationHookResult = ReturnType<\n  typeof useRemoveFollowMutation\n>;\nexport type RemoveFollowMutationResult = ApolloReactCommon.MutationResult<\n  RemoveFollowMutation\n>;\nexport type RemoveFollowMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  RemoveFollowMutation,\n  RemoveFollowMutationVariables\n>;\nexport const PlatformAuthWayDocument = gql`\n  query platformAuthWay {\n    platform_auth_way {\n      platform\n      url\n      http_domain @client\n    }\n  }\n`;\n\n/**\n * __usePlatformAuthWayQuery__\n *\n * To run a query within a React component, call `usePlatformAuthWayQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlatformAuthWayQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlatformAuthWayQuery({\n *   variables: {\n *   },\n * });\n */\nexport function usePlatformAuthWayQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >(PlatformAuthWayDocument, baseOptions);\n}\nexport function usePlatformAuthWayLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >(PlatformAuthWayDocument, baseOptions);\n}\nexport type PlatformAuthWayQueryHookResult = ReturnType<\n  typeof usePlatformAuthWayQuery\n>;\nexport type PlatformAuthWayLazyQueryHookResult = ReturnType<\n  typeof usePlatformAuthWayLazyQuery\n>;\nexport type PlatformAuthWayQueryResult = ApolloReactCommon.QueryResult<\n  PlatformAuthWayQuery,\n  PlatformAuthWayQueryVariables\n>;\nexport const HasUsernameDocument = gql`\n  query hasUsername($username: String!) {\n    has_username(username: $username)\n  }\n`;\n\n/**\n * __useHasUsernameQuery__\n *\n * To run a query within a React component, call `useHasUsernameQuery` and pass it any options that fit your needs.\n * When your component renders, `useHasUsernameQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHasUsernameQuery({\n *   variables: {\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useHasUsernameQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    HasUsernameQuery,\n    HasUsernameQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<HasUsernameQuery, HasUsernameQueryVariables>(\n    HasUsernameDocument,\n    baseOptions\n  );\n}\nexport function useHasUsernameLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    HasUsernameQuery,\n    HasUsernameQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    HasUsernameQuery,\n    HasUsernameQueryVariables\n  >(HasUsernameDocument, baseOptions);\n}\nexport type HasUsernameQueryHookResult = ReturnType<typeof useHasUsernameQuery>;\nexport type HasUsernameLazyQueryHookResult = ReturnType<\n  typeof useHasUsernameLazyQuery\n>;\nexport type HasUsernameQueryResult = ApolloReactCommon.QueryResult<\n  HasUsernameQuery,\n  HasUsernameQueryVariables\n>;\nexport const MeDocument = gql`\n  query me {\n    me {\n      ...Me\n    }\n  }\n  ${MeFragmentDoc}\n`;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(\n    MeDocument,\n    baseOptions\n  );\n}\nexport function useMeLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>\n) {\n  return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(\n    MeDocument,\n    baseOptions\n  );\n}\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<\n  MeQuery,\n  MeQueryVariables\n>;\nexport const CurrentTopicDocument = gql`\n  query currentTopic {\n    current_topic {\n      id\n      title\n      description\n      top_movies {\n        ...Movie\n        author {\n          ...Author\n        }\n      }\n      top_movie {\n        ...Movie\n        author {\n          ...Author\n        }\n      }\n    }\n  }\n  ${MovieFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useCurrentTopicQuery__\n *\n * To run a query within a React component, call `useCurrentTopicQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentTopicQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentTopicQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentTopicQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport function useCurrentTopicLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport type CurrentTopicQueryHookResult = ReturnType<\n  typeof useCurrentTopicQuery\n>;\nexport type CurrentTopicLazyQueryHookResult = ReturnType<\n  typeof useCurrentTopicLazyQuery\n>;\nexport type CurrentTopicQueryResult = ApolloReactCommon.QueryResult<\n  CurrentTopicQuery,\n  CurrentTopicQueryVariables\n>;\nexport const MovieUrgesDocument = gql`\n  query movieUrges {\n    movie_urges {\n      ...Movie\n      author {\n        ...Author\n      }\n    }\n  }\n  ${MovieFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useMovieUrgesQuery__\n *\n * To run a query within a React component, call `useMovieUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMovieUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<MovieUrgesQuery, MovieUrgesQueryVariables>(\n    MovieUrgesDocument,\n    baseOptions\n  );\n}\nexport function useMovieUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >(MovieUrgesDocument, baseOptions);\n}\nexport type MovieUrgesQueryHookResult = ReturnType<typeof useMovieUrgesQuery>;\nexport type MovieUrgesLazyQueryHookResult = ReturnType<\n  typeof useMovieUrgesLazyQuery\n>;\nexport type MovieUrgesQueryResult = ApolloReactCommon.QueryResult<\n  MovieUrgesQuery,\n  MovieUrgesQueryVariables\n>;\nexport const UserUrgesDocument = gql`\n  query userUrges {\n    user_urges {\n      nickname\n      avatar\n      username\n      uid\n      description\n    }\n  }\n`;\n\n/**\n * __useUserUrgesQuery__\n *\n * To run a query within a React component, call `useUserUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport function useUserUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport type UserUrgesQueryHookResult = ReturnType<typeof useUserUrgesQuery>;\nexport type UserUrgesLazyQueryHookResult = ReturnType<\n  typeof useUserUrgesLazyQuery\n>;\nexport type UserUrgesQueryResult = ApolloReactCommon.QueryResult<\n  UserUrgesQuery,\n  UserUrgesQueryVariables\n>;\nexport const MovieDocument = gql`\n  query movie($id: ID!) {\n    movie(id: $id) {\n      credits {\n        avatar\n        name\n        description\n      }\n      author {\n        ...Author\n      }\n      alias_title\n      region\n      ...Movie\n      sources {\n        ...MovieSource\n      }\n    }\n  }\n  ${AuthorFragmentDoc}\n  ${MovieFragmentDoc}\n  ${MovieSourceFragmentDoc}\n`;\n\n/**\n * __useMovieQuery__\n *\n * To run a query within a React component, call `useMovieQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useMovieQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieQuery,\n    MovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<MovieQuery, MovieQueryVariables>(\n    MovieDocument,\n    baseOptions\n  );\n}\nexport function useMovieLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieQuery,\n    MovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<MovieQuery, MovieQueryVariables>(\n    MovieDocument,\n    baseOptions\n  );\n}\nexport type MovieQueryHookResult = ReturnType<typeof useMovieQuery>;\nexport type MovieLazyQueryHookResult = ReturnType<typeof useMovieLazyQuery>;\nexport type MovieQueryResult = ApolloReactCommon.QueryResult<\n  MovieQuery,\n  MovieQueryVariables\n>;\nexport const MoviesPaginatedDocument = gql`\n  query moviesPaginated($query: PaginatedQuery) {\n    movies_paginated(query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          ...Movie\n          author {\n            ...Author\n          }\n        }\n      }\n    }\n  }\n  ${MovieFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useMoviesPaginatedQuery__\n *\n * To run a query within a React component, call `useMoviesPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useMoviesPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMoviesPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useMoviesPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >(MoviesPaginatedDocument, baseOptions);\n}\nexport function useMoviesPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >(MoviesPaginatedDocument, baseOptions);\n}\nexport type MoviesPaginatedQueryHookResult = ReturnType<\n  typeof useMoviesPaginatedQuery\n>;\nexport type MoviesPaginatedLazyQueryHookResult = ReturnType<\n  typeof useMoviesPaginatedLazyQuery\n>;\nexport type MoviesPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  MoviesPaginatedQuery,\n  MoviesPaginatedQueryVariables\n>;\nexport const UserMoviesPaginatedDocument = gql`\n  query userMoviesPaginated($author_username: String!, $query: PaginatedQuery) {\n    user_movies_paginated(author_username: $author_username, query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          ...Movie\n          author {\n            ...Author\n          }\n        }\n      }\n    }\n  }\n  ${MovieFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useUserMoviesPaginatedQuery__\n *\n * To run a query within a React component, call `useUserMoviesPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserMoviesPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserMoviesPaginatedQuery({\n *   variables: {\n *      author_username: // value for 'author_username'\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useUserMoviesPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    UserMoviesPaginatedQuery,\n    UserMoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    UserMoviesPaginatedQuery,\n    UserMoviesPaginatedQueryVariables\n  >(UserMoviesPaginatedDocument, baseOptions);\n}\nexport function useUserMoviesPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserMoviesPaginatedQuery,\n    UserMoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    UserMoviesPaginatedQuery,\n    UserMoviesPaginatedQueryVariables\n  >(UserMoviesPaginatedDocument, baseOptions);\n}\nexport type UserMoviesPaginatedQueryHookResult = ReturnType<\n  typeof useUserMoviesPaginatedQuery\n>;\nexport type UserMoviesPaginatedLazyQueryHookResult = ReturnType<\n  typeof useUserMoviesPaginatedLazyQuery\n>;\nexport type UserMoviesPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  UserMoviesPaginatedQuery,\n  UserMoviesPaginatedQueryVariables\n>;\nexport const MovieUrgesByMovieDocument = gql`\n  query movieUrgesByMovie($movie_id: ID!) {\n    movie_urges_by_movie(movie_id: $movie_id) {\n      ...Movie\n      author {\n        ...Author\n      }\n    }\n  }\n  ${MovieFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useMovieUrgesByMovieQuery__\n *\n * To run a query within a React component, call `useMovieUrgesByMovieQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieUrgesByMovieQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieUrgesByMovieQuery({\n *   variables: {\n *      movie_id: // value for 'movie_id'\n *   },\n * });\n */\nexport function useMovieUrgesByMovieQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieUrgesByMovieQuery,\n    MovieUrgesByMovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    MovieUrgesByMovieQuery,\n    MovieUrgesByMovieQueryVariables\n  >(MovieUrgesByMovieDocument, baseOptions);\n}\nexport function useMovieUrgesByMovieLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieUrgesByMovieQuery,\n    MovieUrgesByMovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MovieUrgesByMovieQuery,\n    MovieUrgesByMovieQueryVariables\n  >(MovieUrgesByMovieDocument, baseOptions);\n}\nexport type MovieUrgesByMovieQueryHookResult = ReturnType<\n  typeof useMovieUrgesByMovieQuery\n>;\nexport type MovieUrgesByMovieLazyQueryHookResult = ReturnType<\n  typeof useMovieUrgesByMovieLazyQuery\n>;\nexport type MovieUrgesByMovieQueryResult = ApolloReactCommon.QueryResult<\n  MovieUrgesByMovieQuery,\n  MovieUrgesByMovieQueryVariables\n>;\nexport const MovieNextUrgesByMovieDocument = gql`\n  query movieNextUrgesByMovie($movie_id: ID!) {\n    movie_next_urges_by_movie(movie_id: $movie_id) {\n      ...Movie\n      author {\n        ...Author\n      }\n    }\n  }\n  ${MovieFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useMovieNextUrgesByMovieQuery__\n *\n * To run a query within a React component, call `useMovieNextUrgesByMovieQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieNextUrgesByMovieQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieNextUrgesByMovieQuery({\n *   variables: {\n *      movie_id: // value for 'movie_id'\n *   },\n * });\n */\nexport function useMovieNextUrgesByMovieQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieNextUrgesByMovieQuery,\n    MovieNextUrgesByMovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    MovieNextUrgesByMovieQuery,\n    MovieNextUrgesByMovieQueryVariables\n  >(MovieNextUrgesByMovieDocument, baseOptions);\n}\nexport function useMovieNextUrgesByMovieLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieNextUrgesByMovieQuery,\n    MovieNextUrgesByMovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MovieNextUrgesByMovieQuery,\n    MovieNextUrgesByMovieQueryVariables\n  >(MovieNextUrgesByMovieDocument, baseOptions);\n}\nexport type MovieNextUrgesByMovieQueryHookResult = ReturnType<\n  typeof useMovieNextUrgesByMovieQuery\n>;\nexport type MovieNextUrgesByMovieLazyQueryHookResult = ReturnType<\n  typeof useMovieNextUrgesByMovieLazyQuery\n>;\nexport type MovieNextUrgesByMovieQueryResult = ApolloReactCommon.QueryResult<\n  MovieNextUrgesByMovieQuery,\n  MovieNextUrgesByMovieQueryVariables\n>;\nexport const PlaylistsPaginatedDocument = gql`\n  query playlistsPaginated(\n    $query: PaginatedQuery\n    $author_uid: String\n    $author_username: String\n  ) {\n    playlists_paginated(\n      query: $query\n      author_uid: $author_uid\n      author_username: $author_username\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          title\n          description\n          cover\n          create_at\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __usePlaylistsPaginatedQuery__\n *\n * To run a query within a React component, call `usePlaylistsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlaylistsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlaylistsPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *      author_uid: // value for 'author_uid'\n *      author_username: // value for 'author_username'\n *   },\n * });\n */\nexport function usePlaylistsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport function usePlaylistsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport type PlaylistsPaginatedQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedQuery\n>;\nexport type PlaylistsPaginatedLazyQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedLazyQuery\n>;\nexport type PlaylistsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  PlaylistsPaginatedQuery,\n  PlaylistsPaginatedQueryVariables\n>;\nexport const IsFollowingDocument = gql`\n  query isFollowing($owner_uid: String!, $follower_uid: String) {\n    is_following(owner_uid: $owner_uid, follower_uid: $follower_uid)\n  }\n`;\n\n/**\n * __useIsFollowingQuery__\n *\n * To run a query within a React component, call `useIsFollowingQuery` and pass it any options that fit your needs.\n * When your component renders, `useIsFollowingQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useIsFollowingQuery({\n *   variables: {\n *      owner_uid: // value for 'owner_uid'\n *      follower_uid: // value for 'follower_uid'\n *   },\n * });\n */\nexport function useIsFollowingQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    IsFollowingQuery,\n    IsFollowingQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<IsFollowingQuery, IsFollowingQueryVariables>(\n    IsFollowingDocument,\n    baseOptions\n  );\n}\nexport function useIsFollowingLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    IsFollowingQuery,\n    IsFollowingQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    IsFollowingQuery,\n    IsFollowingQueryVariables\n  >(IsFollowingDocument, baseOptions);\n}\nexport type IsFollowingQueryHookResult = ReturnType<typeof useIsFollowingQuery>;\nexport type IsFollowingLazyQueryHookResult = ReturnType<\n  typeof useIsFollowingLazyQuery\n>;\nexport type IsFollowingQueryResult = ApolloReactCommon.QueryResult<\n  IsFollowingQuery,\n  IsFollowingQueryVariables\n>;\nexport const UserDocument = gql`\n  query user($uid: String, $username: String) {\n    user(uid: $uid, username: $username) {\n      uid\n      username\n      email\n      nickname\n      avatar\n      mobile\n      address\n      description\n      create_at\n      update_at\n      delete_at\n    }\n  }\n`;\n\n/**\n * __useUserQuery__\n *\n * To run a query within a React component, call `useUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserQuery({\n *   variables: {\n *      uid: // value for 'uid'\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useUserQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<UserQuery, UserQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<UserQuery, UserQueryVariables>(\n    UserDocument,\n    baseOptions\n  );\n}\nexport function useUserLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserQuery,\n    UserQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<UserQuery, UserQueryVariables>(\n    UserDocument,\n    baseOptions\n  );\n}\nexport type UserQueryHookResult = ReturnType<typeof useUserQuery>;\nexport type UserLazyQueryHookResult = ReturnType<typeof useUserLazyQuery>;\nexport type UserQueryResult = ApolloReactCommon.QueryResult<\n  UserQuery,\n  UserQueryVariables\n>;\nexport const ReviewCreatedDocument = gql`\n  subscription reviewCreated($type: ReviewMedium!, $type_id: ID!) {\n    review_created(type: $type, type_id: $type_id) {\n      content\n      create_at\n      author {\n        nickname\n        avatar\n      }\n    }\n  }\n`;\n\n/**\n * __useReviewCreatedSubscription__\n *\n * To run a query within a React component, call `useReviewCreatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useReviewCreatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewCreatedSubscription({\n *   variables: {\n *      type: // value for 'type'\n *      type_id: // value for 'type_id'\n *   },\n * });\n */\nexport function useReviewCreatedSubscription(\n  baseOptions?: ApolloReactHooks.SubscriptionHookOptions<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >\n) {\n  return ApolloReactHooks.useSubscription<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >(ReviewCreatedDocument, baseOptions);\n}\nexport type ReviewCreatedSubscriptionHookResult = ReturnType<\n  typeof useReviewCreatedSubscription\n>;\nexport type ReviewCreatedSubscriptionResult = ApolloReactCommon.SubscriptionResult<\n  ReviewCreatedSubscription\n>;\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: (props: ImageProp) => {\n        return props.height || \"auto\";\n      },\n      width: (props: ImageProp) => {\n        return props.width || \"100%\";\n      },\n      fontSize: 0,\n      overflow: \"hidden\"\n    },\n    aspect: {\n      paddingTop: (props: ImageProp) => {\n        if (props.aspectRatio) {\n          return `calc(1 / ${props.aspectRatio} * 100%)`;\n        } else {\n          return 0;\n        }\n      },\n      position: \"relative\",\n      backgroundColor: \"transparent\"\n    },\n    image: {\n      position: (props: ImageProp) => {\n        if (props.aspectRatio) {\n          return \"absolute\";\n        } else {\n          return \"relative\";\n        }\n      },\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      objectFit: \"cover\"\n    },\n    container: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\"\n    }\n  })\n);\n\ninterface ImageProp {\n  aspectRatio?: number; // 宽高比\n  src?: string;\n  classes?: Object;\n  width?: number | string;\n  height?: number | string;\n  alt?: string;\n}\n\nenum ImageStatus {\n  Loading = 0,\n  Success = 1,\n  Failuare = -1\n}\n\nexport const Image: React.FC<ImageProp> = (props: ImageProp) => {\n  const classes = useStyles(props);\n  const { src, alt } = props;\n\n  // status: 0:加载中 1: 加载成功 -1:加载失败\n  const [status, setStatus] = React.useState(ImageStatus.Loading);\n\n  const _loadImage = () => {\n    setStatus(ImageStatus.Success);\n  };\n\n  const _loadImageFail = () => {\n    setStatus(ImageStatus.Failuare);\n  };\n\n  return (\n    <div className={classes.root}>\n      {props.aspectRatio && (\n        <div className={classes.aspect}>\n          {src && status !== ImageStatus.Failuare && (\n            <img\n              alt={alt}\n              className={classes.image}\n              src={src}\n              onLoad={_loadImage}\n              onError={_loadImageFail}\n            />\n          )}\n          {status !== ImageStatus.Success && (\n            <div className={classes.container}>\n              {status === ImageStatus.Loading && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n              {status === ImageStatus.Failuare && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      {!props.aspectRatio && (\n        <>\n          {src && status !== ImageStatus.Failuare && (\n            <img\n              className={classes.image}\n              src={src}\n              alt=\"\"\n              onLoad={_loadImage}\n              onError={_loadImageFail}\n            />\n          )}\n          {status !== ImageStatus.Success && (\n            <div className={classes.container}>\n              {status === ImageStatus.Loading && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n              {status === ImageStatus.Failuare && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import * as React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  makeStyles,\n  Box,\n  StandardProps\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    duration: {\n      color: \"#fff\",\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n      borderRadius: theme.shape.borderRadius,\n      width: 60,\n      height: 24,\n      fontSize: 12\n    }\n  })\n);\n\ninterface DurationProps extends StandardProps<HTMLElement, \"root\"> {\n  duration: number;\n  unit?: \"ms\" | \"s\";\n  classes?: any;\n}\n\nfunction Duration(props: DurationProps) {\n  const classes = useStyles();\n  let { duration, unit } = props;\n  if (unit === \"s\") {\n    duration = duration * 1000;\n  }\n\n  // 转换成毫秒\n  const hh = moment.duration(duration, \"ms\").hours() + \"\";\n  const mm = moment.duration(duration, \"ms\").minutes() + \"\";\n  const ss = moment.duration(duration, \"ms\").seconds() + \"\";\n  const format =\n    hh.padStart(2, \"0\") + \":\" + mm.padStart(2, \"0\") + \":\" + ss.padStart(2, \"0\");\n\n  return (\n    <Box\n      className={clsx(classes.duration, props.classes.root, props.className)}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      {format}\n    </Box>\n  );\n}\n\nDuration.defaultProps = {\n  unit: \"ms\"\n} as Partial<DurationProps>;\n\nexport default Duration;\n","import * as React from \"react\";\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaNormalProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport moment from \"moment\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\",\n      pointerEvents: (props: MediaNormalProps) => {\n        return props.disabled || props.loading ? \"none\" : \"auto\";\n      }\n    },\n    cover: {\n      position: \"relative\"\n    },\n    avatar: {\n      width: 56,\n      height: 56,\n      border: \"3px solid #fff\",\n      position: \"absolute\",\n      bottom: -28,\n      right: 10,\n      [theme.breakpoints.down(\"md\")]: {\n        width: 40,\n        height: 40,\n        bottom: -20,\n        right: 8\n      }\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaNormal: React.FC<MediaNormalProps> = (\n  props: MediaNormalProps\n) => {\n  const RouterHelper = useRouterHelper();\n  const classes = useStyles(props);\n\n  const goMovie = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoMovie(props?.id);\n  };\n\n  const goProfile = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoProfile(props?.author?.username);\n  };\n\n  if (props.loading) {\n    return <MediaNormalLoading classes />;\n  }\n\n  return (\n    <Box className={classes.wrap} onClick={goMovie}>\n      <div className={classes.cover}>\n        <Image src={DEFULAT_MOVIE_COVER || props.cover} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n        <Avatar\n          onClick={goProfile}\n          className={classes.avatar}\n          src={props.author && props.author.avatar}\n        ></Avatar>\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {props.author && (props.author.nickname || props.author.username)}\n        </Typography>\n        <Typography variant=\"subtitle1\" noWrap>\n          {props.title}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数：TODO\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {moment(props.create_at).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst MediaNormalLoading = classes => {\n  return (\n    <Box className={classes.wrap}>\n      <div className={classes.cover}>\n        <Image aspectRatio={16 / 9} />\n        <Avatar className={classes.avatar}></Avatar>\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <Skeleton width=\"20%\" />\n        </Typography>\n        <Typography variant=\"subtitle1\" noWrap>\n          <Skeleton width=\"40%\" />\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            <Skeleton width=\"30%\" />\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            <Skeleton width=\"40%\" />\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MediaNormal;\n","import * as React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaOwnProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport moment from \"moment\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    cover: {\n      position: \"relative\"\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaOwn: React.FC<MediaOwnProps> = (props: MediaOwnProps) => {\n  const RouterHelper = useRouterHelper();\n  const classes = useStyles();\n\n  const goMovie = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoMovie(props?.id);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={goMovie}>\n      <div className={classes.cover}>\n        <Image src={DEFULAT_MOVIE_COVER || props.cover} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"subtitle1\" noWrap>\n          {props.title}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数：TODO\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {moment(props.create_at).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nMediaOwn.defaultProps = {\n  title: \"视频标题\",\n  subtitle: \"视频副标题\",\n  create_at: new Date(),\n  duration: 3242341\n} as Partial<MediaOwnProps>;\n\nexport default MediaOwn;\n","import * as React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaPlainProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    cover: {\n      position: \"relative\"\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaPlain: React.FC<MediaPlainProps> = (\n  props: MediaPlainProps\n) => {\n  const RouterHelper = useRouterHelper();\n  const classes = useStyles();\n\n  const goMovie = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoMovie(props?.id);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={goMovie}>\n      <div className={classes.cover}>\n        <Image src={DEFULAT_MOVIE_COVER || props.cover} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n      </div>\n    </Box>\n  );\n};\n\nMediaPlain.defaultProps = {\n  create_at: new Date(),\n  duration: 3242341\n} as Partial<MediaPlainProps>;\n\nexport default MediaPlain;\n","import * as React from \"react\";\nimport { WithToolProps } from \"./media\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      position: \"relative\"\n    },\n    tool: {\n      position: \"absolute\",\n      left: 10,\n      top: 10\n    }\n  })\n);\n\nexport function withTool<P>(Component: React.FC<P & WithToolProps>) {\n  return (props: P & WithToolProps) => {\n    const classes = useStyles();\n    const { onDelete, ...rest } = props;\n\n    return (\n      <div className={classes.wrap}>\n        <Component {...(rest as P)} />\n        <div className={classes.tool}>\n          <div onClick={onDelete}>delete</div>\n        </div>\n      </div>\n    );\n  };\n}\nexport default withTool;\n","export * from \"./MediaNormal\";\nexport * from \"./MediaOwn\";\nexport * from \"./MediaPlain\";\nexport * from \"./withTool\";\n","import * as React from \"react\";\nimport { BaseSpecialBoxProps } from \"./specialbox\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport Exception from \"@/components/base/Exception\";\nimport Placeholder from \"@/components/base/Placeholder\";\nimport Loading from \"@/components/base/Loading\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {}\n  })\n);\n\nexport const SpecialBoxDefault: React.FC<BaseSpecialBoxProps> = (\n  props: BaseSpecialBoxProps\n) => {\n  const classes = useStyles();\n  const {\n    placeholder,\n    placeholderTitle,\n    placeholderSubtitle,\n    placeholderNode: PlaceholderNode,\n    loading,\n    loadingTitle,\n    loadingSubtitle,\n    loadingNode: LoadingNode,\n    error,\n    errorTitle,\n    errorSubtitle,\n    errorNode: ErrorNode\n  } = props;\n  return (\n    <div className={classes.root}>\n      {loading &&\n        (LoadingNode ? (\n          <LoadingNode />\n        ) : (\n          <Loading title={loadingTitle} subtitle={loadingSubtitle} />\n        ))}\n      {error &&\n        (ErrorNode ? (\n          <ErrorNode />\n        ) : (\n          <Exception title={errorTitle} subtitle={errorSubtitle} />\n        ))}\n      {placeholder &&\n        (PlaceholderNode ? (\n          <PlaceholderNode />\n        ) : (\n          <Placeholder\n            title={placeholderTitle}\n            subtitle={placeholderSubtitle}\n          />\n        ))}\n    </div>\n  );\n};\n","import { SpecialBoxDefault } from \"./SpecialBoxDefault\";\n\nexport default SpecialBoxDefault;\nexport const SpecialBox = SpecialBoxDefault;\nexport * from \"./SpecialBoxDefault\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { AiderScreenLayoutProps } from \"../layout.d\";\nimport { CreateCSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      maxWidth: 400,\n      flex: 1\n    },\n    agent: (props: AiderScreenLayoutProps) => {\n      const keys = Object.keys(theme.mixins.toolbar);\n      const height_normal =\n        theme.mixins.toolbar?.height || theme.mixins.toolbar?.minHeight || 0;\n      const top_normal = +height_normal + (props?.top || 0);\n      const style: CreateCSSProperties<AiderScreenLayoutProps> = {\n        position: \"sticky\",\n        top: top_normal,\n        overflow: \"auto\",\n        maxHeight: `calc(100vh - ${top_normal}px)`\n      };\n      keys.forEach(key => {\n        const entity: any = theme.mixins.toolbar[key];\n        if (\n          typeof entity === \"object\" &&\n          (entity?.height || entity?.minHeight)\n        ) {\n          const height_current = entity?.height || entity?.minHeight;\n          const top_current = +height_current + (props?.top || 0);\n          Object.assign(style, {\n            [key]: {\n              top: top_current,\n              maxHeight: `calc(100vh - ${top_current}px)`\n            }\n          });\n        }\n      });\n      return style;\n    },\n    root: {}\n  })\n);\n\nexport default function AiderScreen(props: AiderScreenLayoutProps) {\n  const classes = useStyles(props);\n  const { sticky } = props;\n  if (sticky) {\n    return (\n      <div className={clsx(classes.container)}>\n        <div className={clsx(classes.agent)}>\n          {/* <div className={clsx(classes.wrap)}>\n            <div className={clsx(classes.toolbar)}></div>\n          </div> */}\n          <div className={clsx(classes.root, props.className)}>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={clsx(classes.container, props.className)}>\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { BodyScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1600,\n      display: \"flex\",\n      margin: \"0 auto\"\n    }\n  })\n);\n\nexport default function BodyScreen(props: BodyScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { ContentScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1200,\n      flex: 3\n    }\n  })\n);\n\nexport default function ContentScreen(props: ContentScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={Object.assign({}, props.width ? { width: props.width } : {})}\n      className={clsx(classes.root, props.className)}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { FullScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    }\n  })\n);\n\nexport default function FullScreen(props: FullScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\n\ninterface PageLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function PageLayout(props: PageLayoutProps) {\n  return <div>{props.children}</div>;\n}\n\nexport { FullScreen, BodyScreen, ContentScreen, AiderScreen } from \"./modules\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { LoadingBaseProps } from \"./loading\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"-webkit-background-clip\": \"text\",\n      backgroundClip: \"text\",\n      fontWeight: \"bold\",\n      color: \"transparent\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundImage:\n        \"linear-gradient(90deg, #e6e6e6 25%, #d6d6d6 37%, #e6e6e6 63%)\",\n      backgroundSize: \"400% 100%\",\n      animation: \"$skeleton-busy-animate 2s ease infinite\",\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: LoadingBaseProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: LoadingBaseProps) => {\n        return props.height ?? \"100%\";\n      },\n      flex: 1\n    },\n    logo: theme.custom.base.icon.large,\n    \"@keyframes skeleton-busy-animate\": {\n      \"0%\": {\n        backgroundPosition: \"100% 50%\"\n      },\n      \"100%\": {\n        backgroundPosition: \"0 50%\"\n      }\n    }\n  })\n);\n\nexport const LoadingDefault: React.FC<LoadingBaseProps> = (\n  props: LoadingBaseProps\n) => {\n  const classes = useStyles(props);\n  const { title, subtitle, children } = props;\n\n  return (\n    <div className={classes.root}>\n      <i className={clsx(\"iconfont icon-logo\", classes.logo)}></i>\n      {title && <Typography variant=\"h6\">{title}</Typography>}\n      {subtitle && <Typography variant=\"subtitle1\">{subtitle}</Typography>}\n      {children}\n    </div>\n  );\n};\n\nLoadingDefault.defaultProps = {\n  title: \"Loading\"\n};\n","import { LoadingDefault } from \"./LoadingDefault\";\n\nexport default LoadingDefault;\nexport const Loading = LoadingDefault;\nexport * from \"./LoadingDefault\";\n"],"sourceRoot":""}