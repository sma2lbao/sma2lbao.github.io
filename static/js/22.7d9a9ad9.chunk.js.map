{"version":3,"sources":["components/base/Editor/NormalEditor.tsx","views/movies/MovieUpload/modules/EditAbout/index.tsx","views/movies/MovieUpload/modules/EditCast/index.tsx","components/app/Input/useEditableInput.tsx","components/app/Input/EditableInput.tsx","components/app/FileUpload/FileUpload.tsx","views/movies/MovieUpload/modules/EditTop/index.tsx","views/movies/MovieUpload/modules/EditMediumInfo/index.tsx","views/movies/MovieUpload/modules/EditMain/index.tsx","views/movies/MovieUpload/index.tsx"],"names":["NormalEditor","React","props","ref","raw","onBlur","placeholder","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorState","setEditorState","getRawString","stringify","convertToRaw","getCurrentContent","onChange","EditAbout","aboutRaw","setAboutRaw","about","editorRef","rawString","current","useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","background","paper","EditCast","classes","credits","setCredits","handleChange","e","target","dataset","value","idx","key","cur","handleDelete","currentTarget","newCredits","splice","Box","className","List","subheader","ListSubheader","Typography","IconButton","onClick","avatar","name","description","tags","size","AddCircle","fontSize","length","map","item","ListItem","ListItemAvatar","Avatar","src","Input","data-idx","data-key","ListItemSecondaryAction","Delete","Placeholder","title","useEditableInput","initValue","setValue","input","borderColor","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","inherit","EditableInput","variant","FileUpload","onComplete","onError","children","component","inputRef","useUploadFileOssMutation","onCompleted","data","upload_file_oss","error","message","loading","Tag","role","click","style","display","type","accept","validity","file","files","valid","variables","position","width","aider","left","top","bottom","padding","spacing","aiderContent","borderRadius","shape","maxHeight","backdropFilter","overflow","main","right","transform","color","flexDirection","mainContent","posters","posterTool","EditTop","setTitle","sub_title","setSubTitle","setDescription","setPosters","cover","setCover","includes","handleRemovePoster","window","confirm","handleChangeCover","Image","aspectRatio","DEFULAT_MOVIE_COVER","GridList","cellHeight","cols","poster","GridListTile","alt","imageUrl","gutterBottom","mt","Button","disabled","height","body","margin","content","borderRight","divider","sourceWrap","EditMediumInfo","onSave","onCancel","open","setOpen","url","setUrl","setName","alias_name","setAliasName","handleCancle","Dialog","fullScreen","onClose","AppBar","Toolbar","sourceUrl","sticky","box","borderTop","EditMain","forwardRef","useState","openMedium","setOpenMedium","mediums","setMediums","useImperativeHandle","Media","medium","MovieUpload","RouterHelper","useRouterHelper","tab","setTab","topRef","mainRef","aboutRef","castRef","useCreateMovieMutation","alert","gotoHome","create_movie","Tabs","val","Tab","label","hidden","topFields","mainFields","aboutFields","castFields","movie","sources"],"mappings":"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","file":"static/js/22.7d9a9ad9.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Editor, EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps, BaseEditorHandles } from \"./editor\";\n\nexport const NormalEditor = React.forwardRef<\n  BaseEditorHandles,\n  BaseEditorProps\n>((props, ref) => {\n  const { raw, onBlur, placeholder } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    raw\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(raw)))\n      : EditorState.createEmpty()\n  );\n\n  React.useImperativeHandle(ref, () => ({\n    getRawString: () => {\n      return JSON.stringify(convertToRaw(editorState.getCurrentContent()));\n    }\n  }));\n\n  return (\n    <Editor\n      editorState={editorState}\n      onChange={setEditorState}\n      onBlur={onBlur}\n      placeholder={placeholder}\n    />\n  );\n});\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\nimport { EditorHandles } from \"@/components/base/Editor/editor\";\n\nexport interface EditAboutHandles {\n  about?: string;\n}\n\nexport const EditAbout = React.forwardRef<EditAboutHandles, unknown>(\n  (props, ref) => {\n    const [aboutRaw, setAboutRaw] = React.useState(\"\");\n\n    React.useImperativeHandle(ref, () => ({\n      about: aboutRaw\n    }));\n    const editorRef = React.createRef<EditorHandles>();\n\n    const handleBlur = () => {\n      const rawString = editorRef.current?.getRawString();\n      setAboutRaw(rawString);\n    };\n\n    return (\n      <div>\n        <NormalEditor ref={editorRef} onBlur={handleBlur} />\n      </div>\n    );\n  }\n);\n\nexport default EditAbout;\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography,\n  Input\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\n\nexport interface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport interface EditCastHandles {\n  credits: CharacterEdit[];\n}\n\nexport const EditCast = React.forwardRef<EditCastHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      credits\n    }));\n\n    const handleAddCredit = () => {\n      setCredits([\n        ...credits,\n        {\n          avatar: \"\",\n          name: \"\",\n          description: \"\",\n          tags: []\n        }\n      ]);\n    };\n\n    const handleChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      const { dataset, value } = e.target;\n      if (dataset.idx && dataset.key) {\n        const cur = credits[dataset.idx];\n        cur[dataset.key] = value;\n        setCredits([...credits, cur]);\n      }\n    };\n\n    const handleDelete = (\n      e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n      const { dataset } = e.currentTarget;\n      if (dataset.idx) {\n        const newCredits = credits.splice(+dataset.idx, 1);\n        setCredits([...newCredits]);\n      }\n    };\n\n    return (\n      <Box className={classes.root}>\n        <List\n          subheader={\n            <ListSubheader>\n              <Typography>演职表</Typography>\n              <IconButton onClick={handleAddCredit} size=\"small\">\n                <AddCircle fontSize=\"small\" />\n              </IconButton>\n            </ListSubheader>\n          }\n        >\n          {credits.length ? (\n            <>\n              {credits.map((item, idx) => {\n                return (\n                  <ListItem key={idx}>\n                    <ListItemAvatar>\n                      <Avatar src={item.avatar}></Avatar>\n                    </ListItemAvatar>\n                    <div>\n                      <Input\n                        data-idx={idx}\n                        data-key=\"name\"\n                        onChange={handleChange}\n                        value={item.name}\n                        placeholder=\"请输入名字\"\n                      />\n\n                      <Input\n                        data-idx={idx}\n                        data-key=\"description\"\n                        value={item.description}\n                        placeholder=\"请输入描述\"\n                      />\n                    </div>\n                    <ListItemSecondaryAction>\n                      <IconButton data-idx={idx} onClick={handleDelete}>\n                        <Delete />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </>\n          ) : (\n            <div>\n              <Placeholder title=\"请添加演职人员\" />\n            </div>\n          )}\n        </List>\n      </Box>\n    );\n  }\n);\n\nexport default EditCast;\n","import * as React from \"react\";\n\nexport const useEditableInput = (initValue?: any): [any, any] => {\n  const [value, setValue] = React.useState(initValue);\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n  };\n\n  return [value, onChange];\n};\n","import * as React from \"react\";\nimport { Input, makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport { BaseInputProps } from \"./input\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {},\n    input: {\n      borderColor: \"transparent\"\n    },\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n    /* Styles applied to the root element if `variant=\"inherit\"`. */\n    inherit: {}\n  });\n});\n\nexport const EditableInput: React.FC<BaseInputProps> = props => {\n  const { value, onChange, placeholder, variant = \"body1\" } = props;\n  const classes = useStyles();\n  return (\n    <Input\n      classes={{\n        root: classes.root\n      }}\n      className={classes[variant]}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  );\n};\n","import * as React from \"react\";\nimport { useUploadFileOssMutation } from \"@/schema\";\nimport { BaseFileUploadProps } from \"./file-upload\";\n\nexport const FileUpload: React.FC<BaseFileUploadProps> = props => {\n  const { onComplete, onError, children, component } = props;\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const [upload_file_oss, { loading }] = useUploadFileOssMutation({\n    onCompleted(data) {\n      onComplete && onComplete(data.upload_file_oss);\n    },\n    onError(error) {\n      onError && onError(error.message);\n    }\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity.valid) {\n      upload_file_oss({ variables: { file } });\n    }\n  };\n\n  const handleClick = () => {\n    if (!loading) {\n      inputRef.current?.click();\n    }\n  };\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag role=\"button\" onClick={handleClick}>\n      <input\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\"*\"\n        onChange={handleChange}\n      />\n      {children}\n    </Tag>\n  );\n};\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Button,\n  Box,\n  GridList,\n  GridListTile\n} from \"@material-ui/core\";\n\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    aider: {\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"45%\",\n      padding: theme.spacing(8)\n    },\n    aiderContent: {\n      width: \"50%\",\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      maxHeight: \"100%\",\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      overflow: \"auto\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    mainContent: {\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      padding: theme.spacing(4),\n      borderRadius: theme.shape.borderRadius\n    },\n    posters: {},\n    posterTool: {\n      display: \"none\"\n    }\n  })\n);\n\nexport interface EditTopHandles {\n  title: string;\n\n  sub_title?: string;\n\n  description?: string;\n\n  posters?: string[];\n\n  cover: string;\n}\n\nexport const EditTop = React.forwardRef<EditTopHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [title, setTitle] = useEditableInput(\"\");\n    const [sub_title, setSubTitle] = useEditableInput(\"\");\n    const [description, setDescription] = useEditableInput(\"\");\n    const [posters, setPosters] = React.useState<string[]>([]);\n    const [cover, setCover] = React.useState<string>(\"\");\n\n    React.useEffect(() => {\n      if (posters && posters.length > 0) {\n        if (!cover || !posters.includes(cover)) setCover(posters[0]);\n      } else {\n        setCover(\"\");\n      }\n    }, [cover, posters]);\n\n    React.useImperativeHandle(ref, () => ({\n      title,\n      sub_title,\n      description,\n      posters,\n      cover\n    }));\n\n    const handleAddPoster = imageUrl => {\n      if (imageUrl && !posters.includes(imageUrl)) {\n        setPosters([...posters, imageUrl]);\n      }\n    };\n\n    const handleRemovePoster = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const result = window.confirm(\"delete?\");\n      if (result) {\n        const { dataset } = e.currentTarget;\n        if (dataset.idx) {\n          posters.splice(+dataset.idx, 1);\n          setPosters([...posters]);\n        }\n      }\n    };\n\n    const handleChangeCover = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const { dataset } = e.currentTarget;\n      if (dataset.idx) {\n        setCover(posters[dataset.idx]);\n      }\n    };\n\n    return (\n      <div className={classes.root}>\n        <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n        <div className={classes.aider}>\n          <div className={classes.aiderContent}>\n            <GridList cellHeight=\"auto\" className={classes.posters} cols={1}>\n              {posters.map((poster, idx) => (\n                <GridListTile key={poster} cols={1}>\n                  <Image\n                    aspectRatio={16 / 9}\n                    src={poster}\n                    alt={\"poster\" + idx}\n                  />\n                  <div className={classes.posterTool}>\n                    <div data-idx={idx} onClick={handleRemovePoster}>\n                      remove poster\n                    </div>\n                    <div data-idx={idx} onClick={handleChangeCover}>\n                      {cover === poster ? \"is cover\" : \"isn't cover\"}\n                    </div>\n                  </div>\n                </GridListTile>\n              ))}\n              <GridListTile cols={1}>\n                <FileUpload onComplete={handleAddPoster}>add poster</FileUpload>\n              </GridListTile>\n            </GridList>\n          </div>\n        </div>\n        <div className={classes.main}>\n          <div className={classes.mainContent}>\n            <Typography gutterBottom variant=\"h4\" component=\"div\">\n              <EditableInput\n                variant=\"h4\"\n                value={title}\n                onChange={setTitle}\n                placeholder=\"movie title\"\n              />\n            </Typography>\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n              <EditableInput\n                value={sub_title}\n                onChange={setSubTitle}\n                placeholder=\"请输入副标题\"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\">\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"请输入电影描述...\"\n              />\n            </Typography>\n            <Box mt={3}>\n              <Button disabled size=\"large\" variant=\"contained\" color=\"primary\">\n                播放\n              </Button>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default EditTop;\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    sourceWrap: {\n      width: \"100%\",\n      position: \"relative\"\n    }\n  })\n);\n\nexport interface EditMediumInfoProp {\n  open: boolean;\n\n  onSave?(medium: unknown): void;\n\n  onCancel?(): void;\n}\n\nexport const EditMediumInfo: React.FC<EditMediumInfoProp> = (\n  props: EditMediumInfoProp\n) => {\n  const { onSave, onCancel } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [url, setUrl] = React.useState(\"\");\n  const [cover, setCover] = React.useState(\"\");\n  const [name, setName] = useEditableInput(\"\");\n  const [alias_name, setAliasName] = useEditableInput(\"\");\n  const [description, setDescription] = useEditableInput(\"\");\n\n  React.useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  const reset = () => {\n    setOpen(false);\n    setUrl(\"\");\n    setCover(\"\");\n    setName(\"\");\n    setAliasName(\"\");\n    setDescription(\"\");\n  };\n\n  const handleChangeCover = imageUrl => {\n    if (imageUrl) {\n      setCover(imageUrl);\n    }\n  };\n\n  const handleChangeSource = sourceUrl => {\n    if (sourceUrl) {\n      setUrl(sourceUrl);\n    }\n  };\n\n  const handleSave = () => {\n    onSave &&\n      onSave({\n        url,\n        cover,\n        name,\n        alias_name,\n        description\n      });\n    handleCancle();\n  };\n\n  const handleCancle = () => {\n    setOpen(false);\n    onCancel && onCancel();\n    reset();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleCancle}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Button onClick={handleSave} color=\"inherit\">\n              save\n            </Button>\n            <Button onClick={handleCancle} color=\"inherit\">\n              cancle\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <FullScreen>\n            <BodyScreen>\n              <div className={classes.sourceWrap}>\n                <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n                <FileUpload onComplete={handleChangeCover}>\n                  add cover\n                </FileUpload>\n                <FileUpload onComplete={handleChangeSource}>\n                  add source\n                </FileUpload>\n              </div>\n            </BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              {/* <VideoInfo /> */}\n              {/* <NextPlay /> */}\n              <EditableInput\n                value={name}\n                onChange={setName}\n                placeholder=\"name\"\n              />\n              <EditableInput\n                value={alias_name}\n                onChange={setAliasName}\n                placeholder=\"alias_name\"\n              />\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"description...\"\n              />\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              {/* <Comment /> */}\n              <Placeholder title=\"评论区\" />\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  GridList,\n  GridListTile,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { EditMediumInfo } from \"../EditMediumInfo\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport interface EditMainHandles {\n  mediums: any[];\n}\n\nexport const EditMain = React.forwardRef<EditMainHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [openMedium, setOpenMedium] = React.useState(false);\n    const [mediums, setMediums] = React.useState<any>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      mediums: mediums\n    }));\n\n    const handleSave = medium => {\n      setMediums([...mediums, medium]);\n    };\n\n    return (\n      <>\n        <Box className={classes.root}>\n          <Box className={classes.box}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              相关资源\n            </Typography>\n            <GridList cellHeight=\"auto\" cols={4}>\n              {mediums.map((item, idx) => {\n                return (\n                  <GridListTile cols={1} key={idx}>\n                    <MediaNormal {...item} />\n                  </GridListTile>\n                );\n              })}\n\n              <Button onClick={() => setOpenMedium(true)}>添加</Button>\n            </GridList>\n          </Box>\n          {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n        </Box>\n        <EditMediumInfo\n          open={openMedium}\n          onSave={handleSave}\n          onCancel={() => setOpenMedium(false)}\n        />\n      </>\n    );\n  }\n);\n\nexport default EditMain;\n","import * as React from \"react\";\nimport {\n  EditAbout,\n  EditCast,\n  EditMain,\n  EditTop,\n  EditCastHandles,\n  EditTopHandles,\n  EditMainHandles,\n  EditAboutHandles\n} from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport { useCreateMovieMutation } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const MovieUpload: React.FC = () => {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [tab, setTab] = React.useState(0);\n  const topRef = React.createRef<EditTopHandles>();\n  const mainRef = React.createRef<EditMainHandles>();\n  const aboutRef = React.createRef<EditAboutHandles>();\n  const castRef = React.createRef<EditCastHandles>();\n\n  const [create_movie] = useCreateMovieMutation({\n    onCompleted(data) {\n      window.alert(\"success\");\n      RouterHelper.gotoHome();\n    }\n  });\n\n  const handleCreateMovie = () => {\n    const topFields = topRef.current;\n    const mainFields = mainRef.current;\n    const aboutFields = aboutRef.current;\n    const castFields = castRef.current;\n\n    create_movie({\n      variables: {\n        movie: {\n          title: topFields?.title || \"\",\n          cover: topFields?.cover || \"\",\n          posters: topFields?.posters,\n          description: topFields?.description,\n          credits: castFields?.credits,\n          about: aboutFields?.about,\n          sources: mainFields?.mediums\n        }\n      }\n    });\n  };\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop ref={topRef} />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMain ref={mainRef} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} />\n            </div>\n            <div>\n              <div onClick={handleCreateMovie}>create</div>\n            </div>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default MovieUpload;\n"],"sourceRoot":""}