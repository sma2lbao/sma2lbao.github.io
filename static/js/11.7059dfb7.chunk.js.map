{"version":3,"sources":["views/Test/index.tsx"],"names":["UPLOAD_FILE","gql","Test","useMutation","onCompleted","data","console","log","onError","error","upload_file_oss","type","onChange","e","dir","currentTarget","validity","file","files","variables"],"mappings":"8RAGA,IAAMA,EAAcC,YAAH,KAqCFC,UA/BQ,WAAO,IAAD,EACDC,YAAYH,EAAa,CACjDI,YADiD,SACrCC,GACVC,QAAQC,IAAIF,IAEdG,QAJiD,SAIzCC,GACNH,QAAQC,IAAIE,MALTC,EADoB,oBAsB3B,OACE,2BACE,2BACE,yBAAOC,KAAK,OAAOC,SAfN,SAACC,GAClBP,QAAQQ,IAAID,EAAEE,eAD+C,MAKzDF,EAAEE,cAFJC,EAH2D,EAG3DA,SACQC,EAJmD,cAI3DC,MAJ2D,MAMzDF,IACFN,EAAgB,CAAES,UAAW,CAAEF,UAC/BX,QAAQC,IAAIU","file":"static/js/11.7059dfb7.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst UPLOAD_FILE = gql`\n  mutation($file: Upload!) {\n    upload_file_oss(file: $file)\n  }\n`;\n\nconst Test: React.FC = () => {\n  const [upload_file_oss] = useMutation(UPLOAD_FILE, {\n    onCompleted(data) {\n      console.log(data);\n    },\n    onError(error) {\n      console.log(error);\n    }\n  });\n\n  const fileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.dir(e.currentTarget);\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity) {\n      upload_file_oss({ variables: { file } });\n      console.log(file);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <input type=\"file\" onChange={fileChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default Test;\n"],"sourceRoot":""}