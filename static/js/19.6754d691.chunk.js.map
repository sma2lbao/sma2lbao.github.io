{"version":3,"sources":["views/auth/Completion/modules/Necessary.tsx","views/auth/Completion/modules/Basic.tsx","views/auth/Completion/modules/Recommend.tsx","views/auth/Completion/index.tsx"],"names":["Necessary","TextField","label","Basic","meQuery","React","MeContext","me","avatar","setAvatar","nickname","setNickname","address","setAddress","description","setDescription","useUpdateUserMutation","variables","user","updateUser","onChange","e","target","value","placeholder","Button","onClick","Recommend","undefined","steps","Completion","curStep","setCurStep","useMeQuery","data","loading","error","Box","Stepper","activeStep","alternativeLabel","map","Step","key","StepLabel","Provider"],"mappings":"+KAeeA,EAZa,WAC1B,OACE,2BACE,4BACE,gBAACC,EAAA,EAAD,CAAWC,MAAM,aACjB,gBAACD,EAAA,EAAD,CAAWC,MAAM,aACjB,gBAACD,EAAA,EAAD,CAAWC,MAAM,a,QC0CVC,EA9CS,WAAO,IAAD,MACtBC,EAAUC,aAAiBC,GADL,EAEAD,WAAA,OAAeD,QAAf,IAAeA,OAAf,EAAeA,EAASG,GAAGC,QAF3B,mBAErBA,EAFqB,KAEbC,EAFa,OAGIJ,WAAA,OAAeD,QAAf,IAAeA,OAAf,EAAeA,EAASG,GAAGG,UAH/B,mBAGrBA,EAHqB,KAGXC,EAHW,OAIEN,WAAA,OAAeD,QAAf,IAAeA,OAAf,EAAeA,EAASG,GAAGK,SAJ7B,mBAIrBA,EAJqB,KAIZC,EAJY,OAKUR,WAAA,OAAeD,QAAf,IAAeA,OAAf,EAAeA,EAASG,GAAGO,aALrC,mBAKrBA,EALqB,KAKRC,EALQ,OAMPC,YAAsB,CACzCC,UAAW,CACTC,KAAM,CACJV,SACAE,WACAE,UACAE,kBANCK,EANqB,oBAiB5B,OACE,2BACE,4BACE,gBAAClB,EAAA,EAAD,CACEmB,SAAU,SAAAC,GAAC,OAAIZ,EAAUY,EAAEC,OAAOC,QAClCrB,MAAM,SACNsB,YAAW,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAASG,GAAGC,SAE3B,gBAACP,EAAA,EAAD,CACEmB,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOC,QACpCrB,MAAM,WACNsB,YAAW,iBAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAASG,GAAGG,gBAAd,QAA0B,KAEvC,gBAACT,EAAA,EAAD,CACEmB,SAAU,SAAAC,GAAC,OAAIR,EAAWQ,EAAEC,OAAOC,QACnCrB,MAAM,UACNsB,YAAW,iBAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAASG,GAAGK,eAAd,QAAyB,KAEtC,gBAACX,EAAA,EAAD,CACEmB,SAAU,SAAAC,GAAC,OAAIN,EAAeM,EAAEC,OAAOC,QACvCrB,MAAM,cACNsB,YAAW,iBAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAASG,GAAGO,mBAAd,QAA6B,MAG5C,gBAACW,EAAA,EAAD,CAAQC,QAAS,kBAAMP,MAAvB,kBCxCSQ,EAJa,WAC1B,OAAO,6B,0CCIF,IAAMrB,EAAYD,qBAAyCuB,GAE5DC,EAAQ,CAAC,yBAA0B,aAAc,aAsCxCC,UApCc,WAAO,IAAD,EACHzB,WAAe,GADZ,mBAC1B0B,EAD0B,KACjBC,EADiB,OAGAC,cAAzBC,EAHyB,EAGzBA,KAAMC,EAHmB,EAGnBA,QAASC,EAHU,EAGVA,MAMvB,OACE,gBAACC,EAAA,EAAD,KACE,2BACE,gBAACC,EAAA,EAAD,CAASC,WAAYR,EAASS,kBAAgB,GAC3CX,EAAMY,KAAI,SAAAvC,GAAK,OACd,gBAACwC,EAAA,EAAD,CAAMC,IAAKzC,GACT,gBAAC0C,EAAA,EAAD,KAAY1C,SAKpB,2BACE,gBAACuB,EAAA,EAAD,CAAQC,QAhBK,WACjBM,EAAWD,EAAU,KAejB,SAEF,2BACE,gBAACzB,EAAUuC,SAAX,CAAoBtB,MAAOW,GACzB,2BAAkB,IAAZH,GAAiB,gBAAC,EAAD,OACvB,2BAAkB,IAAZA,GAAiB,gBAAC,EAAD,OACvB,2BAAkB,IAAZA,GAAiB,gBAAC,EAAD,SAG1BI,GAAW,sCACXC,GAAS","file":"static/js/19.6754d691.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nconst Necessary: React.FC = () => {\n  return (\n    <div>\n      <form>\n        <TextField label=\"username\" />\n        <TextField label=\"password\" />\n        <TextField label=\"email\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Necessary;\n","import * as React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { MeContext } from \"..\";\nimport { useUpdateUserMutation } from \"@/schema\";\n\nconst Basic: React.FC = () => {\n  const meQuery = React.useContext(MeContext);\n  const [avatar, setAvatar] = React.useState(meQuery?.me.avatar);\n  const [nickname, setNickname] = React.useState(meQuery?.me.nickname);\n  const [address, setAddress] = React.useState(meQuery?.me.address);\n  const [description, setDescription] = React.useState(meQuery?.me.description);\n  const [updateUser] = useUpdateUserMutation({\n    variables: {\n      user: {\n        avatar,\n        nickname,\n        address,\n        description\n      }\n    }\n  });\n\n  return (\n    <div>\n      <form>\n        <TextField\n          onChange={e => setAvatar(e.target.value)}\n          label=\"avatar\"\n          placeholder={meQuery?.me.avatar}\n        />\n        <TextField\n          onChange={e => setNickname(e.target.value)}\n          label=\"nickname\"\n          placeholder={meQuery?.me.nickname ?? \"\"}\n        />\n        <TextField\n          onChange={e => setAddress(e.target.value)}\n          label=\"address\"\n          placeholder={meQuery?.me.address ?? \"\"}\n        />\n        <TextField\n          onChange={e => setDescription(e.target.value)}\n          label=\"description\"\n          placeholder={meQuery?.me.description ?? \"\"}\n        />\n      </form>\n      <Button onClick={() => updateUser()}>保存</Button>\n    </div>\n  );\n};\n\nexport default Basic;\n","import * as React from \"react\";\n\nconst Recommend: React.FC = () => {\n  return <div></div>;\n};\n\nexport default Recommend;\n","import * as React from \"react\";\nimport { Box, Stepper, Step, StepLabel, Button } from \"@material-ui/core\";\nimport Necessary from \"./modules/Necessary\";\nimport Basic from \"./modules/Basic\";\nimport Recommend from \"./modules/Recommend\";\nimport { useMeQuery, MeQuery } from \"@/schema\";\n\nexport const MeContext = React.createContext<MeQuery | undefined>(undefined);\n\nconst steps = [\"Important Email Number\", \"Basic Info\", \"Recommend\"];\n\nconst Completion: React.FC = () => {\n  const [curStep, setCurStep] = React.useState(0);\n\n  const { data, loading, error } = useMeQuery();\n\n  const handleNext = () => {\n    setCurStep(curStep + 1);\n  };\n\n  return (\n    <Box>\n      <div>\n        <Stepper activeStep={curStep} alternativeLabel>\n          {steps.map(label => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n      <div>\n        <Button onClick={handleNext}>next</Button>\n      </div>\n      <div>\n        <MeContext.Provider value={data}>\n          <div>{curStep === 0 && <Necessary />}</div>\n          <div>{curStep === 1 && <Basic />}</div>\n          <div>{curStep === 2 && <Recommend />}</div>\n        </MeContext.Provider>\n      </div>\n      {loading && <div>loading</div>}\n      {error && <div>error</div>}\n    </Box>\n  );\n};\n\nexport default Completion;\n"],"sourceRoot":""}