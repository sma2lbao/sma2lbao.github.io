{"version":3,"sources":["pages/Login/components/SignIn.tsx","pages/Login/components/SignUp.tsx","pages/Login/components/Swiper.tsx","pages/Login/index.tsx"],"names":["ACCESS_TOKEN","gql","SignIn","history","useHistory","enqueueSnackbar","useSnackbar","useMutation","onCompleted","data","localStorage","setItem","access_token","push","onError","error","console","log","loading","React","username","setUsername","password","setPassword","TextField","id","label","value","onChange","e","target","placeholder","fullWidth","margin","type","Button","variant","onClick","variables","disabled","IconButton","child","window","open","timer","setInterval","postMessage","signal","addEventListener","event","clearInterval","close","GitHub","SEND_EMAIL_OPT","ADD_USER_WITH_CODE","email","setEmail","code","setCode","send_email_opt","add_user_with_code","required","Box","AutoPlaySwipeableViews","autoPlay","SwipeableViews","useStyles","makeStyles","theme","createStyles","image","width","height","Swiper","props","classes","images","enableMouseEvents","index","map","item","i","className","key","Image","src","defaultProps","root","fontSize","overflow","left","flex","backgroundColor","palette","primary","main","right","background","paper","display","alignItems","justifyContent","Login","tag","setTag","_"],"mappings":"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","file":"static/js/17.5ef80f50.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { TextField, Button, IconButton } from \"@material-ui/core\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router\";\nimport { GitHub } from \"@material-ui/icons\";\n\nconst ACCESS_TOKEN = gql`\n  mutation($username: String!, $password: String!) {\n    access_token(username: $username, password: $password)\n  }\n`;\n\nexport default function SignIn() {\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n  const [access_token, res] = useMutation(ACCESS_TOKEN, {\n    onCompleted(data) {\n      enqueueSnackbar(\"登录成功\");\n      localStorage.setItem(\"access_token\", data.access_token);\n      history.push(\"/home\");\n    },\n    onError(error) {\n      console.log(error);\n    }\n  });\n  const { loading } = res;\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const _signIn = function() {\n    access_token({ variables: { username: username, password: password } });\n  };\n\n  const github_login = function() {\n    const child = window.open(\n      \"http://localhost:108/auth/github\",\n      \"github\",\n      `width=450,height=450,toolbar=0,menubar=0,location=0,status=0`\n    );\n    if (child) {\n      const timer = setInterval(() => {\n        child.postMessage(\n          {\n            type: \"access_token\",\n            signal: \"天王盖地虎\"\n          },\n          \"http://localhost:108\"\n        );\n      }, 1000);\n\n      window.addEventListener(\"message\", event => {\n        const data = event.data;\n        if (\n          data &&\n          data.type === \"access_token_callback\" &&\n          data.signal === \"宝塔镇河妖\"\n        ) {\n          clearInterval(timer);\n          child && child.close();\n\n          enqueueSnackbar(\n            data.data.access_token ? \"登录成功\" : data.data.error || \"登录失败\"\n          );\n          localStorage.setItem(\"access_token\", data.data.access_token);\n          history.push(\"/home\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <TextField\n          id=\"username\"\n          label=\"用户名\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          placeholder=\"请输入用户名\"\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"password\"\n          label=\"密码\"\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          placeholder=\"请输入密码\"\n          fullWidth\n          margin=\"normal\"\n        />\n        <Button variant=\"contained\" onClick={_signIn} disabled={loading}>\n          {loading ? \"登录中\" : \"登录\"}\n        </Button>\n      </form>\n      <IconButton onClick={github_login}>\n        <GitHub />\n      </IconButton>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { TextField, Button, Box } from \"@material-ui/core\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useSnackbar } from \"notistack\";\n\nconst SEND_EMAIL_OPT = gql`\n  mutation($email: String!) {\n    send_email_opt(email: $email)\n  }\n`;\n\nconst ADD_USER_WITH_CODE = gql`\n  mutation(\n    $username: String!\n    $password: String!\n    $email: String!\n    $code: String!\n  ) {\n    add_user_with_code(\n      user: {\n        username: $username\n        password: $password\n        email: $email\n        code: $code\n      }\n    ) {\n      uid\n    }\n  }\n`;\n\nexport default function SignIn() {\n  const { enqueueSnackbar } = useSnackbar();\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [code, setCode] = React.useState(\"\");\n\n  // 发送验证码\n  const [send_email_opt] = useMutation(SEND_EMAIL_OPT, {\n    onCompleted(data) {\n      console.log(data);\n      enqueueSnackbar(\"发送成功\");\n    },\n    onError(error) {\n      console.error(error);\n      enqueueSnackbar(\"发送失败\");\n    }\n  });\n  const _sendVerifyCode = function() {\n    send_email_opt({ variables: { email: email } });\n  };\n\n  // 注册\n  const [add_user_with_code] = useMutation(ADD_USER_WITH_CODE, {\n    onError(error) {\n      console.error(error);\n      enqueueSnackbar(\"注册失败\");\n    },\n    onCompleted(data) {\n      console.log(data);\n      enqueueSnackbar(\"注册成功\");\n    }\n  });\n  const _signUp = function() {\n    add_user_with_code({\n      variables: {\n        username,\n        password,\n        email,\n        code\n      }\n    });\n  };\n\n  return (\n    <div>\n      <form>\n        <TextField\n          id=\"username\"\n          label=\"用户名\"\n          required\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          placeholder=\"请输入用户名\"\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"password\"\n          label=\"密码\"\n          type=\"password\"\n          required\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          placeholder=\"请输入密码\"\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"email\"\n          label=\"邮箱\"\n          type=\"email\"\n          required\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          placeholder=\"请输入邮箱\"\n          fullWidth\n          margin=\"normal\"\n        />\n        <Box>\n          <TextField\n            id=\"code\"\n            label=\"验证码\"\n            value={code}\n            onChange={e => setCode(e.target.value)}\n            placeholder=\"请输入验证码\"\n            margin=\"normal\"\n          />\n          <Button variant=\"contained\" onClick={_sendVerifyCode}>\n            获取验证码\n          </Button>\n        </Box>\n        <Button variant=\"contained\" fullWidth onClick={_signUp}>\n          注册\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport Image from \"@/components/Image\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    image: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  })\n);\n\ninterface SwiperProps {\n  images: string[];\n}\n\nfunction Swiper(props: SwiperProps) {\n  const classes = useStyles();\n  const { images } = props;\n\n  return (\n    <div>\n      <AutoPlaySwipeableViews enableMouseEvents index={0}>\n        {images.map((item, i) => {\n          return (\n            <div className={classes.image} key={i}>\n              <Image src={item} />\n            </div>\n          );\n        })}\n      </AutoPlaySwipeableViews>\n    </div>\n  );\n}\n\nSwiper.defaultProps = {\n  images: [\n    \"https://pic1.zhimg.com/v2-cc17d8b31fe162fdbfadba1d18b7836e_1200x500.jpg\",\n    \"http://n.sinaimg.cn/collect/crawl/20160224/ZFh0-fxprucv9824132.jpg\"\n  ]\n} as Partial<SwiperProps>;\n\nexport default Swiper;\n","import * as React from \"react\";\nimport { SignIn, SignUp, Swiper } from \"./components\";\nimport { Button, Box } from \"@material-ui/core\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      height: \"100vh\",\n      fontSize: 0,\n      overflow: \"hidden\"\n    },\n    left: {\n      flex: 1,\n      backgroundColor: theme.palette.primary.main\n    },\n    right: {\n      flex: 1,\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    main: {\n      width: 300\n    }\n  })\n);\n\nexport default function Login() {\n  const classes = useStyles();\n  const [tag, setTag] = React.useState(0);\n\n  return (\n    <Box className={classes.root} display=\"flex\">\n      <div className={classes.left}>\n        <Swiper />\n      </div>\n      <div className={classes.right}>\n        <div className={classes.main}>\n          <Button onClick={_ => setTag(0)}>登录</Button>\n          <Button onClick={_ => setTag(1)}>注册</Button>\n          <div>\n            {tag === 0 && <SignIn />}\n            {tag === 1 && <SignUp />}\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n"],"sourceRoot":""}