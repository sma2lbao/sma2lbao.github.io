{"version":3,"sources":["common/constants/default.constant.ts","layouts/PageLayout/modules/AiderScreen.tsx","layouts/PageLayout/modules/BodyScreen.tsx","layouts/PageLayout/modules/ContentScreen.tsx","layouts/PageLayout/modules/FullScreen.tsx","layouts/PageLayout/index.tsx","components/base/Image/index.tsx","theme/overrides/index.ts","theme/overrides/MuiTabs.ts","theme/overrides/MuiTab.ts","theme/custom/index.ts","theme/custom/layout.ts","theme/index.ts","theme/palette.ts","theme/typography.ts","layouts/Main/modules/Sidebar/index.tsx","layouts/Main/modules/Topbar/components/Search.tsx","layouts/Main/modules/Topbar/components/Account.tsx","layouts/Main/modules/Topbar/components/Notice.tsx","layouts/Main/modules/Topbar/index.tsx","layouts/Main/index.tsx","layouts/RouteWithLayout/index.tsx","views/Home/modules/Aider/index.tsx","views/Home/modules/Recommend/Movie.tsx","views/Home/modules/Recommend/index.tsx","views/Home/modules/Topic/index.tsx","views/Home/index.tsx","router/index.tsx","components/base/Message/index.tsx","apollo/index.ts","App.tsx","serviceWorker.ts","index.tsx","schema.tsx","hooks/router.helper.ts","common/constants/route.constant.ts","hooks/index.ts","components/app/Duration/index.tsx","components/app/VideoCard/VideoWithAuthor.tsx","components/app/VideoCard/VideoNormal.tsx","components/app/VideoCard/index.ts"],"names":["DEFAULT_USER_AVATAR","DEFULAT_MOVIE_COVER","useStyles","makeStyles","theme","createStyles","container","maxWidth","flex","agent","props","keys","Object","mixins","toolbar","top_normal","height","minHeight","top","style","position","overflow","maxHeight","forEach","key","entity","top_current","assign","root","AiderScreen","classes","sticky","className","clsx","children","display","margin","BodyScreen","ContentScreen","width","FullScreen","ImageStatus","fontSize","aspect","paddingTop","aspectRatio","backgroundColor","image","left","objectFit","alignItems","justifyContent","pointerEvents","Image","src","alt","React","Loading","status","setStatus","_loadImage","Success","_loadImageFail","Failuare","onLoad","onError","variant","animation","MuiTabs","MuiTab","layout","size","parent","createMuiTheme","palette","tertiary","main","overrides","typography","custom","flexShrink","flexDirection","child","padding","spacing","menus","icon","Home","label","value","path","HourglassEmpty","disabled","Movie","Person","Sidebar","closeSidebarHandler","rest","history","useHistory","parentSelected","setParentSelected","childMenus","currParentMenu","find","menu","length","childSelected","setChildSelected","push","currentChildMenu","Drawer","onClose","map","index","IconButton","color","onClick","Skeleton","active","Typography","gutterBottom","search","borderRadius","shape","fade","common","white","input","paddingRight","transition","transitions","create","Search","InputBase","placeholder","inputProps","Account","anchorEl","setAnchorEl","_close","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","id","keepMounted","open","Boolean","MenuItem","Notice","Mail","appBar","zIndex","drawer","boxShadow","shadows","menuIcon","Topbar","AppBar","Toolbar","Box","Icon","openSidebarHandler","Menu","Divider","shiftMain","marginLeft","easing","sharp","duration","leavingScreen","Main","hideSidebar","isDesktop","useMediaQuery","openSidebar","setOpenSidebar","paper","RouteWithLayout","Layout","Component","component","loading","lazy","render","matchProps","fallback","title","Aider","RouterHelper","useRouteHelper","data","useUserUrgesQuery","users","user_urges","List","user","i","ListItem","gotoProfile","username","ListItemAvatar","Avatar","avatar","ListItemText","nickname","ListItemSecondaryAction","Button","MovieRecommend","useMovieUrgesQuery","movies","movie_urges","paddingY","Link","gotoMovieHome","GridList","cellHeight","cols","movie","Grow","in","timeout","GridListTile","Recommend","VirtualizeSwipeableViews","virtualize","SwipeableViews","head","headItem","bannerRoot","banner","bannerItem","Topic","setIndex","useCurrentTopicQuery","console","log","mb","KeyboardArrowLeft","onChangeIndex","enableMouseEvents","slideRenderer","params","KeyboardArrowRight","paddingLeft","aider","borderLeft","borderColor","divider","MovieHome","TVHome","MoviePlay","MovieUpload","TV","Profile","Personal","Resume","Login","Completion","NotFound","Forbidden","InternalServerError","H5NotSupported","Test","AppRoute","test","navigator","userAgent","exact","MainLayout","mountPoint","document","createElement","body","appendChild","Message","success","msg","this","toast","warning","info","error","opts","ShowSnackbar","enqueueSnackbar","useSnackbar","message","options","ReactDOM","maxSnack","httpLink","HttpLink","uri","process","wsLink","WebSocketLink","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","authLink","setContext","_","headers","access_token","localStorage","getItem","authorization","errorLink","graphQLErrors","networkError","locations","Sentry","client","ApolloClient","cache","InMemoryCache","link","from","App","ThemeProvider","CssBaseline","ApolloProvider","window","location","hostname","match","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","enabled","dsn","getElementById","serviceWorker","ready","then","registration","unregister","Region","ReviewMedium","gql","LoginDocument","useLoginMutation","baseOptions","ApolloReactHooks","SendRegisterEmailDocument","useSendRegisterEmailMutation","CreateUserWithCodeDocument","useCreateUserWithCodeMutation","CurrentTopicDocument","MovieUrgesDocument","UserUrgesDocument","MovieDocument","useMovieQuery","MoviesPaginatedDocument","useMoviesPaginatedQuery","PlaylistsPaginatedDocument","usePlaylistsPaginatedQuery","state","gotoHome","gotoMovie","movie_id","Duration","unit","hh","moment","hours","mm","minutes","ss","seconds","format","padStart","defaultProps","wrap","poster","border","bottom","right","breakpoints","down","VideoWithAuthor","e","stopPropagation","cover","author","noWrap","create_at","subtitle","Date","VideoNormal"],"mappings":"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","file":"static/js/main.3208e634.chunk.js","sourcesContent":["export const DEFAULT_USER_AVATAR =\n  \"https://cdn.dribbble.com/users/5746/screenshots/4143186/dribbble-salvatier-avatar.jpg\";\n\nexport const DEFAULT_HOLDER =\n  \"https://cdn.dribbble.com/users/185738/screenshots/3515176/growthandstrategy.jpg\";\n\nexport const DEFULAT_MOVIE_COVER =\n  \"https://cdn.dribbble.com/users/185738/screenshots/3515176/growthandstrategy.jpg\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { AiderScreenLayoutProps } from \"../layout.d\";\nimport { CreateCSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      maxWidth: 400,\n      flex: 1\n    },\n    agent: (props: AiderScreenLayoutProps) => {\n      const keys = Object.keys(theme.mixins.toolbar);\n      const height_normal =\n        theme.mixins.toolbar?.height || theme.mixins.toolbar?.minHeight || 0;\n      const top_normal = +height_normal + (props?.top || 0);\n      const style: CreateCSSProperties<AiderScreenLayoutProps> = {\n        position: \"sticky\",\n        top: top_normal,\n        overflow: \"auto\",\n        maxHeight: `calc(100vh - ${top_normal}px)`\n      };\n      keys.forEach(key => {\n        const entity: any = theme.mixins.toolbar[key];\n        if (\n          typeof entity === \"object\" &&\n          (entity?.height || entity?.minHeight)\n        ) {\n          const height_current = entity?.height || entity?.minHeight;\n          const top_current = +height_current + (props?.top || 0);\n          Object.assign(style, {\n            [key]: {\n              top: top_current,\n              maxHeight: `calc(100vh - ${top_current}px)`\n            }\n          });\n        }\n      });\n      return style;\n    },\n    root: {}\n  })\n);\n\nexport default function AiderScreen(props: AiderScreenLayoutProps) {\n  const classes = useStyles(props);\n  const { sticky } = props;\n  if (sticky) {\n    return (\n      <div className={clsx(classes.container)}>\n        <div className={clsx(classes.agent)}>\n          {/* <div className={clsx(classes.wrap)}>\n            <div className={clsx(classes.toolbar)}></div>\n          </div> */}\n          <div className={clsx(classes.root, props.className)}>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { BodyScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1600,\n      display: \"flex\",\n      margin: \"0 auto\"\n    }\n  })\n);\n\nexport default function BodyScreen(props: BodyScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { ContentScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1200,\n      flex: 3\n    }\n  })\n);\n\nexport default function ContentScreen(props: ContentScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={Object.assign({}, props.width ? { width: props.width } : {})}\n      className={clsx(classes.root, props.className)}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { FullScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    }\n  })\n);\n\nexport default function FullScreen(props: FullScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\n\ninterface PageLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function PageLayout(props: PageLayoutProps) {\n  return <div>{props.children}</div>;\n}\n\nexport { FullScreen, BodyScreen, ContentScreen, AiderScreen } from \"./modules\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: (props: ImageProp) => {\n        return props.height || \"auto\";\n      },\n      width: (props: ImageProp) => {\n        return props.width || \"100%\";\n      },\n      fontSize: 0,\n      overflow: \"hidden\"\n    },\n    aspect: {\n      paddingTop: (props: ImageProp) => {\n        if (props.aspectRatio) {\n          return `calc(1 / ${props.aspectRatio} * 100%)`;\n        } else {\n          return 0;\n        }\n      },\n      position: \"relative\",\n      backgroundColor: \"transparent\"\n    },\n    image: {\n      position: (props: ImageProp) => {\n        if (props.aspectRatio) {\n          return \"absolute\";\n        } else {\n          return \"relative\";\n        }\n      },\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      objectFit: \"cover\"\n    },\n    container: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\"\n    }\n  })\n);\n\ninterface ImageProp {\n  aspectRatio?: number; // 宽高比\n  src?: string;\n  classes?: Object;\n  width?: number | string;\n  height?: number | string;\n  alt?: string;\n}\n\nenum ImageStatus {\n  Loading = 0,\n  Success = 1,\n  Failuare = -1\n}\n\nexport default function Image(props: ImageProp) {\n  const classes = useStyles(props);\n  const { src, alt } = props;\n\n  // status: 0:加载中 1: 加载成功 -1:加载失败\n  const [status, setStatus] = React.useState(ImageStatus.Loading);\n\n  const _loadImage = () => {\n    setStatus(ImageStatus.Success);\n  };\n\n  const _loadImageFail = () => {\n    setStatus(ImageStatus.Failuare);\n  };\n\n  return (\n    <div className={classes.root}>\n      {props.aspectRatio && (\n        <div className={classes.aspect}>\n          {src && status !== ImageStatus.Failuare && (\n            <img\n              alt={alt}\n              className={classes.image}\n              src={src}\n              onLoad={_loadImage}\n              onError={_loadImageFail}\n            />\n          )}\n          {status !== ImageStatus.Success && (\n            <div className={classes.container}>\n              {status === ImageStatus.Loading && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n              {status === ImageStatus.Failuare && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      {!props.aspectRatio && (\n        <>\n          {src && status !== ImageStatus.Failuare && (\n            <img\n              className={classes.image}\n              src={src}\n              alt=\"\"\n              onLoad={_loadImage}\n              onError={_loadImageFail}\n            />\n          )}\n          {status !== ImageStatus.Success && (\n            <div className={classes.container}>\n              {status === ImageStatus.Loading && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n              {status === ImageStatus.Failuare && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import MuiTabs from \"./MuiTabs\";\nimport MuiTab from \"./MuiTab\";\n\nexport default {\n  MuiTabs,\n  MuiTab\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","import layout, { LayoutOptions } from \"./layout\";\n\nexport interface customOption {\n  layout: LayoutOptions;\n}\n\nexport default {\n  layout\n};\n","export interface LayoutOptions {\n  size: {\n    parent: {\n      width: React.CSSProperties[\"width\"];\n    };\n  };\n}\n\nexport default {\n  size: {\n    parent: {\n      width: 80\n    }\n  }\n} as Partial<LayoutOptions>;\n","import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n// import * as Colors from '@material-ui/core/colors'\nimport overrides from \"./overrides\";\nimport typography from \"./typography\";\nimport palette from \"./palette\";\nimport custom, { customOption } from \"./custom\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    custom?: customOption;\n  }\n}\n\nconst theme = createMuiTheme(\n  {\n    palette,\n    overrides,\n    typography\n  },\n  {\n    custom\n  }\n);\n\nexport default theme;\n","import {\n  PaletteOptions,\n  PaletteColorOptions\n} from \"@material-ui/core/styles/createPalette\";\n\nexport default {\n  tertiary: {\n    main: \"#ccc\"\n  } as Partial<PaletteColorOptions>\n} as Partial<PaletteOptions>;\n","export default {};\n","import * as React from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  // Icon,\n  Typography\n  // Divider,\n} from \"@material-ui/core\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { DrawerProps } from \"@material-ui/core/Drawer\";\nimport { Home, Movie, Person, HourglassEmpty } from \"@material-ui/icons\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router\";\n\ntype CloseSidebarFunc = (...args: any[]) => void;\n\ninterface SidebarProps extends DrawerProps {\n  closeSidebarHandler?: CloseSidebarFunc;\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    toolbar: theme.mixins.toolbar,\n    root: {\n      display: \"flex\"\n    },\n    parent: {\n      width: theme.custom?.layout.size.parent.width,\n      flexShrink: 0,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    child: {\n      flex: 1,\n      overflow: \"hidden\",\n      padding: theme.spacing(2, 1)\n    }\n  });\n});\n\nconst menus = [\n  {\n    icon: <Home />,\n    label: \"Home\",\n    value: \"home\",\n    path: \"\",\n    children: [\n      {\n        icon: <HourglassEmpty />,\n        label: \"Home\",\n        value: \"home\",\n        path: \"/home\"\n      },\n      {\n        icon: <HourglassEmpty />,\n        label: \"History Topics\",\n        value: \"topic\",\n        path: \"/topics\",\n        disabled: true\n      }\n    ]\n  },\n  {\n    icon: <Movie />,\n    label: \"Movie\",\n    value: \"movie\",\n    path: \"/movie-home\",\n    children: []\n  },\n  {\n    icon: <Person />,\n    label: \"My\",\n    value: \"user\",\n    path: \"\",\n    children: [\n      {\n        icon: <HourglassEmpty />,\n        label: \"My Homepage\",\n        value: \"personal\",\n        path: \"/personal\"\n      },\n      {\n        icon: <HourglassEmpty />,\n        label: \"Setting\",\n        value: \"setting\",\n        path: \"/setting\",\n        disabled: true\n      }\n    ]\n  }\n];\n\nexport default function Sidebar(props: SidebarProps) {\n  const { closeSidebarHandler, ...rest } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [parentSelected, setParentSelected] = React.useState(\"home\");\n  const childMenus = React.useMemo(() => {\n    const currParentMenu = menus.find(menu => menu.value === parentSelected);\n    const currChildMenu = currParentMenu?.children || [];\n    return currChildMenu;\n  }, [parentSelected]);\n\n  const [childSelected, setChildSelected] = React.useState(() => {\n    return childMenus.length ? childMenus[0].value : \"\";\n  });\n  React.useEffect(() => {\n    const currParentMenu = menus.find(menu => menu.value === parentSelected);\n    if (currParentMenu && currParentMenu.path) {\n      history.push(currParentMenu.path);\n    } else if (childMenus.length && childSelected) {\n      const currentChildMenu = childMenus.find(\n        child => child.value === childSelected\n      );\n      if (currentChildMenu?.path) {\n        history.push(currentChildMenu.path);\n      }\n    }\n  }, [parentSelected, childSelected, history, childMenus]);\n\n  return (\n    <Drawer {...rest} onClose={closeSidebarHandler}>\n      <div className={classes.toolbar}></div>\n      <div className={classes.root}>\n        <div className={classes.parent}>\n          {menus.map((menu, index) => (\n            <div key={index}>\n              <IconButton\n                color={parentSelected === menu.value ? \"primary\" : \"default\"}\n                onClick={() => setParentSelected(menu.value)}\n              >\n                <Skeleton\n                  width=\"1em\"\n                  height=\"1em\"\n                  variant=\"circle\"\n                  animation=\"wave\"\n                />\n                {/* <Icon>{menu.icon}</Icon> */}\n              </IconButton>\n            </div>\n          ))}\n        </div>\n        <div className={classes.child}>\n          {childMenus.map((child, index) => {\n            return (\n              <div\n                key={index}\n                onClick={() => setChildSelected(child.value)}\n                className={clsx({ active: child.value === childSelected })}\n              >\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {/* {child.label} */}\n                  <Skeleton\n                    width=\"70%\"\n                    height=\"100%\"\n                    animation=\"wave\"\n                  ></Skeleton>\n                </Typography>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div onClick={closeSidebarHandler}>close menu</div>\n    </Drawer>\n  );\n}\n","import * as React from \"react\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport { Theme, InputBase } from \"@material-ui/core\";\nimport { createStyles, makeStyles, fade } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    search: {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      margin: theme.spacing(0, 1)\n    },\n    icon: {\n      pointerEvents: \"none\",\n      margin: theme.spacing(0, 1)\n    },\n    input: {\n      color: \"inherit\",\n      paddingRight: theme.spacing(1),\n      transition: theme.transitions.create(\"width\"),\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  });\n});\n\nexport default function Search() {\n  const classes = useStyles();\n  return (\n    <div className={classes.search}>\n      <SearchIcon className={classes.icon} />\n      <InputBase\n        classes={{ input: classes.input }}\n        placeholder=\"搜索\"\n        inputProps={{ \"aria-label\": \"Search\" }}\n      />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { AccountCircle } from \"@material-ui/icons\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\n\nexport default function Account() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  function _close() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <>\n      <IconButton\n        aria-controls=\"account-menu\"\n        aria-haspopup=\"true\"\n        onClick={event => {\n          setAnchorEl(event.currentTarget);\n        }}\n        color=\"inherit\"\n      >\n        <AccountCircle />\n      </IconButton>\n      <Menu\n        id=\"account-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={_close}\n      >\n        <MenuItem onClick={_close}>Resume</MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Mail } from \"@material-ui/icons\";\n\nexport default function Notice() {\n  return (\n    <IconButton color=\"inherit\">\n      <Mail />\n    </IconButton>\n  );\n}\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  // Typography,\n  Box,\n  Divider,\n  IconButton,\n  Icon\n} from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport Search from \"./components/Search\";\nimport Account from \"./components/Account\";\nimport Notice from \"./components/Notice\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      boxShadow: theme.shadows[0]\n    },\n    menuIcon: {\n      margin: theme.spacing(0, 2)\n    },\n    toolbar: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    search: {\n      margin: theme.spacing(0, 1)\n    }\n  });\n});\n\ntype OpenSidebarFunc = (...args: any[]) => void;\n\ninterface TopbarProps {\n  openSidebarHandler?: OpenSidebarFunc;\n}\n\nexport default function Topbar(props: TopbarProps) {\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar color=\"inherit\" position=\"fixed\" className={classes.appBar}>\n        <Toolbar classes={{ root: classes.toolbar }}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <div>\n              <Icon\n                fontSize=\"large\"\n                className={clsx(\"iconfont icon-logo\")}\n              ></Icon>\n            </div>\n            <IconButton\n              size=\"small\"\n              onClick={props.openSidebarHandler}\n              className={classes.menuIcon}\n            >\n              <Menu fontSize=\"small\" />\n            </IconButton>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Search />\n            <Notice />\n            <Account />\n          </Box>\n        </Toolbar>\n        <Divider />\n      </AppBar>\n      <Toolbar></Toolbar>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  makeStyles,\n  createStyles,\n  Theme\n  // useTheme\n} from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { Sidebar, Topbar } from \"./modules\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      backgroundColor: \"#f5f5f5\",\n      minHeight: \"100vh\"\n    },\n    drawer: {\n      width: 290\n    },\n    shiftMain: {\n      marginLeft: 290\n    },\n    main: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  })\n);\n\ninterface MainProps {\n  children?: React.ReactNode;\n  hideSidebar?: boolean;\n}\n\nconst Main: React.FC<MainProps> = (props: MainProps) => {\n  const { children, hideSidebar } = props;\n  const classes = useStyles();\n  // const theme = useTheme();\n  // const isDesktop = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const isDesktop = useMediaQuery(\"(min-width: 1600px)\");\n  const [openSidebar, setOpenSidebar] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Topbar\n        openSidebarHandler={() => setOpenSidebar(hideSidebar ? false : true)}\n      />\n      <div>\n        {!hideSidebar && (\n          <Sidebar\n            classes={{ paper: classes.drawer }}\n            open={openSidebar}\n            variant={isDesktop ? \"persistent\" : \"temporary\"}\n            closeSidebarHandler={() => setOpenSidebar(false)}\n          />\n        )}\n        <main\n          className={clsx(classes.main, {\n            [classes.shiftMain]: openSidebar && isDesktop\n          })}\n        >\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport const MainWithoutSidebar: React.FC = props => {\n  return <Main hideSidebar>{props.children}</Main>;\n};\n\nexport default Main;\n","import * as React from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\n\ninterface IProps extends RouteProps {\n  layout?: any;\n  component: any;\n  lazy?: boolean;\n  loading?: any;\n}\n\nexport default function RouteWithLayout(props: IProps) {\n  const {\n    layout: Layout,\n    component: Component,\n    loading: Loading,\n    lazy,\n    ...rest\n  } = props;\n\n  return Layout ? (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          {lazy ? (\n            <React.Suspense\n              fallback={Loading ? <Loading /> : <div>loading</div>}\n            >\n              <Component {...matchProps} />\n            </React.Suspense>\n          ) : (\n            <Component {...matchProps} />\n          )}\n        </Layout>\n      )}\n    />\n  ) : (\n    <Route\n      {...rest}\n      render={matchProps => {\n        if (lazy) {\n          return (\n            <React.Suspense\n              fallback={Loading ? <Loading /> : <div>loading</div>}\n            >\n              <Component {...matchProps} />\n            </React.Suspense>\n          );\n        } else {\n          return <Component {...matchProps} />;\n        }\n      }}\n    />\n  );\n}\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Avatar,\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useUserUrgesQuery } from \"@/schema\";\nimport { DEFAULT_USER_AVATAR } from \"@/common/constants/default.constant\";\nimport { useRouteHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    title: {\n      padding: theme.spacing(1, 2)\n    }\n  })\n);\n\nexport default function Aider() {\n  const classes = useStyles();\n  const RouterHelper = useRouteHelper();\n  const { data } = useUserUrgesQuery();\n  const users = data?.user_urges;\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography className={classes.title} variant=\"h6\">\n          贡献榜\n        </Typography>\n        <List>\n          {users &&\n            users.map((user, i) => {\n              return (\n                <ListItem\n                  key={i}\n                  onClick={() => RouterHelper.gotoProfile(user?.username)}\n                >\n                  <ListItemAvatar>\n                    <Avatar src={user?.avatar || DEFAULT_USER_AVATAR}></Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography>{user.nickname || \"江湖客\"}</Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    <Button>\n                      <Typography>关注</Typography>\n                    </Button>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n        </List>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Typography, Box, Link, Grow } from \"@material-ui/core\";\nimport { VideoWithAuthor } from \"@/components/app/VideoCard\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\n// import { Skeleton } from \"@material-ui/lab\";\n// import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useMovieUrgesQuery } from \"@/schema\";\nimport { useRouteHelper } from \"@/hooks\";\n\nexport default function MovieRecommend() {\n  const RouterHelper = useRouteHelper();\n  const { data } = useMovieUrgesQuery();\n  const movies = data?.movie_urges;\n\n  return (\n    <Box padding={0}>\n      <Box\n        paddingY={1}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Typography component=\"span\" variant=\"h6\">\n          电影推荐\n        </Typography>\n        <Link\n          onClick={RouterHelper.gotoMovieHome}\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          更多\n        </Link>\n      </Box>\n\n      {movies && (\n        <GridList cellHeight=\"auto\" cols={4}>\n          {movies.map((movie: any, index: number) => {\n            return (\n              <Grow key={index} in timeout={index * 800}>\n                <GridListTile cols={movie.cols || 1}>\n                  <VideoWithAuthor key={index} {...movie} />\n                </GridListTile>\n              </Grow>\n            );\n          })}\n        </GridList>\n      )}\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport MovieRecommend from \"./Movie\";\n// import TvRecommend from \"./Tv\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function Recommend() {\n  return (\n    <>\n      <Box paddingTop={4}>\n        <MovieRecommend />\n      </Box>\n      {/* <Box paddingTop={4}>\n        <TvRecommend />\n      </Box> */}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box, Typography, IconButton } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { VideoWithAuthor } from \"@/components/app/VideoCard\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { virtualize } from \"react-swipeable-views-utils\";\nimport clsx from \"clsx\";\nimport { useCurrentTopicQuery } from \"@/schema\";\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    },\n    bannerRoot: {\n      flex: 1,\n      overflow: \"hidden\"\n    },\n    banner: {\n      paddingRight: \"50%\"\n    },\n    bannerItem: {\n      minHeight: 200,\n      margin: theme.spacing(0, 1),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      overflow: \"hidden\"\n    }\n  })\n);\n\nfunction Topic() {\n  const [index, setIndex] = React.useState(0);\n  const classes = useStyles();\n  const { data } = useCurrentTopicQuery();\n  console.log(data);\n\n  return (\n    <div className={classes.head}>\n      <div className={classes.headItem}>\n        <Box>\n          <Box mb={3}>\n            <Typography variant=\"h6\" gutterBottom>\n              {/* 每周精选 */}\n              <Skeleton animation=\"wave\" height=\"100%\" width={160} />\n            </Typography>\n            <Typography variant=\"h5\" gutterBottom>\n              {/* 古诗词 */}\n              <Skeleton animation=\"wave\" height=\"100%\" width={40} />\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {/* 东风夜放花千树，更吹落，星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。\n            蛾儿雪柳黄金缕，笑语盈盈暗香去。众里寻他千百度，蓦然回首，那人却在，灯火阑珊处。 */}\n              <Skeleton animation=\"wave\" height=\"100%\" width={400} />\n              <Skeleton animation=\"wave\" height=\"100%\" width={100} />\n            </Typography>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box>\n              <IconButton size=\"small\" onClick={() => setIndex(index - 1)}>\n                <KeyboardArrowLeft />\n              </IconButton>\n            </Box>\n            <div className={classes.bannerRoot}>\n              <VirtualizeSwipeableViews\n                className={classes.banner}\n                index={index}\n                onChangeIndex={index => setIndex(index)}\n                enableMouseEvents\n                slideRenderer={params => {\n                  const { key } = params;\n                  // const templateIndex = ((index % 6) + 6) % 6;\n                  // console.log(mod(index, 3));\n                  return (\n                    <div key={key} className={clsx(classes.bannerItem)}>\n                      <VideoWithAuthor />\n                    </div>\n                  );\n                }}\n              />\n            </div>\n            <Box>\n              <IconButton size=\"small\" onClick={() => setIndex(index + 1)}>\n                <KeyboardArrowRight />\n              </IconButton>\n            </Box>\n          </Box>\n        </Box>\n      </div>\n      <div className={classes.headItem}>\n        <VideoWithAuthor />\n      </div>\n    </div>\n  );\n}\n\nexport default Topic;\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Recommend, Topic, Aider } from \"./modules\";\nimport { Divider } from \"@material-ui/core\";\nimport { BodyScreen, ContentScreen, AiderScreen } from \"@/layouts/PageLayout\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: \"#fff\",\n      paddingLeft: theme.spacing(8),\n      paddingRight: theme.spacing(8)\n    },\n    aider: {\n      backgroundColor: \"#fff\",\n      width: \"100%\",\n      padding: theme.spacing(2, 2),\n      borderLeft: \"1px solid\",\n      borderColor: theme.palette.divider\n    },\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    }\n  })\n);\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <BodyScreen>\n      <ContentScreen className={classes.main}>\n        <Topic />\n        <Divider />\n        <Recommend />\n      </ContentScreen>\n      <AiderScreen sticky className={classes.aider}>\n        <Aider />\n      </AiderScreen>\n    </BodyScreen>\n  );\n}\n","import * as React from \"react\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport {\n  RouteWithLayout as Route,\n  Main as MainLayout\n  // MainWithoutSidebar as SecondaryLayout,\n} from \"../layouts\";\nimport Home from \"@/views/Home\";\n\nconst MovieHome = React.lazy(() => import(\"@/views/movies/MovieHome\"));\nconst TVHome = React.lazy(() => import(\"@/views/tvs/TVHome\"));\nconst Movie = React.lazy(() => import(\"@/views/movies/Movie\"));\nconst MoviePlay = React.lazy(() => import(\"@/views/movies/MoviePlay\"));\nconst MovieUpload = React.lazy(() => import(\"@/views/movies/MovieUpload\"));\nconst TV = React.lazy(() => import(\"@/views/tvs/TV\"));\nconst Profile = React.lazy(() => import(\"@/views/users/Profile\"));\nconst Personal = React.lazy(() => import(\"@/views/users/Personal\"));\nconst Resume = React.lazy(() => import(\"@/views/users/Resume\"));\nconst Login = React.lazy(() => import(\"@/views/auth/Login\"));\nconst Completion = React.lazy(() => import(\"@/views/auth/Completion\"));\nconst NotFound = React.lazy(() => import(\"@/views/public/NotFound\"));\nconst Forbidden = React.lazy(() => import(\"@/views/public/Forbidden\"));\nconst InternalServerError = React.lazy(() =>\n  import(\"@/views/public/InternalServer\")\n);\nconst H5NotSupported = React.lazy(() =>\n  import(\"@/views/public/H5NotSupported\")\n);\nconst Test = React.lazy(() => import(\"@/views/Test\"));\n\nfunction AppRoute() {\n  const isH5 = /Android|webOS|iPhone|iPod|BlackBerry/i.test(\n    navigator.userAgent\n  );\n  if (isH5) {\n    return (\n      <Router>\n        <Switch>\n          <Route component={H5NotSupported} />\n        </Switch>\n      </Router>\n    );\n  }\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} layout={MainLayout} />\n        <Route lazy path=\"/home\" component={Home} layout={MainLayout} />\n        <Route\n          path=\"/movie-home\"\n          lazy\n          component={MovieHome}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/movie/:id\" component={Movie} layout={MainLayout} />\n        <Route\n          lazy\n          path=\"/movie-play/:id\"\n          component={MoviePlay}\n          layout={MainLayout}\n        />\n        <Route\n          lazy\n          path=\"/movie-upload\"\n          component={MovieUpload}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/tv-home\" component={TVHome} layout={MainLayout} />\n        <Route lazy path=\"/tv\" component={TV} layout={MainLayout} />\n        <Route lazy path=\"/profile\" component={Profile} layout={MainLayout} />\n        <Route lazy path=\"/personal\" component={Personal} layout={MainLayout} />\n        <Route lazy path=\"/resume\" component={Resume} />\n        <Route lazy path=\"/login\" component={Login} />\n        <Route lazy path=\"/completion\" component={Completion} />\n        <Route lazy path=\"/403\" exact component={Forbidden} />\n        <Route lazy path=\"/404\" exact component={NotFound} />\n        <Route lazy path=\"/50x\" exact component={InternalServerError} />\n        <Route lazy path=\"/test\" exact component={Test} />\n        <Route lazy component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRoute;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { SnackbarProvider, useSnackbar, OptionsObject } from \"notistack\";\n\ntype SnackbarProps = {\n  message: React.ReactNode;\n  options?: OptionsObject | undefined;\n};\n\n// add a <div> child to body under which to mount the snackbars\nconst mountPoint = document.createElement(\"div\");\ndocument.body.appendChild(mountPoint);\n\nexport const Message = {\n  success: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"success\" });\n  },\n  warning: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"warning\" });\n  },\n  info: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"info\" });\n  },\n  error: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"error\" });\n  },\n  toast: function(msg: React.ReactNode, opts?: OptionsObject | undefined) {\n    const ShowSnackbar = (props: SnackbarProps) => {\n      const { enqueueSnackbar } = useSnackbar();\n      const { message, options } = props;\n      enqueueSnackbar(message, options);\n      return null;\n    };\n    ReactDOM.render(\n      <SnackbarProvider maxSnack={3}>\n        <ShowSnackbar message={msg} options={opts} />\n      </SnackbarProvider>,\n      mountPoint\n    );\n  }\n};\n\nexport default Message;\n","import Message from \"@/components/base/Message\";\nimport * as Sentry from \"@sentry/browser\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  from,\n  split\n} from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { setContext } from \"@apollo/link-context\";\nimport { onError } from \"@apollo/link-error\";\n// import { createUploadLink } from \"apollo-upload-client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_HTTP_URL\n});\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.REACT_APP_WEBSOCKET_URL || \"\",\n  options: {\n    reconnect: true\n  }\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nconst authLink = setContext((_, { headers }) => {\n  const access_token = localStorage.getItem(\"access_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: access_token ? `Bearer ${access_token}` : \"\"\n    }\n  };\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      Message.error(message || \"服务器繁忙\");\n      Sentry.captureMessage(message);\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      );\n    });\n  }\n  if (networkError) {\n    Sentry.captureException(networkError);\n    Message.error(\"服务器繁忙\");\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\n// const uploadLink = createUploadLink({\n//   uri: process.env.REACT_APP_UPLOAD_URL\n// });\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: from([errorLink, authLink, splitLink])\n});\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { SnackbarProvider } from \"notistack\";\nimport theme from \"./theme\";\nimport AppRoute from \"./router\";\nimport { client } from \"./apollo\";\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={client}>\n          <AppRoute />\n        </ApolloProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/analytics\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n});\nfirebase.analytics();\n\nSentry.init({\n  enabled: process.env.NODE_ENV === \"production\",\n  dsn: process.env.REACT_APP_SENTRY_DSN\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import gql from \"graphql-tag\";\nimport * as ApolloReactCommon from \"@apollo/client\";\nimport * as ApolloReactHooks from \"@apollo/client\";\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: number | string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** Date custom scalar type */\n  Date: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type Bullet = {\n  __typename?: \"Bullet\";\n  id: Scalars[\"ID\"];\n  content: Scalars[\"String\"];\n  point?: Maybe<Scalars[\"Float\"]>;\n  create_at: Scalars[\"Date\"];\n  author: User;\n  medium: Medium;\n};\n\nexport type Category = {\n  __typename?: \"Category\";\n  id: Scalars[\"ID\"];\n  label: Scalars[\"String\"];\n  alias?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n  children?: Maybe<Array<Category>>;\n  parent?: Maybe<Category>;\n};\n\nexport type Character = {\n  __typename?: \"Character\";\n  name: Scalars[\"String\"];\n  avatar?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateBulletInput = {\n  content: Scalars[\"String\"];\n  point?: Maybe<Scalars[\"Float\"]>;\n  medium_id: Scalars[\"Int\"];\n};\n\nexport type CreateCategoryInput = {\n  label: Scalars[\"String\"];\n  alias?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  parent_id?: Maybe<Scalars[\"Float\"]>;\n  children?: Maybe<Array<CreateCategoryInput>>;\n};\n\nexport type CreateCharacterInput = {\n  name: Scalars[\"String\"];\n  avatar?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateFollowInput = {\n  follower_uid?: Maybe<Scalars[\"ID\"]>;\n  owner_uid: Scalars[\"ID\"];\n};\n\nexport type CreateMovieInput = {\n  title: Scalars[\"String\"];\n  sub_title?: Maybe<Scalars[\"String\"]>;\n  alias_title?: Maybe<Scalars[\"String\"]>;\n  cover: Scalars[\"String\"];\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  region?: Maybe<Scalars[\"String\"]>;\n  actors?: Maybe<Array<CreateCharacterInput>>;\n  directors?: Maybe<Array<CreateCharacterInput>>;\n  sources?: Maybe<Array<CreateMovieMediumInput>>;\n};\n\nexport type CreateMovieMediumInput = {\n  name: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  movie_id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type CreatePlaylistInput = {\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateReviewInput = {\n  content: Scalars[\"String\"];\n  author_uid?: Maybe<Scalars[\"ID\"]>;\n  type: ReviewMedium;\n  medium_id: Scalars[\"ID\"];\n};\n\nexport type CreateTagInput = {\n  label: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateTopicInput = {\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  top_movie_id?: Maybe<Scalars[\"ID\"]>;\n  top_movies_ids?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type CreateUserInput = {\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  email: Scalars[\"String\"];\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateUserWithCodeInput = {\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  email: Scalars[\"String\"];\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  code: Scalars[\"String\"];\n};\n\nexport type DeleteFollowInput = {\n  follower_uid?: Maybe<Scalars[\"ID\"]>;\n  owner_uid: Scalars[\"ID\"];\n};\n\nexport type Follow = {\n  __typename?: \"Follow\";\n  follower: User;\n  owner: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type FollowEdge = {\n  __typename?: \"FollowEdge\";\n  cursor: Scalars[\"String\"];\n  node: Follow;\n};\n\nexport type FollowPageInfo = {\n  __typename?: \"FollowPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type FollowPaginated = {\n  __typename?: \"FollowPaginated\";\n  edges?: Maybe<Array<FollowEdge>>;\n  nodes?: Maybe<Array<Follow>>;\n  pageInfo: FollowPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Medium = {\n  __typename?: \"Medium\";\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  duration?: Maybe<Scalars[\"Float\"]>;\n  preview_url?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  low_quality_url?: Maybe<Scalars[\"String\"]>;\n  medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  high_quality_url?: Maybe<Scalars[\"String\"]>;\n  super_quality_url?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n  version: Scalars[\"Float\"];\n};\n\nexport type Movie = {\n  __typename?: \"Movie\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  sub_title?: Maybe<Scalars[\"String\"]>;\n  alias_title?: Maybe<Scalars[\"String\"]>;\n  cover: Scalars[\"String\"];\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  region: Region;\n  actors?: Maybe<Array<Character>>;\n  directors?: Maybe<Array<Character>>;\n  sources: Array<MovieMedium>;\n  author: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type MovieEdge = {\n  __typename?: \"MovieEdge\";\n  cursor: Scalars[\"String\"];\n  node: Movie;\n};\n\nexport type MovieMedium = {\n  __typename?: \"MovieMedium\";\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  duration?: Maybe<Scalars[\"Float\"]>;\n  preview_url?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  low_quality_url?: Maybe<Scalars[\"String\"]>;\n  medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  high_quality_url?: Maybe<Scalars[\"String\"]>;\n  super_quality_url?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n  version: Scalars[\"Float\"];\n};\n\nexport type MoviePageInfo = {\n  __typename?: \"MoviePageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type MoviePaginated = {\n  __typename?: \"MoviePaginated\";\n  edges?: Maybe<Array<MovieEdge>>;\n  nodes?: Maybe<Array<Movie>>;\n  pageInfo: MoviePageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Mutation = {\n  __typename?: \"Mutation\";\n  create_tag: Tag;\n  add_movie_to_tag: Scalars[\"Boolean\"];\n  add_category_to_tag: Scalars[\"Boolean\"];\n  create_movie: Movie;\n  add_mediums_to_movie: Movie;\n  create_category: Category;\n  delete_category: Scalars[\"Boolean\"];\n  create_bullet: Bullet;\n  login: Scalars[\"String\"];\n  /** create user. */\n  create_user: User;\n  /** create user with verif code. */\n  create_user_with_code: User;\n  send_register_email: Scalars[\"Boolean\"];\n  update_user: User;\n  upload_file_oss: Scalars[\"String\"];\n  create_topic: Topic;\n  create_review: Review;\n  create_playlist: Playlist;\n  add_movie_to_playlist: Scalars[\"Boolean\"];\n  create_follow: Follow;\n  remove_follow: Follow;\n};\n\nexport type MutationCreate_TagArgs = {\n  tag: CreateTagInput;\n};\n\nexport type MutationAdd_Movie_To_TagArgs = {\n  tag_id: Scalars[\"Float\"];\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type MutationAdd_Category_To_TagArgs = {\n  tag_id: Scalars[\"Float\"];\n  category_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_MovieArgs = {\n  movie: CreateMovieInput;\n};\n\nexport type MutationAdd_Mediums_To_MovieArgs = {\n  movie_medium: CreateMovieMediumInput;\n  movie_id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_CategoryArgs = {\n  category: CreateCategoryInput;\n};\n\nexport type MutationDelete_CategoryArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_BulletArgs = {\n  bullet: CreateBulletInput;\n};\n\nexport type MutationLoginArgs = {\n  password: Scalars[\"String\"];\n  username: Scalars[\"String\"];\n};\n\nexport type MutationCreate_UserArgs = {\n  user: CreateUserInput;\n};\n\nexport type MutationCreate_User_With_CodeArgs = {\n  user: CreateUserWithCodeInput;\n};\n\nexport type MutationSend_Register_EmailArgs = {\n  email: Scalars[\"String\"];\n};\n\nexport type MutationUpdate_UserArgs = {\n  user: UpdateUserInput;\n};\n\nexport type MutationUpload_File_OssArgs = {\n  file: Scalars[\"Upload\"];\n};\n\nexport type MutationCreate_TopicArgs = {\n  topic: CreateTopicInput;\n};\n\nexport type MutationCreate_ReviewArgs = {\n  review: CreateReviewInput;\n};\n\nexport type MutationCreate_PlaylistArgs = {\n  playlist: CreatePlaylistInput;\n};\n\nexport type MutationAdd_Movie_To_PlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_FollowArgs = {\n  follow: CreateFollowInput;\n};\n\nexport type MutationRemove_FollowArgs = {\n  follow: DeleteFollowInput;\n};\n\nexport type PaginatedQuery = {\n  first?: Maybe<Scalars[\"Int\"]>;\n  after?: Maybe<Scalars[\"String\"]>;\n  last?: Maybe<Scalars[\"Int\"]>;\n  before?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type Playlist = {\n  __typename?: \"Playlist\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n  movies?: Maybe<Array<Movie>>;\n  movies_count?: Maybe<Scalars[\"Float\"]>;\n  author: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type PlaylistEdge = {\n  __typename?: \"PlaylistEdge\";\n  cursor: Scalars[\"String\"];\n  node: Playlist;\n};\n\nexport type PlaylistPageInfo = {\n  __typename?: \"PlaylistPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type PlaylistPaginated = {\n  __typename?: \"PlaylistPaginated\";\n  edges?: Maybe<Array<PlaylistEdge>>;\n  nodes?: Maybe<Array<Playlist>>;\n  pageInfo: PlaylistPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Query = {\n  __typename?: \"Query\";\n  movie: Movie;\n  movies_paginated: MoviePaginated;\n  me: User;\n  /** find user by uid. */\n  user: User;\n  /** all user with paginated. */\n  users_paginated: UserPaginated;\n  current_topic: Topic;\n  movie_urges: Array<Movie>;\n  movie_urges_by_movie: Array<Movie>;\n  user_urges: Array<User>;\n  reviews_paginated: ReviewPaginated;\n  playlists_paginated: PlaylistPaginated;\n  playlist: Playlist;\n  follows: Array<Follow>;\n  follows_paginated: FollowPaginated;\n  follows_total: Scalars[\"Int\"];\n  fans: Array<Follow>;\n  fans_paginated: FollowPaginated;\n  fans_total: Scalars[\"Int\"];\n  is_following: Scalars[\"Boolean\"];\n};\n\nexport type QueryMovieArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryMovies_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryUserArgs = {\n  uid: Scalars[\"String\"];\n};\n\nexport type QueryUsers_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryMovie_Urges_By_MovieArgs = {\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type QueryReviews_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n  medium_id?: Maybe<Scalars[\"ID\"]>;\n  type?: Maybe<ReviewMedium>;\n};\n\nexport type QueryPlaylists_PaginatedArgs = {\n  author_uid?: Maybe<Scalars[\"String\"]>;\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryPlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n};\n\nexport type QueryFollows_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFollows_TotalArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryFans_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFans_TotalArgs = {\n  owner_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryIs_FollowingArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n  owner_uid: Scalars[\"String\"];\n};\n\nexport enum Region {\n  Mainland = \"Mainland\",\n  America = \"America\",\n  Hongkong = \"Hongkong\",\n  Taiwan = \"Taiwan\",\n  Britain = \"Britain\",\n  India = \"India\"\n}\n\nexport type Review = {\n  __typename?: \"Review\";\n  id: Scalars[\"ID\"];\n  content: Scalars[\"String\"];\n  author: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type ReviewEdge = {\n  __typename?: \"ReviewEdge\";\n  cursor: Scalars[\"String\"];\n  node: Review;\n};\n\nexport enum ReviewMedium {\n  Movie = \"MOVIE\"\n}\n\nexport type ReviewPageInfo = {\n  __typename?: \"ReviewPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type ReviewPaginated = {\n  __typename?: \"ReviewPaginated\";\n  edges?: Maybe<Array<ReviewEdge>>;\n  nodes?: Maybe<Array<Review>>;\n  pageInfo: ReviewPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Subscription = {\n  __typename?: \"Subscription\";\n  user_created: User;\n  review_created: Review;\n};\n\nexport type SubscriptionReview_CreatedArgs = {\n  medium_id: Scalars[\"ID\"];\n  type: ReviewMedium;\n};\n\nexport type Tag = {\n  __typename?: \"Tag\";\n  id: Scalars[\"ID\"];\n  label: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  movies?: Maybe<Array<Movie>>;\n  categories?: Maybe<Array<Category>>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n};\n\nexport type Topic = {\n  __typename?: \"Topic\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  top_movie?: Maybe<Movie>;\n  top_movies?: Maybe<Array<Movie>>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type UpdateUserInput = {\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  password?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type User = {\n  __typename?: \"User\";\n  uid: Scalars[\"ID\"];\n  username: Scalars[\"String\"];\n  email: Scalars[\"String\"];\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type UserEdge = {\n  __typename?: \"UserEdge\";\n  cursor: Scalars[\"String\"];\n  node: User;\n};\n\nexport type UserPageInfo = {\n  __typename?: \"UserPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type UserPaginated = {\n  __typename?: \"UserPaginated\";\n  edges?: Maybe<Array<UserEdge>>;\n  nodes?: Maybe<Array<User>>;\n  pageInfo: UserPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type MeFragment = {\n  __typename?: \"User\";\n  uid: number | string;\n  nickname?: Maybe<string>;\n  email: string;\n};\n\nexport type LoginMutationVariables = Exact<{\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n}>;\n\nexport type LoginMutation = { __typename?: \"Mutation\"; login: string };\n\nexport type SendRegisterEmailMutationVariables = Exact<{\n  email: Scalars[\"String\"];\n}>;\n\nexport type SendRegisterEmailMutation = {\n  __typename?: \"Mutation\";\n  send_register_email: boolean;\n};\n\nexport type CreateUserWithCodeMutationVariables = Exact<{\n  user: CreateUserWithCodeInput;\n}>;\n\nexport type CreateUserWithCodeMutation = {\n  __typename?: \"Mutation\";\n  create_user_with_code: {\n    __typename?: \"User\";\n    username: string;\n    avatar?: Maybe<string>;\n  };\n};\n\nexport type CurrentTopicQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type CurrentTopicQuery = {\n  __typename?: \"Query\";\n  current_topic: {\n    __typename?: \"Topic\";\n    title: string;\n    description?: Maybe<string>;\n    top_movies?: Maybe<\n      Array<{\n        __typename?: \"Movie\";\n        description?: Maybe<string>;\n        title: string;\n        sub_title?: Maybe<string>;\n        create_at: any;\n        update_at: any;\n        cover: string;\n        posters?: Maybe<Array<string>>;\n        author: {\n          __typename?: \"User\";\n          avatar?: Maybe<string>;\n          nickname?: Maybe<string>;\n          uid: number | string;\n          username: string;\n        };\n      }>\n    >;\n    top_movie?: Maybe<{\n      __typename?: \"Movie\";\n      description?: Maybe<string>;\n      title: string;\n      sub_title?: Maybe<string>;\n      create_at: any;\n      update_at: any;\n      cover: string;\n      posters?: Maybe<Array<string>>;\n      author: {\n        __typename?: \"User\";\n        avatar?: Maybe<string>;\n        nickname?: Maybe<string>;\n        uid: number | string;\n        username: string;\n      };\n    }>;\n  };\n};\n\nexport type MovieUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MovieUrgesQuery = {\n  __typename?: \"Query\";\n  movie_urges: Array<{\n    __typename?: \"Movie\";\n    title: string;\n    sub_title?: Maybe<string>;\n    cover: string;\n    description?: Maybe<string>;\n    author: {\n      __typename?: \"User\";\n      avatar?: Maybe<string>;\n      nickname?: Maybe<string>;\n      uid: number | string;\n      username: string;\n    };\n  }>;\n};\n\nexport type UserUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type UserUrgesQuery = {\n  __typename?: \"Query\";\n  user_urges: Array<{\n    __typename?: \"User\";\n    nickname?: Maybe<string>;\n    avatar?: Maybe<string>;\n    username: string;\n    uid: number | string;\n    description?: Maybe<string>;\n  }>;\n};\n\nexport type MovieQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type MovieQuery = {\n  __typename?: \"Query\";\n  movie: {\n    __typename?: \"Movie\";\n    cover: string;\n    title: string;\n    update_at: any;\n    sub_title?: Maybe<string>;\n    id: number | string;\n    description?: Maybe<string>;\n    create_at: any;\n    alias_title?: Maybe<string>;\n    posters?: Maybe<Array<string>>;\n    region: Region;\n    actors?: Maybe<\n      Array<{\n        __typename?: \"Character\";\n        avatar?: Maybe<string>;\n        name: string;\n        description?: Maybe<string>;\n      }>\n    >;\n    author: {\n      __typename?: \"User\";\n      avatar?: Maybe<string>;\n      uid: number | string;\n      username: string;\n      nickname?: Maybe<string>;\n    };\n    directors?: Maybe<\n      Array<{\n        __typename?: \"Character\";\n        avatar?: Maybe<string>;\n        description?: Maybe<string>;\n        name: string;\n      }>\n    >;\n    sources: Array<{\n      __typename?: \"MovieMedium\";\n      url: string;\n      super_quality_url?: Maybe<string>;\n      preview_url?: Maybe<string>;\n      posters?: Maybe<Array<string>>;\n      name?: Maybe<string>;\n      medium_quality_url?: Maybe<string>;\n      low_quality_url?: Maybe<string>;\n      id: number | string;\n      high_quality_url?: Maybe<string>;\n      duration?: Maybe<number>;\n      description?: Maybe<string>;\n      alias_name?: Maybe<string>;\n      create_at: any;\n      update_at: any;\n    }>;\n  };\n};\n\nexport type MoviesPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type MoviesPaginatedQuery = {\n  __typename?: \"Query\";\n  movies_paginated: {\n    __typename?: \"MoviePaginated\";\n    totalCount: number;\n    pageInfo: {\n      __typename?: \"MoviePageInfo\";\n      hasNextPage: boolean;\n      endCursor: string;\n    };\n    edges?: Maybe<\n      Array<{\n        __typename?: \"MovieEdge\";\n        cursor: string;\n        node: {\n          __typename?: \"Movie\";\n          title: string;\n          sub_title?: Maybe<string>;\n          alias_title?: Maybe<string>;\n          cover: string;\n          description?: Maybe<string>;\n          author: {\n            __typename?: \"User\";\n            avatar?: Maybe<string>;\n            username: string;\n            nickname?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type PlaylistsPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n  author_uid?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type PlaylistsPaginatedQuery = {\n  __typename?: \"Query\";\n  playlists_paginated: {\n    __typename?: \"PlaylistPaginated\";\n    totalCount: number;\n    pageInfo: {\n      __typename?: \"PlaylistPageInfo\";\n      hasNextPage: boolean;\n      endCursor: string;\n    };\n    edges?: Maybe<\n      Array<{\n        __typename?: \"PlaylistEdge\";\n        cursor: string;\n        node: {\n          __typename?: \"Playlist\";\n          title: string;\n          description?: Maybe<string>;\n          cover?: Maybe<string>;\n          create_at: any;\n        };\n      }>\n    >;\n  };\n};\n\nexport type ReviewCreatedSubscriptionVariables = Exact<{\n  type: ReviewMedium;\n  medium_id: Scalars[\"ID\"];\n}>;\n\nexport type ReviewCreatedSubscription = {\n  __typename?: \"Subscription\";\n  review_created: {\n    __typename?: \"Review\";\n    content: string;\n    create_at: any;\n    author: {\n      __typename?: \"User\";\n      nickname?: Maybe<string>;\n      avatar?: Maybe<string>;\n    };\n  };\n};\n\nexport const MeFragmentDoc = gql`\n  fragment me on User {\n    uid\n    nickname\n    email\n  }\n`;\nexport const LoginDocument = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)\n  }\n`;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<\n  LoginMutation,\n  LoginMutationVariables\n>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      username: // value for 'username'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    LoginMutation,\n    LoginMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(\n    LoginDocument,\n    baseOptions\n  );\n}\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<\n  LoginMutation\n>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  LoginMutation,\n  LoginMutationVariables\n>;\nexport const SendRegisterEmailDocument = gql`\n  mutation sendRegisterEmail($email: String!) {\n    send_register_email(email: $email)\n  }\n`;\nexport type SendRegisterEmailMutationFn = ApolloReactCommon.MutationFunction<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\n\n/**\n * __useSendRegisterEmailMutation__\n *\n * To run a mutation, you first call `useSendRegisterEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSendRegisterEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [sendRegisterEmailMutation, { data, loading, error }] = useSendRegisterEmailMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useSendRegisterEmailMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >(SendRegisterEmailDocument, baseOptions);\n}\nexport type SendRegisterEmailMutationHookResult = ReturnType<\n  typeof useSendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationResult = ApolloReactCommon.MutationResult<\n  SendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\nexport const CreateUserWithCodeDocument = gql`\n  mutation createUserWithCode($user: CreateUserWithCodeInput!) {\n    create_user_with_code(user: $user) {\n      username\n      avatar\n    }\n  }\n`;\nexport type CreateUserWithCodeMutationFn = ApolloReactCommon.MutationFunction<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\n\n/**\n * __useCreateUserWithCodeMutation__\n *\n * To run a mutation, you first call `useCreateUserWithCodeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateUserWithCodeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createUserWithCodeMutation, { data, loading, error }] = useCreateUserWithCodeMutation({\n *   variables: {\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useCreateUserWithCodeMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >(CreateUserWithCodeDocument, baseOptions);\n}\nexport type CreateUserWithCodeMutationHookResult = ReturnType<\n  typeof useCreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationResult = ApolloReactCommon.MutationResult<\n  CreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\nexport const CurrentTopicDocument = gql`\n  query currentTopic {\n    current_topic {\n      title\n      description\n      top_movies {\n        description\n        title\n        sub_title\n        create_at\n        update_at\n        cover\n        posters\n        author {\n          avatar\n          nickname\n          uid\n          username\n        }\n      }\n      top_movie {\n        description\n        title\n        sub_title\n        create_at\n        update_at\n        cover\n        posters\n        author {\n          avatar\n          nickname\n          uid\n          username\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __useCurrentTopicQuery__\n *\n * To run a query within a React component, call `useCurrentTopicQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentTopicQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentTopicQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentTopicQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport function useCurrentTopicLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport type CurrentTopicQueryHookResult = ReturnType<\n  typeof useCurrentTopicQuery\n>;\nexport type CurrentTopicLazyQueryHookResult = ReturnType<\n  typeof useCurrentTopicLazyQuery\n>;\nexport type CurrentTopicQueryResult = ApolloReactCommon.QueryResult<\n  CurrentTopicQuery,\n  CurrentTopicQueryVariables\n>;\nexport const MovieUrgesDocument = gql`\n  query movieUrges {\n    movie_urges {\n      title\n      sub_title\n      cover\n      description\n      author {\n        avatar\n        nickname\n        uid\n        username\n      }\n    }\n  }\n`;\n\n/**\n * __useMovieUrgesQuery__\n *\n * To run a query within a React component, call `useMovieUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMovieUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<MovieUrgesQuery, MovieUrgesQueryVariables>(\n    MovieUrgesDocument,\n    baseOptions\n  );\n}\nexport function useMovieUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >(MovieUrgesDocument, baseOptions);\n}\nexport type MovieUrgesQueryHookResult = ReturnType<typeof useMovieUrgesQuery>;\nexport type MovieUrgesLazyQueryHookResult = ReturnType<\n  typeof useMovieUrgesLazyQuery\n>;\nexport type MovieUrgesQueryResult = ApolloReactCommon.QueryResult<\n  MovieUrgesQuery,\n  MovieUrgesQueryVariables\n>;\nexport const UserUrgesDocument = gql`\n  query userUrges {\n    user_urges {\n      nickname\n      avatar\n      username\n      uid\n      description\n    }\n  }\n`;\n\n/**\n * __useUserUrgesQuery__\n *\n * To run a query within a React component, call `useUserUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport function useUserUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport type UserUrgesQueryHookResult = ReturnType<typeof useUserUrgesQuery>;\nexport type UserUrgesLazyQueryHookResult = ReturnType<\n  typeof useUserUrgesLazyQuery\n>;\nexport type UserUrgesQueryResult = ApolloReactCommon.QueryResult<\n  UserUrgesQuery,\n  UserUrgesQueryVariables\n>;\nexport const MovieDocument = gql`\n  query movie($id: ID!) {\n    movie(id: $id) {\n      actors {\n        avatar\n        name\n        description\n      }\n      author {\n        avatar\n        uid\n        username\n        nickname\n      }\n      cover\n      title\n      update_at\n      sub_title\n      id\n      directors {\n        avatar\n        description\n        name\n      }\n      description\n      create_at\n      alias_title\n      posters\n      region\n      sources {\n        url\n        super_quality_url\n        preview_url\n        posters\n        name\n        medium_quality_url\n        low_quality_url\n        id\n        high_quality_url\n        duration\n        description\n        alias_name\n        create_at\n        update_at\n      }\n    }\n  }\n`;\n\n/**\n * __useMovieQuery__\n *\n * To run a query within a React component, call `useMovieQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useMovieQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieQuery,\n    MovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<MovieQuery, MovieQueryVariables>(\n    MovieDocument,\n    baseOptions\n  );\n}\nexport function useMovieLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieQuery,\n    MovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<MovieQuery, MovieQueryVariables>(\n    MovieDocument,\n    baseOptions\n  );\n}\nexport type MovieQueryHookResult = ReturnType<typeof useMovieQuery>;\nexport type MovieLazyQueryHookResult = ReturnType<typeof useMovieLazyQuery>;\nexport type MovieQueryResult = ApolloReactCommon.QueryResult<\n  MovieQuery,\n  MovieQueryVariables\n>;\nexport const MoviesPaginatedDocument = gql`\n  query moviesPaginated($query: PaginatedQuery) {\n    movies_paginated(query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          title\n          sub_title\n          alias_title\n          cover\n          description\n          author {\n            avatar\n            username\n            nickname\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __useMoviesPaginatedQuery__\n *\n * To run a query within a React component, call `useMoviesPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useMoviesPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMoviesPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useMoviesPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >(MoviesPaginatedDocument, baseOptions);\n}\nexport function useMoviesPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >(MoviesPaginatedDocument, baseOptions);\n}\nexport type MoviesPaginatedQueryHookResult = ReturnType<\n  typeof useMoviesPaginatedQuery\n>;\nexport type MoviesPaginatedLazyQueryHookResult = ReturnType<\n  typeof useMoviesPaginatedLazyQuery\n>;\nexport type MoviesPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  MoviesPaginatedQuery,\n  MoviesPaginatedQueryVariables\n>;\nexport const PlaylistsPaginatedDocument = gql`\n  query playlistsPaginated($query: PaginatedQuery, $author_uid: String) {\n    playlists_paginated(query: $query, author_uid: $author_uid) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          title\n          description\n          cover\n          create_at\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __usePlaylistsPaginatedQuery__\n *\n * To run a query within a React component, call `usePlaylistsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlaylistsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlaylistsPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *      author_uid: // value for 'author_uid'\n *   },\n * });\n */\nexport function usePlaylistsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport function usePlaylistsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport type PlaylistsPaginatedQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedQuery\n>;\nexport type PlaylistsPaginatedLazyQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedLazyQuery\n>;\nexport type PlaylistsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  PlaylistsPaginatedQuery,\n  PlaylistsPaginatedQueryVariables\n>;\nexport const ReviewCreatedDocument = gql`\n  subscription reviewCreated($type: ReviewMedium!, $medium_id: ID!) {\n    review_created(type: $type, medium_id: $medium_id) {\n      content\n      create_at\n      author {\n        nickname\n        avatar\n      }\n    }\n  }\n`;\n\n/**\n * __useReviewCreatedSubscription__\n *\n * To run a query within a React component, call `useReviewCreatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useReviewCreatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewCreatedSubscription({\n *   variables: {\n *      type: // value for 'type'\n *      medium_id: // value for 'medium_id'\n *   },\n * });\n */\nexport function useReviewCreatedSubscription(\n  baseOptions?: ApolloReactHooks.SubscriptionHookOptions<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >\n) {\n  return ApolloReactHooks.useSubscription<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >(ReviewCreatedDocument, baseOptions);\n}\nexport type ReviewCreatedSubscriptionHookResult = ReturnType<\n  typeof useReviewCreatedSubscription\n>;\nexport type ReviewCreatedSubscriptionResult = ApolloReactCommon.SubscriptionResult<\n  ReviewCreatedSubscription\n>;\n","// import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  PROFILE,\n  MOVIE_DETAIL,\n  HOME,\n  MOVIE_HOME\n} from \"@/common/constants/route.constant\";\n\nexport const useRouteHelper = () => {\n  const history = useHistory();\n\n  // go home page.\n  const gotoHome = () => {\n    history.push(`${HOME}`);\n  };\n\n  // go profile page.\n  const gotoProfile = (username: string | undefined) => {\n    history.push(`${PROFILE}/${username}`);\n  };\n\n  // go movie detail page.\n  const gotoMovie = (movie_id: number | undefined) => {\n    history.push(`${MOVIE_DETAIL}/${movie_id}`);\n  };\n\n  // go movie home page.\n  const gotoMovieHome = () => {\n    history.push(MOVIE_HOME);\n  };\n\n  return {\n    push: (path: string, state?: any) => {\n      // console.log(path, state);\n      history.push(path, state);\n    },\n    gotoHome,\n    gotoProfile,\n    gotoMovie,\n    gotoMovieHome\n  };\n};\n","// home page\nexport const HOME = \"/home\";\n\n// movie home page\nexport const MOVIE_HOME = \"/movie-home\";\n\n// movie detail page\nexport const MOVIE_DETAIL = \"/movie\";\n\n// profile page\nexport const PROFILE = \"/profile\";\n","export * from \"./router.helper\";\n","import * as React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  makeStyles,\n  Box,\n  StandardProps\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    duration: {\n      color: \"#fff\",\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n      borderRadius: theme.shape.borderRadius,\n      width: 60,\n      height: 24,\n      fontSize: 12\n    }\n  })\n);\n\ninterface DurationProps extends StandardProps<HTMLElement, \"root\"> {\n  duration: number;\n  unit?: \"ms\" | \"s\";\n  classes?: any;\n}\n\nfunction Duration(props: DurationProps) {\n  const classes = useStyles();\n  let { duration, unit } = props;\n  if (unit === \"s\") {\n    duration = duration * 1000;\n  }\n\n  // 转换成毫秒\n  const hh = moment.duration(duration, \"ms\").hours() + \"\";\n  const mm = moment.duration(duration, \"ms\").minutes() + \"\";\n  const ss = moment.duration(duration, \"ms\").seconds() + \"\";\n  const format =\n    hh.padStart(2, \"0\") + \":\" + mm.padStart(2, \"0\") + \":\" + ss.padStart(2, \"0\");\n\n  return (\n    <Box\n      className={clsx(classes.duration, props.classes.root, props.className)}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      {format}\n    </Box>\n  );\n}\n\nDuration.defaultProps = {\n  unit: \"ms\"\n} as Partial<DurationProps>;\n\nexport default Duration;\n","import * as React from \"react\";\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { VideoWithAuthorProps } from \"./video\";\nimport Duration from \"../Duration\";\nimport {\n  DEFULAT_MOVIE_COVER,\n  DEFAULT_USER_AVATAR\n} from \"@/common/constants/default.constant\";\nimport moment from \"moment\";\nimport { useRouteHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    poster: {\n      position: \"relative\"\n    },\n    avatar: {\n      width: 56,\n      height: 56,\n      border: \"3px solid #fff\",\n      position: \"absolute\",\n      bottom: -28,\n      right: 10,\n      [theme.breakpoints.down(\"md\")]: {\n        width: 40,\n        height: 40,\n        bottom: -20,\n        right: 8\n      }\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const VideoWithAuthor: React.FC<VideoWithAuthorProps> = (\n  props: VideoWithAuthorProps\n) => {\n  const RouterHelper = useRouteHelper();\n  const classes = useStyles();\n\n  const goMovie = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoMovie(props?.id);\n  };\n\n  const goProfile = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoProfile(props?.author?.username);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={goMovie}>\n      <div className={classes.poster}>\n        <Image src={DEFULAT_MOVIE_COVER || props.cover} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n        <Avatar\n          onClick={goProfile}\n          className={classes.avatar}\n          src={(props.author && props.author.avatar) || DEFAULT_USER_AVATAR}\n        ></Avatar>\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {props.author && (props.author.nickname || props.author.username)}\n        </Typography>\n        <Typography variant=\"subtitle1\" noWrap>\n          {props.title}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数：TODO\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {moment(props.create_at).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nVideoWithAuthor.defaultProps = {\n  title: \"视频标题\",\n  subtitle: \"视频副标题\",\n  create_at: new Date(),\n  duration: 3242341,\n  author: {\n    username: \"sma2lbao\",\n    nickname: \"昵称\",\n    avatar: \"\"\n  }\n} as Partial<VideoWithAuthorProps>;\n\nexport default VideoWithAuthor;\n","import * as React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport Duration from \"@/components/app/Duration\";\n// import moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    poster: {\n      position: \"relative\"\n    },\n    duration: {\n      position: \"absolute\",\n      bottom: 10,\n      left: 10\n    }\n  })\n);\n\nexport default function VideoNormal() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <div className={classes.poster}>\n        <Image\n          aspectRatio={16 / 9}\n          src=\"https://p.ssl.qhimg.com/dmfd/400_300_/t0120b2f23b554b8402.jpg\"\n        />\n        <Duration duration={223888} classes={{ root: classes.duration }} />\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"subtitle1\" noWrap>\n          title\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数 29.1k\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            2019-12-12\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","export { default as VideoWithAuthor } from \"./VideoWithAuthor\";\nexport { default as VideoNormal } from \"./VideoNormal\";\n"],"sourceRoot":""}