{"version":3,"sources":["views/users/Profile/modules/Top/index.tsx","views/users/Profile/modules/Videos/index.tsx","views/users/Profile/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","content","Top","classes","Box","className","display","p","alignItems","Avatar","ml","Typography","Button","variant","color","Videos","GridList","cellHeight","cols","GridListTile","rows","Profile","React","tab","setTab","Divider","Tabs","value","onChange","e","Tab","label"],"mappings":"+KAWMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,GACNC,QAAS,QAIE,SAASC,IACtB,IAAMC,EAAUP,IAEhB,OACE,gBAACQ,EAAA,EAAD,CAAKC,UAAWF,EAAQH,MACtB,gBAACI,EAAA,EAAD,CAAKE,QAAQ,OAAOC,EAAG,EAAGC,WAAW,UACnC,gBAACC,EAAA,EAAD,UACA,gBAACL,EAAA,EAAD,CAAKM,GAAI,GACP,gBAACC,EAAA,EAAD,iBACA,gBAACA,EAAA,EAAD,mBAEF,gBAACC,EAAA,EAAD,sBAEF,gBAACR,EAAA,EAAD,CAAKC,UAAWF,EAAQF,SACtB,gBAACU,EAAA,EAAD,CAAYE,QAAQ,aAApB,sFACA,gBAACF,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,iBAAlC,wjB,6DC7BO,SAASC,IACtB,OACE,gBAACX,EAAA,EAAD,KACE,gBAACY,EAAA,EAAD,CAAUC,WAAW,OAAOC,KAAM,GAChC,gBAACC,EAAA,EAAD,CAAcD,KAAM,EAAGE,KAAM,GAC3B,gBAAC,IAAD,OAEF,gBAACD,EAAA,EAAD,CAAcD,KAAM,EAAGE,KAAM,GAC3B,gBAAC,IAAD,OAEF,gBAACD,EAAA,EAAD,CAAcD,KAAM,EAAGE,KAAM,GAC3B,gBAAC,IAAD,OAEF,gBAACD,EAAA,EAAD,CAAcD,KAAM,EAAGE,KAAM,GAC3B,gBAAC,IAAD,OAEF,gBAACD,EAAA,EAAD,CAAcD,KAAM,EAAGE,KAAM,GAC3B,gBAAC,IAAD,S,aCZK,SAASC,IAAU,MAEVC,WAAe,GAFL,mBAEzBC,EAFyB,KAEpBC,EAFoB,KAIhC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,gBAACtB,EAAD,MACA,gBAACuB,EAAA,EAAD,MACA,2BACE,gBAACC,EAAA,EAAD,CAAMC,MAAOJ,EAAKK,SAAU,SAACC,EAAGF,GAAJ,OAAcH,EAAOG,KAC/C,gBAACG,EAAA,EAAD,CAAKC,MAAM,iBACX,gBAACD,EAAA,EAAD,CAAKC,MAAM,iBACX,gBAACD,EAAA,EAAD,CAAKC,MAAM,kBAEb,2BAAc,IAARR,GAAa,gBAACR,EAAD,U","file":"static/js/22.ae9526e5.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Avatar,\n  Typography,\n  Button,\n  Theme,\n  createStyles,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    content: {}\n  })\n);\n\nexport default function Top() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box display=\"flex\" p={2} alignItems=\"center\">\n        <Avatar>S</Avatar>\n        <Box ml={1}>\n          <Typography>Sma2lBao</Typography>\n          <Typography>ShengZhen</Typography>\n        </Box>\n        <Button>订阅</Button>\n      </Box>\n      <Box className={classes.content}>\n        <Typography variant=\"subtitle2\">江城子·乙卯正月二十日夜记梦</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。\n          夜来幽梦忽还乡，小轩窗，正梳妆。相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。(肠断\n          一作：断肠)\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport { Box, GridList, GridListTile } from \"@material-ui/core\";\nimport { MediaNormal } from \"@/components/app/MediaCard\";\n\nexport default function Videos() {\n  return (\n    <Box>\n      <GridList cellHeight=\"auto\" cols={4}>\n        <GridListTile cols={1} rows={1}>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile cols={1} rows={1}>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile cols={1} rows={1}>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile cols={1} rows={1}>\n          <MediaNormal />\n        </GridListTile>\n        <GridListTile cols={1} rows={1}>\n          <MediaNormal />\n        </GridListTile>\n      </GridList>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport Top from \"./modules/Top\";\n// import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Divider } from \"@material-ui/core\";\nimport { Videos } from \"./modules\";\nimport { BodyScreen, ContentScreen, AiderScreen } from \"@/layouts/PageLayout\";\n\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\n\nexport default function Profile() {\n  // const classes = useStyles();\n  const [tab, setTab] = React.useState(0);\n\n  return (\n    <BodyScreen>\n      <AiderScreen></AiderScreen>\n      <ContentScreen>\n        <Top />\n        <Divider />\n        <div>\n          <Tabs value={tab} onChange={(e, value) => setTab(value)}>\n            <Tab label=\"视频\"></Tab>\n            <Tab label=\"列表\"></Tab>\n            <Tab label=\"社区\"></Tab>\n          </Tabs>\n          <div>{tab === 0 && <Videos />}</div>\n        </div>\n      </ContentScreen>\n    </BodyScreen>\n  );\n}\n"],"sourceRoot":""}