{"version":3,"sources":["layouts/PageLayout/modules/AiderScreen.tsx","layouts/PageLayout/modules/BodyScreen.tsx","layouts/PageLayout/modules/ContentScreen.tsx","layouts/PageLayout/modules/FullScreen.tsx","layouts/PageLayout/index.tsx","theme/overrides/index.ts","theme/overrides/MuiTabs.ts","theme/overrides/MuiTab.ts","theme/custom/index.ts","theme/custom/layout.ts","theme/index.ts","theme/palette.ts","theme/typography.ts","layouts/Main/modules/Sidebar/index.tsx","layouts/Main/modules/Topbar/components/Search.tsx","layouts/Main/modules/Topbar/components/Account.tsx","layouts/Main/modules/Topbar/components/Notice.tsx","layouts/Main/modules/Topbar/index.tsx","layouts/Main/index.tsx","layouts/RouteWithLayout/index.tsx","views/Home/modules/Aider/index.tsx","views/Home/modules/Recommend/Movie.tsx","views/Home/modules/Recommend/index.tsx","views/Home/modules/Topic/index.tsx","views/Home/index.tsx","router/index.tsx","components/base/Message/index.tsx","graphql/index.ts","App.tsx","serviceWorker.ts","index.tsx","hooks/router.helper.ts","common/constants/route.constant.ts","hooks/index.ts","common/constants/default.constant.ts","schema.tsx","components/base/Image/index.tsx","components/app/Duration/index.tsx","components/app/MediaCard/MediaNormal.tsx","components/app/MediaCard/MediaOwn.tsx","components/app/MediaCard/MediaPlain.tsx","components/app/MediaCard/index.ts"],"names":["useStyles","makeStyles","theme","createStyles","container","maxWidth","flex","agent","props","keys","Object","mixins","toolbar","top_normal","height","minHeight","top","style","position","overflow","maxHeight","forEach","key","entity","top_current","assign","root","AiderScreen","classes","sticky","className","clsx","children","display","margin","BodyScreen","ContentScreen","width","FullScreen","MuiTabs","MuiTab","layout","size","parent","createMuiTheme","palette","tertiary","main","overrides","typography","custom","flexShrink","flexDirection","alignItems","justifyContent","child","padding","spacing","menus","icon","Home","label","value","path","HourglassEmpty","disabled","Movie","Person","Sidebar","closeSidebarHandler","rest","history","useHistory","React","parentSelected","setParentSelected","childMenus","currParentMenu","find","menu","length","childSelected","setChildSelected","push","currentChildMenu","Drawer","onClose","map","index","IconButton","color","onClick","Skeleton","variant","animation","active","Typography","gutterBottom","search","borderRadius","shape","backgroundColor","fade","common","white","pointerEvents","input","paddingRight","transition","transitions","create","Search","InputBase","placeholder","inputProps","Account","anchorEl","setAnchorEl","_close","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","id","keepMounted","open","Boolean","MenuItem","Notice","Mail","appBar","zIndex","drawer","boxShadow","shadows","marginLeft","Topbar","RouterHelper","useRouterHelper","AppBar","Toolbar","Box","Icon","fontSize","toggleSidebar","Menu","gotoMovieUpload","AddCircle","Divider","shiftMain","easing","sharp","duration","leavingScreen","Main","hideSidebar","isDesktop","useMediaQuery","openSidebar","setOpenSidebar","paper","RouteWithLayout","Layout","Component","component","Loading","loading","lazy","render","matchProps","fallback","title","Aider","data","useUserUrgesQuery","users","user_urges","List","user","i","ListItem","gotoProfile","username","ListItemAvatar","Avatar","src","avatar","DEFAULT_USER_AVATAR","ListItemText","nickname","ListItemSecondaryAction","Button","MovieRecommend","useMovieUrgesQuery","movies","movie_urges","paddingY","Link","gotoMovieHome","GridList","cellHeight","cols","movie","Grow","in","timeout","GridListTile","Recommend","paddingTop","VirtualizeSwipeableViews","virtualize","SwipeableViews","head","headItem","bannerRoot","banner","bannerItem","Topic","setIndex","useCurrentTopicQuery","console","log","mb","KeyboardArrowLeft","onChangeIndex","enableMouseEvents","slideRenderer","params","KeyboardArrowRight","paddingLeft","aider","borderLeft","borderColor","divider","MovieHome","TVHome","MoviePlay","MovieUpload","TV","Profile","Personal","Resume","Login","Completion","NotFound","Forbidden","InternalServerError","H5NotSupported","Test","AppRoute","test","navigator","userAgent","exact","MainLayout","mountPoint","document","createElement","body","appendChild","Message","success","msg","this","toast","warning","info","error","opts","ShowSnackbar","enqueueSnackbar","useSnackbar","message","options","ReactDOM","maxSnack","httpLink","HttpLink","uri","process","wsLink","WebSocketLink","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","authLink","setContext","_","headers","access_token","localStorage","getItem","authorization","errorLink","onError","graphQLErrors","networkError","locations","Sentry","client","ApolloClient","cache","InMemoryCache","link","from","App","ThemeProvider","CssBaseline","ApolloProvider","window","location","hostname","match","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","enabled","dsn","getElementById","serviceWorker","ready","then","registration","unregister","state","gotoHome","gotoMovie","movie_id","gotoMoviePlay","DEFULAT_MOVIE_COVER","DEFAULT_PROFILE_COVER","Region","ReviewMedium","gql","AuthorFragmentDoc","LoginDocument","useLoginMutation","baseOptions","ApolloReactHooks","SendRegisterEmailDocument","useSendRegisterEmailMutation","CreateUserWithCodeDocument","useCreateUserWithCodeMutation","PlatformAuthWayDocument","usePlatformAuthWayQuery","CurrentTopicDocument","MovieUrgesDocument","UserUrgesDocument","MovieDocument","useMovieQuery","MoviesPaginatedDocument","useMoviesPaginatedQuery","PlaylistsPaginatedDocument","usePlaylistsPaginatedQuery","ImageStatus","aspect","aspectRatio","image","left","objectFit","Image","alt","status","setStatus","_loadImage","Success","_loadImageFail","Failuare","onLoad","Duration","unit","hh","moment","hours","mm","minutes","ss","seconds","format","padStart","defaultProps","wrap","cover","border","bottom","right","breakpoints","down","MediaNormal","e","stopPropagation","author","noWrap","create_at","subtitle","Date","MediaOwn","MediaPlain"],"mappings":"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","file":"static/js/main.c08a318f.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { AiderScreenLayoutProps } from \"../layout.d\";\nimport { CreateCSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      maxWidth: 400,\n      flex: 1\n    },\n    agent: (props: AiderScreenLayoutProps) => {\n      const keys = Object.keys(theme.mixins.toolbar);\n      const height_normal =\n        theme.mixins.toolbar?.height || theme.mixins.toolbar?.minHeight || 0;\n      const top_normal = +height_normal + (props?.top || 0);\n      const style: CreateCSSProperties<AiderScreenLayoutProps> = {\n        position: \"sticky\",\n        top: top_normal,\n        overflow: \"auto\",\n        maxHeight: `calc(100vh - ${top_normal}px)`\n      };\n      keys.forEach(key => {\n        const entity: any = theme.mixins.toolbar[key];\n        if (\n          typeof entity === \"object\" &&\n          (entity?.height || entity?.minHeight)\n        ) {\n          const height_current = entity?.height || entity?.minHeight;\n          const top_current = +height_current + (props?.top || 0);\n          Object.assign(style, {\n            [key]: {\n              top: top_current,\n              maxHeight: `calc(100vh - ${top_current}px)`\n            }\n          });\n        }\n      });\n      return style;\n    },\n    root: {}\n  })\n);\n\nexport default function AiderScreen(props: AiderScreenLayoutProps) {\n  const classes = useStyles(props);\n  const { sticky } = props;\n  if (sticky) {\n    return (\n      <div className={clsx(classes.container)}>\n        <div className={clsx(classes.agent)}>\n          {/* <div className={clsx(classes.wrap)}>\n            <div className={clsx(classes.toolbar)}></div>\n          </div> */}\n          <div className={clsx(classes.root, props.className)}>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={clsx(classes.container, props.className)}>\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { BodyScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1600,\n      display: \"flex\",\n      margin: \"0 auto\"\n    }\n  })\n);\n\nexport default function BodyScreen(props: BodyScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { ContentScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1200,\n      flex: 3\n    }\n  })\n);\n\nexport default function ContentScreen(props: ContentScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={Object.assign({}, props.width ? { width: props.width } : {})}\n      className={clsx(classes.root, props.className)}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { FullScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    }\n  })\n);\n\nexport default function FullScreen(props: FullScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\n\ninterface PageLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function PageLayout(props: PageLayoutProps) {\n  return <div>{props.children}</div>;\n}\n\nexport { FullScreen, BodyScreen, ContentScreen, AiderScreen } from \"./modules\";\n","import MuiTabs from \"./MuiTabs\";\nimport MuiTab from \"./MuiTab\";\n\nexport default {\n  MuiTabs,\n  MuiTab\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","import layout, { LayoutOptions } from \"./layout\";\n\nexport interface customOption {\n  layout: LayoutOptions;\n}\n\nexport default {\n  layout\n};\n","export interface LayoutOptions {\n  size: {\n    parent: {\n      width: React.CSSProperties[\"width\"];\n    };\n  };\n}\n\nexport default {\n  size: {\n    parent: {\n      width: 80\n    }\n  }\n} as Partial<LayoutOptions>;\n","import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n// import * as Colors from '@material-ui/core/colors'\nimport overrides from \"./overrides\";\nimport typography from \"./typography\";\nimport palette from \"./palette\";\nimport custom, { customOption } from \"./custom\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    custom?: customOption;\n  }\n}\n\nconst theme = createMuiTheme(\n  {\n    palette,\n    overrides,\n    typography\n  },\n  {\n    custom\n  }\n);\n\nexport default theme;\n","import {\n  PaletteOptions,\n  PaletteColorOptions\n} from \"@material-ui/core/styles/createPalette\";\n\nexport default {\n  tertiary: {\n    main: \"#ccc\"\n  } as Partial<PaletteColorOptions>\n} as Partial<PaletteOptions>;\n","export default {};\n","import * as React from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  // Icon,\n  Typography\n  // Divider,\n} from \"@material-ui/core\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { DrawerProps } from \"@material-ui/core/Drawer\";\nimport { Home, Movie, Person, HourglassEmpty } from \"@material-ui/icons\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router\";\n\ntype CloseSidebarFunc = (...args: any[]) => void;\n\ninterface SidebarProps extends DrawerProps {\n  closeSidebarHandler?: CloseSidebarFunc;\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    toolbar: theme.mixins.toolbar,\n    root: {\n      display: \"flex\"\n    },\n    parent: {\n      width: theme.custom?.layout.size.parent.width,\n      flexShrink: 0,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    child: {\n      flex: 1,\n      overflow: \"hidden\",\n      padding: theme.spacing(2, 1)\n    }\n  });\n});\n\nconst menus = [\n  {\n    icon: <Home />,\n    label: \"Home\",\n    value: \"home\",\n    path: \"\",\n    children: [\n      {\n        icon: <HourglassEmpty />,\n        label: \"Home\",\n        value: \"home\",\n        path: \"/home\"\n      },\n      {\n        icon: <HourglassEmpty />,\n        label: \"History Topics\",\n        value: \"topic\",\n        path: \"/topics\",\n        disabled: true\n      }\n    ]\n  },\n  {\n    icon: <Movie />,\n    label: \"Movie\",\n    value: \"movie\",\n    path: \"/movie-home\",\n    children: []\n  },\n  {\n    icon: <Person />,\n    label: \"My\",\n    value: \"user\",\n    path: \"\",\n    children: [\n      {\n        icon: <HourglassEmpty />,\n        label: \"My Homepage\",\n        value: \"personal\",\n        path: \"/personal\"\n      },\n      {\n        icon: <HourglassEmpty />,\n        label: \"Setting\",\n        value: \"setting\",\n        path: \"/setting\",\n        disabled: true\n      }\n    ]\n  }\n];\n\nexport default function Sidebar(props: SidebarProps) {\n  const { closeSidebarHandler, ...rest } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [parentSelected, setParentSelected] = React.useState(\"home\");\n  const childMenus = React.useMemo(() => {\n    const currParentMenu = menus.find(menu => menu.value === parentSelected);\n    const currChildMenu = currParentMenu?.children || [];\n    return currChildMenu;\n  }, [parentSelected]);\n\n  const [childSelected, setChildSelected] = React.useState(() => {\n    return childMenus.length ? childMenus[0].value : \"\";\n  });\n  React.useEffect(() => {\n    const currParentMenu = menus.find(menu => menu.value === parentSelected);\n    if (currParentMenu && currParentMenu.path) {\n      history.push(currParentMenu.path);\n    } else if (childMenus.length && childSelected) {\n      const currentChildMenu = childMenus.find(\n        child => child.value === childSelected\n      );\n      if (currentChildMenu?.path) {\n        history.push(currentChildMenu.path);\n      }\n    }\n  }, [parentSelected, childSelected, history, childMenus]);\n\n  return (\n    <Drawer {...rest} onClose={closeSidebarHandler}>\n      <div className={classes.toolbar}></div>\n      <div className={classes.root}>\n        <div className={classes.parent}>\n          {menus.map((menu, index) => (\n            <div key={index}>\n              <IconButton\n                color={parentSelected === menu.value ? \"primary\" : \"default\"}\n                onClick={() => setParentSelected(menu.value)}\n              >\n                <Skeleton\n                  width=\"1em\"\n                  height=\"1em\"\n                  variant=\"circle\"\n                  animation=\"wave\"\n                />\n                {/* <Icon>{menu.icon}</Icon> */}\n              </IconButton>\n            </div>\n          ))}\n        </div>\n        <div className={classes.child}>\n          {childMenus.map((child, index) => {\n            return (\n              <div\n                key={index}\n                onClick={() => setChildSelected(child.value)}\n                className={clsx({ active: child.value === childSelected })}\n              >\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {/* {child.label} */}\n                  <Skeleton\n                    width=\"70%\"\n                    height=\"100%\"\n                    animation=\"wave\"\n                  ></Skeleton>\n                </Typography>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div onClick={closeSidebarHandler}>close menu</div>\n    </Drawer>\n  );\n}\n","import * as React from \"react\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport { Theme, InputBase } from \"@material-ui/core\";\nimport { createStyles, makeStyles, fade } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    search: {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      margin: theme.spacing(0, 1)\n    },\n    icon: {\n      pointerEvents: \"none\",\n      margin: theme.spacing(0, 1)\n    },\n    input: {\n      color: \"inherit\",\n      paddingRight: theme.spacing(1),\n      transition: theme.transitions.create(\"width\"),\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  });\n});\n\nexport default function Search() {\n  const classes = useStyles();\n  return (\n    <div className={classes.search}>\n      <SearchIcon className={classes.icon} />\n      <InputBase\n        classes={{ input: classes.input }}\n        placeholder=\"搜索\"\n        inputProps={{ \"aria-label\": \"Search\" }}\n      />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { AccountCircle } from \"@material-ui/icons\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\n\nexport default function Account() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  function _close() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <>\n      <IconButton\n        aria-controls=\"account-menu\"\n        aria-haspopup=\"true\"\n        onClick={event => {\n          setAnchorEl(event.currentTarget);\n        }}\n        color=\"inherit\"\n      >\n        <AccountCircle />\n      </IconButton>\n      <Menu\n        id=\"account-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={_close}\n      >\n        <MenuItem onClick={_close}>Resume</MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Mail } from \"@material-ui/icons\";\n\nexport default function Notice() {\n  return (\n    <IconButton color=\"inherit\">\n      <Mail />\n    </IconButton>\n  );\n}\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  // Typography,\n  Box,\n  Divider,\n  IconButton,\n  Icon\n} from \"@material-ui/core\";\nimport { Menu, AddCircle } from \"@material-ui/icons\";\nimport Search from \"./components/Search\";\nimport Account from \"./components/Account\";\nimport Notice from \"./components/Notice\";\nimport clsx from \"clsx\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      boxShadow: theme.shadows[0]\n    },\n    icon: {\n      marginLeft: theme.spacing(2)\n    },\n    toolbar: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    search: {\n      margin: theme.spacing(0, 1)\n    }\n  });\n});\n\ntype ToggleidebarFunc = (...args: any[]) => void;\n\ninterface TopbarProps {\n  toggleSidebar?: ToggleidebarFunc;\n}\n\nexport default function Topbar(props: TopbarProps) {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  return (\n    <>\n      <AppBar color=\"inherit\" position=\"fixed\" className={classes.appBar}>\n        <Toolbar classes={{ root: classes.toolbar }}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <div>\n              <Icon\n                fontSize=\"large\"\n                className={clsx(\"iconfont icon-logo\")}\n              ></Icon>\n            </div>\n            <IconButton\n              size=\"small\"\n              onClick={props.toggleSidebar}\n              className={classes.icon}\n            >\n              <Menu fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              onClick={RouterHelper.gotoMovieUpload}\n              size=\"small\"\n              className={classes.icon}\n            >\n              <AddCircle fontSize=\"small\" />\n            </IconButton>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Search />\n            <Notice />\n            <Account />\n          </Box>\n        </Toolbar>\n        <Divider />\n      </AppBar>\n      <Toolbar></Toolbar>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  makeStyles,\n  createStyles,\n  Theme\n  // useTheme\n} from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { Sidebar, Topbar } from \"./modules\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      backgroundColor: \"#f5f5f5\",\n      minHeight: \"100vh\"\n    },\n    drawer: {\n      width: 290\n    },\n    shiftMain: {\n      marginLeft: 290\n    },\n    main: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  })\n);\n\ninterface MainProps {\n  children?: React.ReactNode;\n  hideSidebar?: boolean;\n}\n\nconst Main: React.FC<MainProps> = (props: MainProps) => {\n  const { children, hideSidebar } = props;\n  const classes = useStyles();\n  // const theme = useTheme();\n  // const isDesktop = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const isDesktop = useMediaQuery(\"(min-width: 1600px)\");\n  const [openSidebar, setOpenSidebar] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Topbar toggleSidebar={() => setOpenSidebar(!openSidebar)} />\n      <div>\n        {!hideSidebar && (\n          <Sidebar\n            classes={{ paper: classes.drawer }}\n            open={openSidebar}\n            variant={isDesktop ? \"persistent\" : \"temporary\"}\n            closeSidebarHandler={() => setOpenSidebar(false)}\n          />\n        )}\n        <main\n          className={clsx(classes.main, {\n            [classes.shiftMain]: openSidebar && isDesktop\n          })}\n        >\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport const MainWithoutSidebar: React.FC = props => {\n  return <Main hideSidebar>{props.children}</Main>;\n};\n\nexport default Main;\n","import * as React from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\n\ninterface IProps extends RouteProps {\n  layout?: any;\n  component: any;\n  lazy?: boolean;\n  loading?: any;\n}\n\nexport default function RouteWithLayout(props: IProps) {\n  const {\n    layout: Layout,\n    component: Component,\n    loading: Loading,\n    lazy,\n    ...rest\n  } = props;\n\n  return Layout ? (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          {lazy ? (\n            <React.Suspense\n              fallback={Loading ? <Loading /> : <div>loading</div>}\n            >\n              <Component {...matchProps} />\n            </React.Suspense>\n          ) : (\n            <Component {...matchProps} />\n          )}\n        </Layout>\n      )}\n    />\n  ) : (\n    <Route\n      {...rest}\n      render={matchProps => {\n        if (lazy) {\n          return (\n            <React.Suspense\n              fallback={Loading ? <Loading /> : <div>loading</div>}\n            >\n              <Component {...matchProps} />\n            </React.Suspense>\n          );\n        } else {\n          return <Component {...matchProps} />;\n        }\n      }}\n    />\n  );\n}\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Avatar,\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useUserUrgesQuery } from \"@/schema\";\nimport { DEFAULT_USER_AVATAR } from \"@/common/constants/default.constant\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    title: {\n      padding: theme.spacing(1, 2)\n    }\n  })\n);\n\nexport default function Aider() {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const { data } = useUserUrgesQuery();\n  const users = data?.user_urges;\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography className={classes.title} variant=\"h6\">\n          贡献榜\n        </Typography>\n        <List>\n          {users &&\n            users.map((user, i) => {\n              return (\n                <ListItem\n                  key={i}\n                  onClick={() => RouterHelper.gotoProfile(user?.username)}\n                >\n                  <ListItemAvatar>\n                    <Avatar src={user?.avatar || DEFAULT_USER_AVATAR}></Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography>{user.nickname || \"江湖客\"}</Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    <Button>\n                      <Typography>关注</Typography>\n                    </Button>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n        </List>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Typography, Box, Link, Grow } from \"@material-ui/core\";\nimport { MediaNormal } from \"@/components/app/MediaCard\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\n// import { Skeleton } from \"@material-ui/lab\";\n// import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useMovieUrgesQuery } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\n\nexport default function MovieRecommend() {\n  const RouterHelper = useRouterHelper();\n  const { data } = useMovieUrgesQuery();\n  const movies = data?.movie_urges;\n\n  return (\n    <Box padding={0}>\n      <Box\n        paddingY={1}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Typography component=\"span\" variant=\"h6\">\n          电影推荐\n        </Typography>\n        <Link\n          onClick={RouterHelper.gotoMovieHome}\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          更多\n        </Link>\n      </Box>\n\n      {movies && (\n        <GridList cellHeight=\"auto\" cols={4}>\n          {movies.map((movie: any, index: number) => {\n            return (\n              <Grow key={index} in timeout={index * 800}>\n                <GridListTile cols={movie.cols || 1}>\n                  <MediaNormal key={index} {...movie} />\n                </GridListTile>\n              </Grow>\n            );\n          })}\n        </GridList>\n      )}\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport MovieRecommend from \"./Movie\";\n// import TvRecommend from \"./Tv\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function Recommend() {\n  return (\n    <>\n      <Box paddingTop={4}>\n        <MovieRecommend />\n      </Box>\n      {/* <Box paddingTop={4}>\n        <TvRecommend />\n      </Box> */}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box, Typography, IconButton } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { MediaNormal } from \"@/components/app/MediaCard\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { virtualize } from \"react-swipeable-views-utils\";\nimport clsx from \"clsx\";\nimport { useCurrentTopicQuery } from \"@/schema\";\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    },\n    bannerRoot: {\n      flex: 1,\n      overflow: \"hidden\"\n    },\n    banner: {\n      paddingRight: \"50%\"\n    },\n    bannerItem: {\n      minHeight: 200,\n      margin: theme.spacing(0, 0.25),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      overflow: \"hidden\"\n    }\n  })\n);\n\nfunction Topic() {\n  const [index, setIndex] = React.useState(0);\n  const classes = useStyles();\n  const { data } = useCurrentTopicQuery();\n  console.log(data);\n\n  return (\n    <div className={classes.head}>\n      <div className={classes.headItem}>\n        <Box>\n          <Box mb={3}>\n            <Typography variant=\"h6\" gutterBottom>\n              {/* 每周精选 */}\n              <Skeleton animation=\"wave\" height=\"100%\" width={160} />\n            </Typography>\n            <Typography variant=\"h5\" gutterBottom>\n              {/* 古诗词 */}\n              <Skeleton animation=\"wave\" height=\"100%\" width={40} />\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {/* 东风夜放花千树，更吹落，星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。\n            蛾儿雪柳黄金缕，笑语盈盈暗香去。众里寻他千百度，蓦然回首，那人却在，灯火阑珊处。 */}\n              <Skeleton animation=\"wave\" height=\"100%\" width={400} />\n              <Skeleton animation=\"wave\" height=\"100%\" width={100} />\n            </Typography>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box>\n              <IconButton size=\"small\" onClick={() => setIndex(index - 1)}>\n                <KeyboardArrowLeft />\n              </IconButton>\n            </Box>\n            <div className={classes.bannerRoot}>\n              <VirtualizeSwipeableViews\n                className={classes.banner}\n                index={index}\n                onChangeIndex={index => setIndex(index)}\n                enableMouseEvents\n                slideRenderer={params => {\n                  const { key } = params;\n                  // const templateIndex = ((index % 6) + 6) % 6;\n                  // console.log(mod(index, 3));\n                  return (\n                    <div key={key} className={clsx(classes.bannerItem)}>\n                      <MediaNormal />\n                    </div>\n                  );\n                }}\n              />\n            </div>\n            <Box>\n              <IconButton size=\"small\" onClick={() => setIndex(index + 1)}>\n                <KeyboardArrowRight />\n              </IconButton>\n            </Box>\n          </Box>\n        </Box>\n      </div>\n      <div className={classes.headItem}>\n        <MediaNormal />\n      </div>\n    </div>\n  );\n}\n\nexport default Topic;\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Recommend, Topic, Aider } from \"./modules\";\nimport { Divider } from \"@material-ui/core\";\nimport { BodyScreen, ContentScreen, AiderScreen } from \"@/layouts/PageLayout\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: \"#fff\",\n      paddingLeft: theme.spacing(8),\n      paddingRight: theme.spacing(8)\n    },\n    aider: {\n      backgroundColor: \"#fff\",\n      width: \"100%\",\n      padding: theme.spacing(2, 2),\n      borderLeft: \"1px solid\",\n      borderColor: theme.palette.divider\n    },\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    }\n  })\n);\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <BodyScreen>\n      <ContentScreen className={classes.main}>\n        <Topic />\n        <Divider />\n        <Recommend />\n      </ContentScreen>\n      <AiderScreen sticky className={classes.aider}>\n        <Aider />\n      </AiderScreen>\n    </BodyScreen>\n  );\n}\n","import * as React from \"react\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport {\n  RouteWithLayout as Route,\n  Main as MainLayout\n  // MainWithoutSidebar as SecondaryLayout,\n} from \"../layouts\";\nimport Home from \"@/views/Home\";\n\nconst MovieHome = React.lazy(() => import(\"@/views/movies/MovieHome\"));\nconst TVHome = React.lazy(() => import(\"@/views/tvs/TVHome\"));\nconst Movie = React.lazy(() => import(\"@/views/movies/Movie\"));\nconst MoviePlay = React.lazy(() => import(\"@/views/movies/MoviePlay\"));\nconst MovieUpload = React.lazy(() => import(\"@/views/movies/MovieUpload\"));\nconst TV = React.lazy(() => import(\"@/views/tvs/TV\"));\nconst Profile = React.lazy(() => import(\"@/views/users/Profile\"));\nconst Personal = React.lazy(() => import(\"@/views/users/Personal\"));\nconst Resume = React.lazy(() => import(\"@/views/users/Resume\"));\nconst Login = React.lazy(() => import(\"@/views/auth/Login\"));\nconst Completion = React.lazy(() => import(\"@/views/auth/Completion\"));\nconst NotFound = React.lazy(() => import(\"@/views/public/NotFound\"));\nconst Forbidden = React.lazy(() => import(\"@/views/public/Forbidden\"));\nconst InternalServerError = React.lazy(() =>\n  import(\"@/views/public/InternalServer\")\n);\nconst H5NotSupported = React.lazy(() =>\n  import(\"@/views/public/H5NotSupported\")\n);\nconst Test = React.lazy(() => import(\"@/views/Test\"));\n\nfunction AppRoute() {\n  const isH5 = /Android|webOS|iPhone|iPod|BlackBerry/i.test(\n    navigator.userAgent\n  );\n  if (isH5) {\n    return (\n      <Router>\n        <Switch>\n          <Route lazy component={H5NotSupported} />\n        </Switch>\n      </Router>\n    );\n  }\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} layout={MainLayout} />\n        <Route lazy path=\"/home\" component={Home} layout={MainLayout} />\n        <Route\n          path=\"/movie-home\"\n          lazy\n          component={MovieHome}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/movie/:id\" component={Movie} layout={MainLayout} />\n        <Route\n          lazy\n          path=\"/movie-play/:id\"\n          component={MoviePlay}\n          layout={MainLayout}\n        />\n        <Route\n          lazy\n          path=\"/movie-upload\"\n          component={MovieUpload}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/tv-home\" component={TVHome} layout={MainLayout} />\n        <Route lazy path=\"/tv\" component={TV} layout={MainLayout} />\n        <Route lazy path=\"/profile\" component={Profile} layout={MainLayout} />\n        <Route lazy path=\"/personal\" component={Personal} layout={MainLayout} />\n        <Route lazy path=\"/resume\" component={Resume} />\n        <Route lazy path=\"/login\" component={Login} />\n        <Route lazy path=\"/completion\" component={Completion} />\n        <Route lazy path=\"/403\" exact component={Forbidden} />\n        <Route lazy path=\"/404\" exact component={NotFound} />\n        <Route lazy path=\"/50x\" exact component={InternalServerError} />\n        <Route lazy path=\"/test\" exact component={Test} />\n        <Route lazy component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRoute;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { SnackbarProvider, useSnackbar, OptionsObject } from \"notistack\";\n\ntype SnackbarProps = {\n  message: React.ReactNode;\n  options?: OptionsObject | undefined;\n};\n\n// add a <div> child to body under which to mount the snackbars\nconst mountPoint = document.createElement(\"div\");\ndocument.body.appendChild(mountPoint);\n\nexport const Message = {\n  success: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"success\" });\n  },\n  warning: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"warning\" });\n  },\n  info: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"info\" });\n  },\n  error: function(msg: React.ReactNode) {\n    this.toast(msg, { variant: \"error\" });\n  },\n  toast: function(msg: React.ReactNode, opts?: OptionsObject | undefined) {\n    const ShowSnackbar = (props: SnackbarProps) => {\n      const { enqueueSnackbar } = useSnackbar();\n      const { message, options } = props;\n      enqueueSnackbar(message, options);\n      return null;\n    };\n    ReactDOM.render(\n      <SnackbarProvider maxSnack={3}>\n        <ShowSnackbar message={msg} options={opts} />\n      </SnackbarProvider>,\n      mountPoint\n    );\n  }\n};\n\nexport default Message;\n","import Message from \"@/components/base/Message\";\nimport * as Sentry from \"@sentry/browser\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  from,\n  split\n} from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { setContext } from \"@apollo/link-context\";\nimport { onError } from \"@apollo/link-error\";\n// import { createUploadLink } from \"apollo-upload-client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_HTTP_URL\n});\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.REACT_APP_WEBSOCKET_URL || \"\",\n  options: {\n    reconnect: true\n  }\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nconst authLink = setContext((_, { headers }) => {\n  const access_token = localStorage.getItem(\"access_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: access_token ? `Bearer ${access_token}` : \"\"\n    }\n  };\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      Message.error(message || \"服务器繁忙\");\n      Sentry.captureMessage(message);\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      );\n    });\n  }\n  if (networkError) {\n    Sentry.captureException(networkError);\n    Message.error(\"服务器繁忙\");\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\n// const uploadLink = createUploadLink({\n//   uri: process.env.REACT_APP_UPLOAD_URL\n// });\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: from([errorLink, authLink, splitLink])\n});\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { SnackbarProvider } from \"notistack\";\nimport theme from \"./theme\";\nimport AppRoute from \"./router\";\nimport { client } from \"./graphql\";\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={client}>\n          <AppRoute />\n        </ApolloProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/analytics\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n});\nfirebase.analytics();\n\nSentry.init({\n  enabled: process.env.NODE_ENV === \"production\",\n  dsn: process.env.REACT_APP_SENTRY_DSN\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  PROFILE,\n  MOVIE_DETAIL,\n  HOME,\n  MOVIE_HOME,\n  MOVIE_PLAY,\n  MOVIE_UPLOAD\n} from \"@/common/constants/route.constant\";\n\nexport const useRouterHelper = () => {\n  const history = useHistory();\n\n  // go home page.\n  const gotoHome = () => {\n    history.push(`${HOME}`);\n  };\n\n  // go profile page.\n  const gotoProfile = (username: string | undefined | null) => {\n    history.push(`${PROFILE}/${username}`);\n  };\n\n  // go movie detail page.\n  const gotoMovie = (movie_id: number | undefined | null) => {\n    history.push(`${MOVIE_DETAIL}/${movie_id}`);\n  };\n\n  // go movie home page.\n  const gotoMovieHome = () => {\n    history.push(MOVIE_HOME);\n  };\n\n  // go movie play page.\n  const gotoMoviePlay = (movie_id: number | undefined | string) => {\n    history.push(`${MOVIE_PLAY}/${movie_id}`);\n  };\n\n  // go movie upload.\n  const gotoMovieUpload = () => {\n    history.push(`${MOVIE_UPLOAD}`);\n  };\n\n  return {\n    push: (path: string, state?: any) => {\n      // console.log(path, state);\n      history.push(path, state);\n    },\n    gotoHome,\n    gotoProfile,\n    gotoMovie,\n    gotoMovieHome,\n    gotoMoviePlay,\n    gotoMovieUpload\n  };\n};\n","// home page\nexport const HOME = \"/home\";\n\n// movie home page\nexport const MOVIE_HOME = \"/movie-home\";\n\n// movie detail page\nexport const MOVIE_DETAIL = \"/movie\";\n\n// profile page\nexport const PROFILE = \"/profile\";\n\n// movie play page\nexport const MOVIE_PLAY = \"/movie-play\";\n\n// movie upload page\nexport const MOVIE_UPLOAD = \"/movie-upload\";\n","export * from \"./router.helper\";\n","export const DEFAULT_USER_AVATAR =\n  \"https://cdn.dribbble.com/users/5746/screenshots/4143186/dribbble-salvatier-avatar.jpg\";\n\nexport const DEFAULT_HOLDER =\n  \"https://cdn.dribbble.com/users/185738/screenshots/3515176/growthandstrategy.jpg\";\n\nexport const DEFULAT_MOVIE_COVER =\n  \"https://cdn.dribbble.com/users/185738/screenshots/3515176/growthandstrategy.jpg\";\n\nexport const DEFAULT_PROFILE_COVER =\n  \"https://cdn.dribbble.com/users/185738/screenshots/3515176/growthandstrategy.jpg\";\n","import gql from \"graphql-tag\";\nimport * as ApolloReactCommon from \"@apollo/client\";\nimport * as ApolloReactHooks from \"@apollo/client\";\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: number | string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** Date custom scalar type */\n  Date: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type Bullet = {\n  __typename?: \"Bullet\";\n  id: Scalars[\"ID\"];\n  content: Scalars[\"String\"];\n  point?: Maybe<Scalars[\"Float\"]>;\n  create_at: Scalars[\"Date\"];\n  author: User;\n  medium: Medium;\n};\n\nexport type Category = {\n  __typename?: \"Category\";\n  id: Scalars[\"ID\"];\n  label: Scalars[\"String\"];\n  alias?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n  children?: Maybe<Array<Category>>;\n  parent?: Maybe<Category>;\n};\n\nexport type Character = {\n  __typename?: \"Character\";\n  name: Scalars[\"String\"];\n  avatar?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  tags?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CreateBulletInput = {\n  content: Scalars[\"String\"];\n  point?: Maybe<Scalars[\"Float\"]>;\n  medium_id: Scalars[\"Int\"];\n};\n\nexport type CreateCategoryInput = {\n  label: Scalars[\"String\"];\n  alias?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  parent_id?: Maybe<Scalars[\"Float\"]>;\n  children?: Maybe<Array<CreateCategoryInput>>;\n};\n\nexport type CreateCharacterInput = {\n  name: Scalars[\"String\"];\n  avatar?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  tags?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CreateFollowInput = {\n  follower_uid?: Maybe<Scalars[\"ID\"]>;\n  owner_uid: Scalars[\"ID\"];\n};\n\nexport type CreateMovieInput = {\n  title: Scalars[\"String\"];\n  sub_title?: Maybe<Scalars[\"String\"]>;\n  alias_title?: Maybe<Scalars[\"String\"]>;\n  cover: Scalars[\"String\"];\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  region?: Maybe<Scalars[\"String\"]>;\n  credits?: Maybe<Array<CreateCharacterInput>>;\n  sources?: Maybe<Array<CreateMovieMediumInput>>;\n};\n\nexport type CreateMovieMediumInput = {\n  name: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  movie_id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type CreatePlaylistInput = {\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateReviewInput = {\n  content: Scalars[\"String\"];\n  author_uid?: Maybe<Scalars[\"ID\"]>;\n  type: ReviewMedium;\n  medium_id: Scalars[\"ID\"];\n};\n\nexport type CreateTagInput = {\n  label: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateTopicInput = {\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  top_movie_id?: Maybe<Scalars[\"ID\"]>;\n  top_movies_ids?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type CreateUserInput = {\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  email: Scalars[\"String\"];\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateUserWithCodeInput = {\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  email: Scalars[\"String\"];\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  code: Scalars[\"String\"];\n};\n\nexport type CreateVideoInput = {\n  title: Scalars[\"String\"];\n  sub_title?: Maybe<Scalars[\"String\"]>;\n  alias_title?: Maybe<Scalars[\"String\"]>;\n  cover: Scalars[\"String\"];\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  sources?: Maybe<Array<CreateVideoMediumInput>>;\n};\n\nexport type CreateVideoMediumInput = {\n  name: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  video_id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type DeleteFollowInput = {\n  follower_uid?: Maybe<Scalars[\"ID\"]>;\n  owner_uid: Scalars[\"ID\"];\n};\n\nexport type Follow = {\n  __typename?: \"Follow\";\n  follower: User;\n  owner: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type FollowEdge = {\n  __typename?: \"FollowEdge\";\n  cursor: Scalars[\"String\"];\n  node: Follow;\n};\n\nexport type FollowPageInfo = {\n  __typename?: \"FollowPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type FollowPaginated = {\n  __typename?: \"FollowPaginated\";\n  edges?: Maybe<Array<FollowEdge>>;\n  nodes?: Maybe<Array<Follow>>;\n  pageInfo: FollowPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Medium = {\n  __typename?: \"Medium\";\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  duration?: Maybe<Scalars[\"Float\"]>;\n  preview_url?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  low_quality_url?: Maybe<Scalars[\"String\"]>;\n  medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  high_quality_url?: Maybe<Scalars[\"String\"]>;\n  super_quality_url?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n  version: Scalars[\"Float\"];\n};\n\nexport type Movie = {\n  __typename?: \"Movie\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  sub_title?: Maybe<Scalars[\"String\"]>;\n  alias_title?: Maybe<Scalars[\"String\"]>;\n  cover: Scalars[\"String\"];\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  region: Region;\n  credits?: Maybe<Array<Character>>;\n  sources: Array<MovieMedium>;\n  author: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type MovieEdge = {\n  __typename?: \"MovieEdge\";\n  cursor: Scalars[\"String\"];\n  node: Movie;\n};\n\nexport type MovieMedium = {\n  __typename?: \"MovieMedium\";\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  duration?: Maybe<Scalars[\"Float\"]>;\n  preview_url?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  low_quality_url?: Maybe<Scalars[\"String\"]>;\n  medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  high_quality_url?: Maybe<Scalars[\"String\"]>;\n  super_quality_url?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n  version: Scalars[\"Float\"];\n};\n\nexport type MoviePageInfo = {\n  __typename?: \"MoviePageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type MoviePaginated = {\n  __typename?: \"MoviePaginated\";\n  edges?: Maybe<Array<MovieEdge>>;\n  nodes?: Maybe<Array<Movie>>;\n  pageInfo: MoviePageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Mutation = {\n  __typename?: \"Mutation\";\n  create_tag: Tag;\n  add_movie_to_tag: Scalars[\"Boolean\"];\n  add_category_to_tag: Scalars[\"Boolean\"];\n  create_movie: Movie;\n  add_mediums_to_movie: Movie;\n  create_category: Category;\n  delete_category: Scalars[\"Boolean\"];\n  create_bullet: Bullet;\n  login: Scalars[\"String\"];\n  /** create user. */\n  create_user: User;\n  /** create user with verif code. */\n  create_user_with_code: User;\n  send_register_email: Scalars[\"Boolean\"];\n  update_user: User;\n  upload_file_oss: Scalars[\"String\"];\n  create_topic: Topic;\n  create_review: Review;\n  create_playlist: Playlist;\n  add_movie_to_playlist: Scalars[\"Boolean\"];\n  create_follow: Follow;\n  remove_follow: Follow;\n  create_video: Video;\n  add_mediums_to_video: Video;\n};\n\nexport type MutationCreate_TagArgs = {\n  tag: CreateTagInput;\n};\n\nexport type MutationAdd_Movie_To_TagArgs = {\n  tag_id: Scalars[\"Float\"];\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type MutationAdd_Category_To_TagArgs = {\n  tag_id: Scalars[\"Float\"];\n  category_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_MovieArgs = {\n  movie: CreateMovieInput;\n};\n\nexport type MutationAdd_Mediums_To_MovieArgs = {\n  movie_medium: CreateMovieMediumInput;\n  movie_id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_CategoryArgs = {\n  category: CreateCategoryInput;\n};\n\nexport type MutationDelete_CategoryArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_BulletArgs = {\n  bullet: CreateBulletInput;\n};\n\nexport type MutationLoginArgs = {\n  password: Scalars[\"String\"];\n  username: Scalars[\"String\"];\n};\n\nexport type MutationCreate_UserArgs = {\n  user: CreateUserInput;\n};\n\nexport type MutationCreate_User_With_CodeArgs = {\n  user: CreateUserWithCodeInput;\n};\n\nexport type MutationSend_Register_EmailArgs = {\n  email: Scalars[\"String\"];\n};\n\nexport type MutationUpdate_UserArgs = {\n  user: UpdateUserInput;\n};\n\nexport type MutationUpload_File_OssArgs = {\n  file: Scalars[\"Upload\"];\n};\n\nexport type MutationCreate_TopicArgs = {\n  topic: CreateTopicInput;\n};\n\nexport type MutationCreate_ReviewArgs = {\n  review: CreateReviewInput;\n};\n\nexport type MutationCreate_PlaylistArgs = {\n  playlist: CreatePlaylistInput;\n};\n\nexport type MutationAdd_Movie_To_PlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_FollowArgs = {\n  follow: CreateFollowInput;\n};\n\nexport type MutationRemove_FollowArgs = {\n  follow: DeleteFollowInput;\n};\n\nexport type MutationCreate_VideoArgs = {\n  video: CreateVideoInput;\n};\n\nexport type MutationAdd_Mediums_To_VideoArgs = {\n  video_medium: CreateVideoMediumInput;\n  video_id: Scalars[\"ID\"];\n};\n\nexport type PaginatedQuery = {\n  first?: Maybe<Scalars[\"Int\"]>;\n  after?: Maybe<Scalars[\"String\"]>;\n  last?: Maybe<Scalars[\"Int\"]>;\n  before?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type PlatformAuthWay = {\n  __typename?: \"PlatformAuthWay\";\n  platform: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n};\n\nexport type Playlist = {\n  __typename?: \"Playlist\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n  movies?: Maybe<Array<Movie>>;\n  movies_count?: Maybe<Scalars[\"Float\"]>;\n  author: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type PlaylistEdge = {\n  __typename?: \"PlaylistEdge\";\n  cursor: Scalars[\"String\"];\n  node: Playlist;\n};\n\nexport type PlaylistPageInfo = {\n  __typename?: \"PlaylistPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type PlaylistPaginated = {\n  __typename?: \"PlaylistPaginated\";\n  edges?: Maybe<Array<PlaylistEdge>>;\n  nodes?: Maybe<Array<Playlist>>;\n  pageInfo: PlaylistPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Query = {\n  __typename?: \"Query\";\n  movie: Movie;\n  movies_paginated: MoviePaginated;\n  me: User;\n  platform_auth_way: Array<PlatformAuthWay>;\n  /** find user by uid. */\n  user: User;\n  /** all user with paginated. */\n  users_paginated: UserPaginated;\n  current_topic: Topic;\n  movie_urges: Array<Movie>;\n  movie_urges_by_movie: Array<Movie>;\n  user_urges: Array<User>;\n  reviews_paginated: ReviewPaginated;\n  playlists_paginated: PlaylistPaginated;\n  playlist: Playlist;\n  follows: Array<Follow>;\n  follows_paginated: FollowPaginated;\n  follows_total: Scalars[\"Int\"];\n  fans: Array<Follow>;\n  fans_paginated: FollowPaginated;\n  fans_total: Scalars[\"Int\"];\n  is_following: Scalars[\"Boolean\"];\n  video: Video;\n  videos_paginated: VideoPaginated;\n};\n\nexport type QueryMovieArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryMovies_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryUserArgs = {\n  uid: Scalars[\"String\"];\n};\n\nexport type QueryUsers_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryMovie_Urges_By_MovieArgs = {\n  movie_id: Scalars[\"Float\"];\n};\n\nexport type QueryReviews_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n  medium_id?: Maybe<Scalars[\"ID\"]>;\n  type?: Maybe<ReviewMedium>;\n};\n\nexport type QueryPlaylists_PaginatedArgs = {\n  author_uid?: Maybe<Scalars[\"String\"]>;\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryPlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n};\n\nexport type QueryFollows_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFollows_TotalArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryFans_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFans_TotalArgs = {\n  owner_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryIs_FollowingArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n  owner_uid: Scalars[\"String\"];\n};\n\nexport type QueryVideoArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryVideos_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport enum Region {\n  Mainland = \"Mainland\",\n  America = \"America\",\n  Hongkong = \"Hongkong\",\n  Taiwan = \"Taiwan\",\n  Britain = \"Britain\",\n  India = \"India\"\n}\n\nexport type Review = {\n  __typename?: \"Review\";\n  id: Scalars[\"ID\"];\n  content: Scalars[\"String\"];\n  author: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type ReviewEdge = {\n  __typename?: \"ReviewEdge\";\n  cursor: Scalars[\"String\"];\n  node: Review;\n};\n\nexport enum ReviewMedium {\n  Movie = \"MOVIE\"\n}\n\nexport type ReviewPageInfo = {\n  __typename?: \"ReviewPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type ReviewPaginated = {\n  __typename?: \"ReviewPaginated\";\n  edges?: Maybe<Array<ReviewEdge>>;\n  nodes?: Maybe<Array<Review>>;\n  pageInfo: ReviewPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Subscription = {\n  __typename?: \"Subscription\";\n  user_created: User;\n  review_created: Review;\n};\n\nexport type SubscriptionReview_CreatedArgs = {\n  medium_id: Scalars[\"ID\"];\n  type: ReviewMedium;\n};\n\nexport type Tag = {\n  __typename?: \"Tag\";\n  id: Scalars[\"ID\"];\n  label: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  movies?: Maybe<Array<Movie>>;\n  categories?: Maybe<Array<Category>>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n};\n\nexport type Topic = {\n  __typename?: \"Topic\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  top_movie?: Maybe<Movie>;\n  top_movies?: Maybe<Array<Movie>>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type UpdateUserInput = {\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  password?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type User = {\n  __typename?: \"User\";\n  uid: Scalars[\"ID\"];\n  username?: Maybe<Scalars[\"String\"]>;\n  email?: Maybe<Scalars[\"String\"]>;\n  nickname?: Maybe<Scalars[\"String\"]>;\n  avatar?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  address?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type UserEdge = {\n  __typename?: \"UserEdge\";\n  cursor: Scalars[\"String\"];\n  node: User;\n};\n\nexport type UserPageInfo = {\n  __typename?: \"UserPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type UserPaginated = {\n  __typename?: \"UserPaginated\";\n  edges?: Maybe<Array<UserEdge>>;\n  nodes?: Maybe<Array<User>>;\n  pageInfo: UserPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type Video = {\n  __typename?: \"Video\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  sub_title?: Maybe<Scalars[\"String\"]>;\n  alias_title?: Maybe<Scalars[\"String\"]>;\n  cover: Scalars[\"String\"];\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  sources: Array<VideoMedium>;\n  author: User;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n};\n\nexport type VideoEdge = {\n  __typename?: \"VideoEdge\";\n  cursor: Scalars[\"String\"];\n  node: Video;\n};\n\nexport type VideoMedium = {\n  __typename?: \"VideoMedium\";\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  alias_name?: Maybe<Scalars[\"String\"]>;\n  cover?: Maybe<Scalars[\"String\"]>;\n  posters?: Maybe<Array<Scalars[\"String\"]>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  duration?: Maybe<Scalars[\"Float\"]>;\n  preview_url?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  low_quality_url?: Maybe<Scalars[\"String\"]>;\n  medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  high_quality_url?: Maybe<Scalars[\"String\"]>;\n  super_quality_url?: Maybe<Scalars[\"String\"]>;\n  create_at: Scalars[\"Date\"];\n  update_at: Scalars[\"Date\"];\n  delete_at: Scalars[\"Date\"];\n  version: Scalars[\"Float\"];\n};\n\nexport type VideoPageInfo = {\n  __typename?: \"VideoPageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  startCursor: Scalars[\"String\"];\n  endCursor: Scalars[\"String\"];\n};\n\nexport type VideoPaginated = {\n  __typename?: \"VideoPaginated\";\n  edges?: Maybe<Array<VideoEdge>>;\n  nodes?: Maybe<Array<Video>>;\n  pageInfo: VideoPageInfo;\n  totalCount: Scalars[\"Int\"];\n};\n\nexport type MeFragment = {\n  __typename?: \"User\";\n  uid: number | string;\n  nickname?: Maybe<string>;\n  email?: Maybe<string>;\n};\n\nexport type AuthorFragment = {\n  __typename?: \"User\";\n  uid: number | string;\n  avatar?: Maybe<string>;\n  nickname?: Maybe<string>;\n  username?: Maybe<string>;\n};\n\nexport type LoginMutationVariables = Exact<{\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n}>;\n\nexport type LoginMutation = { __typename?: \"Mutation\"; login: string };\n\nexport type SendRegisterEmailMutationVariables = Exact<{\n  email: Scalars[\"String\"];\n}>;\n\nexport type SendRegisterEmailMutation = {\n  __typename?: \"Mutation\";\n  send_register_email: boolean;\n};\n\nexport type CreateUserWithCodeMutationVariables = Exact<{\n  user: CreateUserWithCodeInput;\n}>;\n\nexport type CreateUserWithCodeMutation = {\n  __typename?: \"Mutation\";\n  create_user_with_code: {\n    __typename?: \"User\";\n    username?: Maybe<string>;\n    avatar?: Maybe<string>;\n  };\n};\n\nexport type PlatformAuthWayQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type PlatformAuthWayQuery = {\n  __typename?: \"Query\";\n  platform_auth_way: Array<{\n    __typename?: \"PlatformAuthWay\";\n    platform: string;\n    url: string;\n  }>;\n};\n\nexport type CurrentTopicQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type CurrentTopicQuery = {\n  __typename?: \"Query\";\n  current_topic: {\n    __typename?: \"Topic\";\n    title: string;\n    description?: Maybe<string>;\n    top_movies?: Maybe<\n      Array<{\n        __typename?: \"Movie\";\n        description?: Maybe<string>;\n        title: string;\n        sub_title?: Maybe<string>;\n        create_at: any;\n        update_at: any;\n        cover: string;\n        posters?: Maybe<Array<string>>;\n        author: {\n          __typename?: \"User\";\n          avatar?: Maybe<string>;\n          nickname?: Maybe<string>;\n          uid: number | string;\n          username?: Maybe<string>;\n        };\n      }>\n    >;\n    top_movie?: Maybe<{\n      __typename?: \"Movie\";\n      description?: Maybe<string>;\n      title: string;\n      sub_title?: Maybe<string>;\n      create_at: any;\n      update_at: any;\n      cover: string;\n      posters?: Maybe<Array<string>>;\n      author: {\n        __typename?: \"User\";\n        avatar?: Maybe<string>;\n        nickname?: Maybe<string>;\n        uid: number | string;\n        username?: Maybe<string>;\n      };\n    }>;\n  };\n};\n\nexport type MovieUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MovieUrgesQuery = {\n  __typename?: \"Query\";\n  movie_urges: Array<{\n    __typename?: \"Movie\";\n    title: string;\n    sub_title?: Maybe<string>;\n    cover: string;\n    description?: Maybe<string>;\n    author: { __typename?: \"User\" } & AuthorFragment;\n  }>;\n};\n\nexport type UserUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type UserUrgesQuery = {\n  __typename?: \"Query\";\n  user_urges: Array<{\n    __typename?: \"User\";\n    nickname?: Maybe<string>;\n    avatar?: Maybe<string>;\n    username?: Maybe<string>;\n    uid: number | string;\n    description?: Maybe<string>;\n  }>;\n};\n\nexport type MovieQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type MovieQuery = {\n  __typename?: \"Query\";\n  movie: {\n    __typename?: \"Movie\";\n    cover: string;\n    title: string;\n    update_at: any;\n    sub_title?: Maybe<string>;\n    id: number | string;\n    description?: Maybe<string>;\n    create_at: any;\n    alias_title?: Maybe<string>;\n    posters?: Maybe<Array<string>>;\n    region: Region;\n    credits?: Maybe<\n      Array<{\n        __typename?: \"Character\";\n        avatar?: Maybe<string>;\n        name: string;\n        description?: Maybe<string>;\n      }>\n    >;\n    author: {\n      __typename?: \"User\";\n      avatar?: Maybe<string>;\n      uid: number | string;\n      username?: Maybe<string>;\n      nickname?: Maybe<string>;\n    };\n    sources: Array<{\n      __typename?: \"MovieMedium\";\n      url: string;\n      super_quality_url?: Maybe<string>;\n      preview_url?: Maybe<string>;\n      posters?: Maybe<Array<string>>;\n      name?: Maybe<string>;\n      medium_quality_url?: Maybe<string>;\n      low_quality_url?: Maybe<string>;\n      id: number | string;\n      high_quality_url?: Maybe<string>;\n      duration?: Maybe<number>;\n      description?: Maybe<string>;\n      alias_name?: Maybe<string>;\n      create_at: any;\n      update_at: any;\n    }>;\n  };\n};\n\nexport type MoviesPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type MoviesPaginatedQuery = {\n  __typename?: \"Query\";\n  movies_paginated: {\n    __typename?: \"MoviePaginated\";\n    totalCount: number;\n    pageInfo: {\n      __typename?: \"MoviePageInfo\";\n      hasNextPage: boolean;\n      endCursor: string;\n    };\n    edges?: Maybe<\n      Array<{\n        __typename?: \"MovieEdge\";\n        cursor: string;\n        node: {\n          __typename?: \"Movie\";\n          title: string;\n          sub_title?: Maybe<string>;\n          alias_title?: Maybe<string>;\n          cover: string;\n          description?: Maybe<string>;\n          author: {\n            __typename?: \"User\";\n            avatar?: Maybe<string>;\n            username?: Maybe<string>;\n            nickname?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type PlaylistsPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n  author_uid?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type PlaylistsPaginatedQuery = {\n  __typename?: \"Query\";\n  playlists_paginated: {\n    __typename?: \"PlaylistPaginated\";\n    totalCount: number;\n    pageInfo: {\n      __typename?: \"PlaylistPageInfo\";\n      hasNextPage: boolean;\n      endCursor: string;\n    };\n    edges?: Maybe<\n      Array<{\n        __typename?: \"PlaylistEdge\";\n        cursor: string;\n        node: {\n          __typename?: \"Playlist\";\n          title: string;\n          description?: Maybe<string>;\n          cover?: Maybe<string>;\n          create_at: any;\n        };\n      }>\n    >;\n  };\n};\n\nexport type ReviewCreatedSubscriptionVariables = Exact<{\n  type: ReviewMedium;\n  medium_id: Scalars[\"ID\"];\n}>;\n\nexport type ReviewCreatedSubscription = {\n  __typename?: \"Subscription\";\n  review_created: {\n    __typename?: \"Review\";\n    content: string;\n    create_at: any;\n    author: {\n      __typename?: \"User\";\n      nickname?: Maybe<string>;\n      avatar?: Maybe<string>;\n    };\n  };\n};\n\nexport const MeFragmentDoc = gql`\n  fragment Me on User {\n    uid\n    nickname\n    email\n  }\n`;\nexport const AuthorFragmentDoc = gql`\n  fragment Author on User {\n    uid\n    avatar\n    nickname\n    username\n  }\n`;\nexport const LoginDocument = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)\n  }\n`;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<\n  LoginMutation,\n  LoginMutationVariables\n>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      username: // value for 'username'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    LoginMutation,\n    LoginMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(\n    LoginDocument,\n    baseOptions\n  );\n}\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<\n  LoginMutation\n>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  LoginMutation,\n  LoginMutationVariables\n>;\nexport const SendRegisterEmailDocument = gql`\n  mutation sendRegisterEmail($email: String!) {\n    send_register_email(email: $email)\n  }\n`;\nexport type SendRegisterEmailMutationFn = ApolloReactCommon.MutationFunction<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\n\n/**\n * __useSendRegisterEmailMutation__\n *\n * To run a mutation, you first call `useSendRegisterEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSendRegisterEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [sendRegisterEmailMutation, { data, loading, error }] = useSendRegisterEmailMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useSendRegisterEmailMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >(SendRegisterEmailDocument, baseOptions);\n}\nexport type SendRegisterEmailMutationHookResult = ReturnType<\n  typeof useSendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationResult = ApolloReactCommon.MutationResult<\n  SendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\nexport const CreateUserWithCodeDocument = gql`\n  mutation createUserWithCode($user: CreateUserWithCodeInput!) {\n    create_user_with_code(user: $user) {\n      username\n      avatar\n    }\n  }\n`;\nexport type CreateUserWithCodeMutationFn = ApolloReactCommon.MutationFunction<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\n\n/**\n * __useCreateUserWithCodeMutation__\n *\n * To run a mutation, you first call `useCreateUserWithCodeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateUserWithCodeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createUserWithCodeMutation, { data, loading, error }] = useCreateUserWithCodeMutation({\n *   variables: {\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useCreateUserWithCodeMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >(CreateUserWithCodeDocument, baseOptions);\n}\nexport type CreateUserWithCodeMutationHookResult = ReturnType<\n  typeof useCreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationResult = ApolloReactCommon.MutationResult<\n  CreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\nexport const PlatformAuthWayDocument = gql`\n  query platformAuthWay {\n    platform_auth_way {\n      platform\n      url\n    }\n  }\n`;\n\n/**\n * __usePlatformAuthWayQuery__\n *\n * To run a query within a React component, call `usePlatformAuthWayQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlatformAuthWayQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlatformAuthWayQuery({\n *   variables: {\n *   },\n * });\n */\nexport function usePlatformAuthWayQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >(PlatformAuthWayDocument, baseOptions);\n}\nexport function usePlatformAuthWayLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >(PlatformAuthWayDocument, baseOptions);\n}\nexport type PlatformAuthWayQueryHookResult = ReturnType<\n  typeof usePlatformAuthWayQuery\n>;\nexport type PlatformAuthWayLazyQueryHookResult = ReturnType<\n  typeof usePlatformAuthWayLazyQuery\n>;\nexport type PlatformAuthWayQueryResult = ApolloReactCommon.QueryResult<\n  PlatformAuthWayQuery,\n  PlatformAuthWayQueryVariables\n>;\nexport const CurrentTopicDocument = gql`\n  query currentTopic {\n    current_topic {\n      title\n      description\n      top_movies {\n        description\n        title\n        sub_title\n        create_at\n        update_at\n        cover\n        posters\n        author {\n          avatar\n          nickname\n          uid\n          username\n        }\n      }\n      top_movie {\n        description\n        title\n        sub_title\n        create_at\n        update_at\n        cover\n        posters\n        author {\n          avatar\n          nickname\n          uid\n          username\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __useCurrentTopicQuery__\n *\n * To run a query within a React component, call `useCurrentTopicQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentTopicQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentTopicQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentTopicQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport function useCurrentTopicLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport type CurrentTopicQueryHookResult = ReturnType<\n  typeof useCurrentTopicQuery\n>;\nexport type CurrentTopicLazyQueryHookResult = ReturnType<\n  typeof useCurrentTopicLazyQuery\n>;\nexport type CurrentTopicQueryResult = ApolloReactCommon.QueryResult<\n  CurrentTopicQuery,\n  CurrentTopicQueryVariables\n>;\nexport const MovieUrgesDocument = gql`\n  query movieUrges {\n    movie_urges {\n      title\n      sub_title\n      cover\n      description\n      author {\n        ...Author\n      }\n    }\n  }\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useMovieUrgesQuery__\n *\n * To run a query within a React component, call `useMovieUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMovieUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<MovieUrgesQuery, MovieUrgesQueryVariables>(\n    MovieUrgesDocument,\n    baseOptions\n  );\n}\nexport function useMovieUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MovieUrgesQuery,\n    MovieUrgesQueryVariables\n  >(MovieUrgesDocument, baseOptions);\n}\nexport type MovieUrgesQueryHookResult = ReturnType<typeof useMovieUrgesQuery>;\nexport type MovieUrgesLazyQueryHookResult = ReturnType<\n  typeof useMovieUrgesLazyQuery\n>;\nexport type MovieUrgesQueryResult = ApolloReactCommon.QueryResult<\n  MovieUrgesQuery,\n  MovieUrgesQueryVariables\n>;\nexport const UserUrgesDocument = gql`\n  query userUrges {\n    user_urges {\n      nickname\n      avatar\n      username\n      uid\n      description\n    }\n  }\n`;\n\n/**\n * __useUserUrgesQuery__\n *\n * To run a query within a React component, call `useUserUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport function useUserUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport type UserUrgesQueryHookResult = ReturnType<typeof useUserUrgesQuery>;\nexport type UserUrgesLazyQueryHookResult = ReturnType<\n  typeof useUserUrgesLazyQuery\n>;\nexport type UserUrgesQueryResult = ApolloReactCommon.QueryResult<\n  UserUrgesQuery,\n  UserUrgesQueryVariables\n>;\nexport const MovieDocument = gql`\n  query movie($id: ID!) {\n    movie(id: $id) {\n      credits {\n        avatar\n        name\n        description\n      }\n      author {\n        avatar\n        uid\n        username\n        nickname\n      }\n      cover\n      title\n      update_at\n      sub_title\n      id\n      description\n      create_at\n      alias_title\n      posters\n      region\n      sources {\n        url\n        super_quality_url\n        preview_url\n        posters\n        name\n        medium_quality_url\n        low_quality_url\n        id\n        high_quality_url\n        duration\n        description\n        alias_name\n        create_at\n        update_at\n      }\n    }\n  }\n`;\n\n/**\n * __useMovieQuery__\n *\n * To run a query within a React component, call `useMovieQuery` and pass it any options that fit your needs.\n * When your component renders, `useMovieQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMovieQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useMovieQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MovieQuery,\n    MovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<MovieQuery, MovieQueryVariables>(\n    MovieDocument,\n    baseOptions\n  );\n}\nexport function useMovieLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MovieQuery,\n    MovieQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<MovieQuery, MovieQueryVariables>(\n    MovieDocument,\n    baseOptions\n  );\n}\nexport type MovieQueryHookResult = ReturnType<typeof useMovieQuery>;\nexport type MovieLazyQueryHookResult = ReturnType<typeof useMovieLazyQuery>;\nexport type MovieQueryResult = ApolloReactCommon.QueryResult<\n  MovieQuery,\n  MovieQueryVariables\n>;\nexport const MoviesPaginatedDocument = gql`\n  query moviesPaginated($query: PaginatedQuery) {\n    movies_paginated(query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          title\n          sub_title\n          alias_title\n          cover\n          description\n          author {\n            avatar\n            username\n            nickname\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __useMoviesPaginatedQuery__\n *\n * To run a query within a React component, call `useMoviesPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useMoviesPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMoviesPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useMoviesPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >(MoviesPaginatedDocument, baseOptions);\n}\nexport function useMoviesPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    MoviesPaginatedQuery,\n    MoviesPaginatedQueryVariables\n  >(MoviesPaginatedDocument, baseOptions);\n}\nexport type MoviesPaginatedQueryHookResult = ReturnType<\n  typeof useMoviesPaginatedQuery\n>;\nexport type MoviesPaginatedLazyQueryHookResult = ReturnType<\n  typeof useMoviesPaginatedLazyQuery\n>;\nexport type MoviesPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  MoviesPaginatedQuery,\n  MoviesPaginatedQueryVariables\n>;\nexport const PlaylistsPaginatedDocument = gql`\n  query playlistsPaginated($query: PaginatedQuery, $author_uid: String) {\n    playlists_paginated(query: $query, author_uid: $author_uid) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          title\n          description\n          cover\n          create_at\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __usePlaylistsPaginatedQuery__\n *\n * To run a query within a React component, call `usePlaylistsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlaylistsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlaylistsPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *      author_uid: // value for 'author_uid'\n *   },\n * });\n */\nexport function usePlaylistsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport function usePlaylistsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport type PlaylistsPaginatedQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedQuery\n>;\nexport type PlaylistsPaginatedLazyQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedLazyQuery\n>;\nexport type PlaylistsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  PlaylistsPaginatedQuery,\n  PlaylistsPaginatedQueryVariables\n>;\nexport const ReviewCreatedDocument = gql`\n  subscription reviewCreated($type: ReviewMedium!, $medium_id: ID!) {\n    review_created(type: $type, medium_id: $medium_id) {\n      content\n      create_at\n      author {\n        nickname\n        avatar\n      }\n    }\n  }\n`;\n\n/**\n * __useReviewCreatedSubscription__\n *\n * To run a query within a React component, call `useReviewCreatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useReviewCreatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewCreatedSubscription({\n *   variables: {\n *      type: // value for 'type'\n *      medium_id: // value for 'medium_id'\n *   },\n * });\n */\nexport function useReviewCreatedSubscription(\n  baseOptions?: ApolloReactHooks.SubscriptionHookOptions<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >\n) {\n  return ApolloReactHooks.useSubscription<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >(ReviewCreatedDocument, baseOptions);\n}\nexport type ReviewCreatedSubscriptionHookResult = ReturnType<\n  typeof useReviewCreatedSubscription\n>;\nexport type ReviewCreatedSubscriptionResult = ApolloReactCommon.SubscriptionResult<\n  ReviewCreatedSubscription\n>;\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: (props: ImageProp) => {\n        return props.height || \"auto\";\n      },\n      width: (props: ImageProp) => {\n        return props.width || \"100%\";\n      },\n      fontSize: 0,\n      overflow: \"hidden\"\n    },\n    aspect: {\n      paddingTop: (props: ImageProp) => {\n        if (props.aspectRatio) {\n          return `calc(1 / ${props.aspectRatio} * 100%)`;\n        } else {\n          return 0;\n        }\n      },\n      position: \"relative\",\n      backgroundColor: \"transparent\"\n    },\n    image: {\n      position: (props: ImageProp) => {\n        if (props.aspectRatio) {\n          return \"absolute\";\n        } else {\n          return \"relative\";\n        }\n      },\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      objectFit: \"cover\"\n    },\n    container: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\"\n    }\n  })\n);\n\ninterface ImageProp {\n  aspectRatio?: number; // 宽高比\n  src?: string;\n  classes?: Object;\n  width?: number | string;\n  height?: number | string;\n  alt?: string;\n}\n\nenum ImageStatus {\n  Loading = 0,\n  Success = 1,\n  Failuare = -1\n}\n\nexport const Image: React.FC<ImageProp> = (props: ImageProp) => {\n  const classes = useStyles(props);\n  const { src, alt } = props;\n\n  // status: 0:加载中 1: 加载成功 -1:加载失败\n  const [status, setStatus] = React.useState(ImageStatus.Loading);\n\n  const _loadImage = () => {\n    setStatus(ImageStatus.Success);\n  };\n\n  const _loadImageFail = () => {\n    setStatus(ImageStatus.Failuare);\n  };\n\n  return (\n    <div className={classes.root}>\n      {props.aspectRatio && (\n        <div className={classes.aspect}>\n          {src && status !== ImageStatus.Failuare && (\n            <img\n              alt={alt}\n              className={classes.image}\n              src={src}\n              onLoad={_loadImage}\n              onError={_loadImageFail}\n            />\n          )}\n          {status !== ImageStatus.Success && (\n            <div className={classes.container}>\n              {status === ImageStatus.Loading && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n              {status === ImageStatus.Failuare && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      {!props.aspectRatio && (\n        <>\n          {src && status !== ImageStatus.Failuare && (\n            <img\n              className={classes.image}\n              src={src}\n              alt=\"\"\n              onLoad={_loadImage}\n              onError={_loadImageFail}\n            />\n          )}\n          {status !== ImageStatus.Success && (\n            <div className={classes.container}>\n              {status === ImageStatus.Loading && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n              {status === ImageStatus.Failuare && (\n                <Skeleton\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height=\"100%\"\n                  width=\"100%\"\n                />\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import * as React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  makeStyles,\n  Box,\n  StandardProps\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    duration: {\n      color: \"#fff\",\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n      borderRadius: theme.shape.borderRadius,\n      width: 60,\n      height: 24,\n      fontSize: 12\n    }\n  })\n);\n\ninterface DurationProps extends StandardProps<HTMLElement, \"root\"> {\n  duration: number;\n  unit?: \"ms\" | \"s\";\n  classes?: any;\n}\n\nfunction Duration(props: DurationProps) {\n  const classes = useStyles();\n  let { duration, unit } = props;\n  if (unit === \"s\") {\n    duration = duration * 1000;\n  }\n\n  // 转换成毫秒\n  const hh = moment.duration(duration, \"ms\").hours() + \"\";\n  const mm = moment.duration(duration, \"ms\").minutes() + \"\";\n  const ss = moment.duration(duration, \"ms\").seconds() + \"\";\n  const format =\n    hh.padStart(2, \"0\") + \":\" + mm.padStart(2, \"0\") + \":\" + ss.padStart(2, \"0\");\n\n  return (\n    <Box\n      className={clsx(classes.duration, props.classes.root, props.className)}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      {format}\n    </Box>\n  );\n}\n\nDuration.defaultProps = {\n  unit: \"ms\"\n} as Partial<DurationProps>;\n\nexport default Duration;\n","import * as React from \"react\";\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaNormalProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport {\n  DEFULAT_MOVIE_COVER,\n  DEFAULT_USER_AVATAR\n} from \"@/common/constants/default.constant\";\nimport moment from \"moment\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    cover: {\n      position: \"relative\"\n    },\n    avatar: {\n      width: 56,\n      height: 56,\n      border: \"3px solid #fff\",\n      position: \"absolute\",\n      bottom: -28,\n      right: 10,\n      [theme.breakpoints.down(\"md\")]: {\n        width: 40,\n        height: 40,\n        bottom: -20,\n        right: 8\n      }\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaNormal: React.FC<MediaNormalProps> = (\n  props: MediaNormalProps\n) => {\n  const RouterHelper = useRouterHelper();\n  const classes = useStyles();\n\n  const goMovie = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoMovie(props?.id);\n  };\n\n  const goProfile = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoProfile(props?.author?.username);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={goMovie}>\n      <div className={classes.cover}>\n        <Image src={DEFULAT_MOVIE_COVER || props.cover} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n        <Avatar\n          onClick={goProfile}\n          className={classes.avatar}\n          src={(props.author && props.author.avatar) || DEFAULT_USER_AVATAR}\n        ></Avatar>\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {props.author && (props.author.nickname || props.author.username)}\n        </Typography>\n        <Typography variant=\"subtitle1\" noWrap>\n          {props.title}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数：TODO\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {moment(props.create_at).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nMediaNormal.defaultProps = {\n  title: \"视频标题\",\n  subtitle: \"视频副标题\",\n  create_at: new Date(),\n  duration: 3242341,\n  author: {\n    username: \"sma2lbao\",\n    nickname: \"昵称\",\n    avatar: \"\"\n  }\n} as Partial<MediaNormalProps>;\n\nexport default MediaNormal;\n","import * as React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaOwnProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport moment from \"moment\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    cover: {\n      position: \"relative\"\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaOwn: React.FC<MediaOwnProps> = (props: MediaOwnProps) => {\n  const RouterHelper = useRouterHelper();\n  const classes = useStyles();\n\n  const goMovie = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoMovie(props?.id);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={goMovie}>\n      <div className={classes.cover}>\n        <Image src={DEFULAT_MOVIE_COVER || props.cover} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"subtitle1\" noWrap>\n          {props.title}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数：TODO\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {moment(props.create_at).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nMediaOwn.defaultProps = {\n  title: \"视频标题\",\n  subtitle: \"视频副标题\",\n  create_at: new Date(),\n  duration: 3242341\n} as Partial<MediaOwnProps>;\n\nexport default MediaOwn;\n","import * as React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaPlainProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    cover: {\n      position: \"relative\"\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaPlain: React.FC<MediaPlainProps> = (\n  props: MediaPlainProps\n) => {\n  const RouterHelper = useRouterHelper();\n  const classes = useStyles();\n\n  const goMovie = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    RouterHelper.gotoMovie(props?.id);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={goMovie}>\n      <div className={classes.cover}>\n        <Image src={DEFULAT_MOVIE_COVER || props.cover} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n      </div>\n    </Box>\n  );\n};\n\nMediaPlain.defaultProps = {\n  create_at: new Date(),\n  duration: 3242341\n} as Partial<MediaPlainProps>;\n\nexport default MediaPlain;\n","export * from \"./MediaNormal\";\nexport * from \"./MediaOwn\";\nexport * from \"./MediaPlain\";\n"],"sourceRoot":""}