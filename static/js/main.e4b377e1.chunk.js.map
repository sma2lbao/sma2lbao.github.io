{"version":3,"sources":["components/base/Loading/LoadingDefault.tsx","components/base/Loading/index.ts","components/base/Exception/ExceptionDefault.tsx","components/base/Exception/index.tsx","components/base/AspectRatioBox/AspectRatioDefault.tsx","components/base/AspectRatioBox/index.ts","components/base/Icons/Logo.tsx","components/base/Icons/index.tsx","theme/overrides/index.ts","theme/overrides/MuiTabs.ts","theme/overrides/MuiTab.ts","theme/typography.ts","theme/palette.ts","theme/custom/index.ts","theme/custom/layout.ts","theme/custom/base.ts","theme/CustomThemeProvider.tsx","layouts/Main/modules/Sidebar/useMenus.tsx","layouts/Main/modules/Sidebar/index.tsx","layouts/Main/modules/Topbar/components/Search.tsx","layouts/Main/modules/Topbar/components/Account.tsx","layouts/Main/modules/Topbar/index.tsx","layouts/RouteWithLayout/index.tsx","layouts/Main/index.tsx","layouts/Main/modules/Sidebar/useSidebar.tsx","views/Home/modules/Aider/index.tsx","views/Home/modules/Recommend/Shadow.tsx","views/Home/modules/Recommend/index.tsx","views/Home/modules/Topic/index.tsx","views/Home/index.tsx","views/public/H5NotSupported/index.tsx","router/index.tsx","components/base/Message/index.tsx","graphql/cache.ts","graphql/local/schema.ts","common/constants/gql-exception.constant.ts","graphql/__mock__/resolvers/index.ts","graphql/__mock__/resolvers/user.mock.ts","graphql/__mock__/resolvers/character.mock.ts","graphql/index.ts","App.tsx","serviceWorker.ts","index.tsx","hooks/router.helper.ts","hooks/follow.helper.ts","hooks/auth.helper.ts","hooks/index.ts","common/constants/default.constant.ts","common/constants/route.constant.ts","schema.tsx","graphql/variables/index.ts","components/base/Placeholder/PlaceholderDefault.tsx","components/base/Placeholder/index.ts","components/public/SpecialBox/SpecialBoxDefault.tsx","components/public/SpecialBox/SpecialBoxText.tsx","components/public/SpecialBox/index.tsx","components/app/Duration/index.tsx","components/app/Media/MediaNormal.tsx","components/app/Media/MediaOwn.tsx","components/app/Media/MediaPlain.tsx","components/app/Media/withTool.tsx","components/app/Media/index.ts","components/base/Image/index.tsx","layouts/PageLayout/modules/AiderScreen.tsx","layouts/PageLayout/modules/BodyScreen.tsx","layouts/PageLayout/modules/ContentScreen.tsx","layouts/PageLayout/modules/FullScreen.tsx","layouts/PageLayout/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","backgroundClip","fontWeight","color","backgroundRepeat","backgroundImage","backgroundSize","animation","display","flexDirection","justifyContent","alignItems","width","props","height","flex","padding","spacing","logo","custom","base","icon","large","backgroundPosition","LoadingDefault","classes","title","subtitle","children","className","Icon","clsx","Typography","variant","defaultProps","palette","text","secondary","ExceptionDefault","Exception","overflow","aspect","paddingTop","ratio","position","backgroundColor","container","top","left","AspectRatioDefault","AspectRatioBox","iconWrap","Logo","MuiCssBaseline","lineHeight","body","minWidth","MuiTabs","MuiTab","tertiary","main","layout","size","parent","fontSize","medium","small","CustomThemeContext","React","createMuiTheme","CustomThemeProvider","overrides","typography","customTheme","setCustomTheme","ThemeProvider","Provider","value","payload","customPayload","newCustomTheme","menus","id","Home","label","HourglassEmpty","path","HOME","disabled","Movie","SHADOW_HOME","Person","useMenus","useRouteMatch","setParent","child","setChild","undefined","curParentMenu","curChildMenu","i","length","find","pid","cid","toolbar","mixins","flexShrink","parentIcon","childWrap","childItem","active","primary","openWrap","transform","Sidebar","ref","hasExpand","setHasExpand","rest","parentMenu","childMenu","RouterHelper","useRouterHelper","vid","setVid","handleCloseDrawer","Drawer","open","onClose","IconButton","onClick","ChevronLeft","map","idx","key","push","handleParentClick","hidden","Breadcrumbs","aria-label","Link","index","handleChildClick","Placeholder","ChevronRight","search","borderRadius","shape","fade","common","white","margin","pointerEvents","input","paddingRight","transition","transitions","create","Search","word","setWord","InputBase","onChange","e","target","placeholder","inputProps","onKeyDown","event","keyCode","gotoSearch","avatar","Account","anchorEl","setAnchorEl","useAuth","hasLogged","member","clearAccessToken","_close","Box","mx","currentTarget","Avatar","alt","username","src","AccountCircle","Menu","keepMounted","Boolean","MenuItem","Button","redirectAuthLogin","appBar","zIndex","drawer","boxShadow","shadows","marginLeft","Topbar","useCustomTheme","changeCustomTheme","changeThemeType","type","AppBar","Toolbar","gotoHome","gotoShadowUpload","AddCircle","Tooltip","TransitionComponent","Zoom","placement","enterDelay","arrow","Brightness1","Brightness2","Divider","Authority","background","default","shiftMain","easing","sharp","duration","leavingScreen","minHeight","Main","hideSidebar","isLargeDesktop","useMediaQuery","force","setForce","val","useSidebar","paper","MainWithoutSidebar","RouteWithLayout","Layout","Component","component","Loading","loading","lazy","authority","GUEST","render","matchProps","Helmet","fallback","Aider","useUserUrgesQuery","data","error","List","user_urges","user","ListItem","gotoProfile","ListItemAvatar","ListItemText","noWrap","nickname","description","SpecialBox","ShadowRecommend","useShadowUrgesQuery","paddingY","gotoShadowHome","style","cursor","shadow_urges","GridList","cellHeight","cols","shadow","GridListTile","Media","onClickRoot","gotoShadow","onClickAuthor","author","loadingNode","_","Recommend","VirtualizeSwipeableViews","virtualize","SwipeableViews","head","headItem","bannerRoot","banner","bannerItem","Topic","setIndex","useCurrentTopicQuery","mb","gutterBottom","current_topic","top_shadows","KeyboardArrowLeft","onChangeIndex","enableMouseEvents","slideRenderer","params","items","mod","KeyboardArrowRight","item","placeholderTitle","top_shadow","showDescription","paddingLeft","aider","borderLeft","borderColor","divider","alertWrap","notice_flag","useReactiveVar","noticeFlagVar","Collapse","in","Alert","severity","href","sticky","right","bottom","H5NotSupported","marginTop","ShadowHome","Shadow","ShadowPlay","ShadowUpload","Profile","Personal","Resume","Login","Completion","NotFound","Forbidden","InternalServerError","Test","AppRoute","test","navigator","userAgent","window","location","pathname","includes","origin","exact","MainLayout","MEMBER","mountPoint","document","createElement","appendChild","ShowSnackbar","enqueueSnackbar","useSnackbar","message","options","Message","success","msg","opts","this","toast","warning","info","ReactDOM","maxSnack","cache","InMemoryCache","typePolicies","User","fields","read","DEFAULT_USER_AVATAR","DEFAULT_USER_NICKNAME","DEFAULT_USER_DESCRIPTION","Character","PlatformAuthWay","http_domain","httpDomainVar","BaseExceptionStatus","MediumExceptionStatus","UserExceptionStatus","FollowExceptionStutus","ShadowExceptionStatus","typeDefs","gql","resolvers","Query","uid","uploadLink","createUploadLink","uri","process","wsLink","WebSocketLink","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","authLink","setContext","headers","access_token","localStorage","getItem","authorization","errorLink","onError","graphQLErrors","networkError","response","operationName","errors","forEach","locations","preventDuplicate","Sentry","console","log","some","status","USER_UNAUTHORIZED","accessTokenVar","removeItem","REACT_APP_ENV","mockResolvers","client","ApolloClient","link","from","connectToDevTools","App","CssBaseline","hostname","match","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","enabled","dsn","rootElement","getElementById","hasChildNodes","hydrate","serviceWorker","ready","then","registration","unregister","history","useHistory","useLocation","state","replace","pathOrlocation","stateOptions","PROFILE","shadow_id","SHADOW_DETAIL","gotoShadowPlay","SHADOW_PLAY","SHADOW_UPLOAD","gotoAuthCompletion","AUTH_COMPLETION","referrer","AUTH_LOGIN","__referrer_from__","SEARCH","useFollowHelper","owner_uid","following","setFollowing","useIsFollowingLazyQuery","onCompleted","is_following","isFollowing","variables","useCreateFollowMutation","createFollow","useRemoveFollowMutation","removeFollow","toggleFollow","follow","setHasLogged","setMember","useMeLazyQuery","meQuery","me","verify","email","setAccessToken","setItem","DEFULAT_SHADOW_COVER","DEFAULT_PROFILE_COVER","Region","ReviewMedium","VoteStatus","MeFragmentDoc","AuthorFragmentDoc","ShadowSourceFragmentDoc","ShadowFragmentDoc","ReviewFragmentDoc","LoginDocument","useLoginMutation","baseOptions","ApolloReactHooks","SendRegisterEmailDocument","useSendRegisterEmailMutation","CreateUserWithCodeDocument","useCreateUserWithCodeMutation","UpdateUserDocument","useUpdateUserMutation","CreateShadowDocument","useCreateShadowMutation","CreateOrUpdateVoteDocument","useCreateOrUpdateVoteMutation","VoteDocument","useVoteLazyQuery","CreateReviewDocument","useCreateReviewMutation","UploadFileOssDocument","useUploadFileOssMutation","CreateFollowDocument","RemoveFollowDocument","PlatformAuthWayDocument","usePlatformAuthWayQuery","MeDocument","useMeQuery","CurrentTopicDocument","ShadowUrgesDocument","UserUrgesDocument","PlaylistsPaginatedDocument","usePlaylistsPaginatedQuery","ShadowDocument","useShadowQuery","ShadowsPaginatedDocument","useShadowsPaginatedQuery","UserShadowsPaginatedDocument","useUserShadowsPaginatedQuery","ShadowUrgesByShadowDocument","useShadowUrgesByShadowQuery","ShadowNextUrgesByShadowDocument","useShadowNextUrgesByShadowQuery","ReviewsPaginatedDocument","useReviewsPaginatedQuery","SearchShadowsPaginatedDocument","useSearchShadowsPaginatedQuery","IsFollowingDocument","UserDocument","useUserQuery","FansTotalDocument","useFansTotalQuery","FollowsTotalDocument","useFollowsTotalQuery","ReviewCreatedDocument","useReviewCreatedSubscription","makeVar","PlaceholderDefault","SpecialBoxDefault","placeholderSubtitle","PlaceholderNode","placeholderNode","loadingTitle","loadingSubtitle","LoadingNode","errorTitle","errorSubtitle","ErrorNode","errorNode","Tag","SpecialBoxText","Duration","unit","hh","moment","hours","mm","minutes","ss","seconds","format","padStart","wrap","cover","border","breakpoints","down","desc","textOverflow","MediaNormal","handleClickAuthor","stopPropagation","Image","aspectRatio","name","create_at","MediaNormalLoading","Skeleton","MediaOwn","MediaPlain","tool","withTool","onDelete","Delete","ImageStatus","image","objectFit","setStatus","Failuare","onLoad","Success","maxWidth","agent","keys","Object","top_normal","maxHeight","entity","top_current","assign","AiderScreen","BodyScreen","ContentScreen","FullScreen"],"mappings":"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","file":"static/js/main.e4b377e1.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { LoadingBaseProps } from \"./loading\";\nimport { Icon, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"-webkit-background-clip\": \"text\",\n      backgroundClip: \"text\",\n      fontWeight: \"bold\",\n      color: \"transparent\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundImage:\n        \"linear-gradient(90deg, #e6e6e6 25%, #d6d6d6 37%, #e6e6e6 63%)\",\n      backgroundSize: \"400% 100%\",\n      animation: \"$skeleton-busy-animate 2s ease infinite\",\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: LoadingBaseProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: LoadingBaseProps) => {\n        return props.height ?? \"100%\";\n      },\n      flex: 1,\n      padding: theme.spacing(2, 0)\n    },\n    logo: theme.custom.base.icon.large,\n    \"@keyframes skeleton-busy-animate\": {\n      \"0%\": {\n        backgroundPosition: \"100% 50%\"\n      },\n      \"100%\": {\n        backgroundPosition: \"0 50%\"\n      }\n    }\n  })\n);\n\nexport const LoadingDefault: React.FC<LoadingBaseProps> = (\n  props: LoadingBaseProps\n) => {\n  const classes = useStyles(props);\n  const { title, subtitle, children } = props;\n\n  return (\n    <div className={classes.root}>\n      <Icon className={clsx(\"iconfont icon-logo\", classes.logo)}></Icon>\n      {title && <Typography variant=\"h6\">{title}</Typography>}\n      {subtitle && <Typography variant=\"subtitle1\">{subtitle}</Typography>}\n      {children}\n    </div>\n  );\n};\n\nLoadingDefault.defaultProps = {\n  title: \"Loading\"\n};\n","import { LoadingDefault } from \"./LoadingDefault\";\n\nexport default LoadingDefault;\nexport const Loading = LoadingDefault;\nexport * from \"./LoadingDefault\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { BaseExceptionProps } from \"./exception\";\nimport { Icon, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: BaseExceptionProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: BaseExceptionProps) => {\n        return props.height ?? \"100%\";\n      },\n      color: theme.palette.text.secondary,\n      flex: 1,\n      padding: theme.spacing(2, 0)\n    },\n    icon: theme.custom.base.icon.large\n  })\n);\n\nexport const ExceptionDefault: React.FC<BaseExceptionProps> = (\n  props: BaseExceptionProps\n) => {\n  const classes = useStyles(props);\n  const { title, subtitle, children } = props;\n  return (\n    <div className={classes.root}>\n      <Icon className={clsx(\"iconfont icon-404\", classes.icon)}></Icon>\n      {title && <Typography variant=\"h6\">{title}</Typography>}\n      {subtitle && <Typography variant=\"subtitle1\">{subtitle}</Typography>}\n      {children}\n    </div>\n  );\n};\n\nExceptionDefault.defaultProps = {\n  title: \"糟糕，出错啦\"\n};\n","import { ExceptionDefault } from \"./ExceptionDefault\";\n\nexport default ExceptionDefault;\nexport const Exception = ExceptionDefault;\nexport * from \"./ExceptionDefault\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nexport interface AspectRationProps {\n  ratio?: number;\n\n  children?: React.ReactNode;\n\n  height?: string | number;\n\n  width?: string | number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: (props: AspectRationProps) => {\n        return props.height || \"auto\";\n      },\n      width: (props: AspectRationProps) => {\n        return props.width || \"100%\";\n      },\n      //   fontSize: 0,\n      overflow: \"hidden\"\n    },\n    aspect: {\n      paddingTop: (props: AspectRationProps) => {\n        return `calc(1 / ${props.ratio} * 100%)`;\n      },\n      position: \"relative\",\n      backgroundColor: \"transparent\"\n    },\n    container: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      overflow: \"hidden\"\n    }\n  })\n);\n\nexport const AspectRatioDefault: React.FC<AspectRationProps> = (\n  props: AspectRationProps\n) => {\n  const classes = useStyles(props);\n  const { children, ratio } = props;\n\n  return (\n    <div className={classes.root}>\n      {ratio ? (\n        <div className={classes.aspect}>\n          <div className={classes.container}>{children}</div>\n        </div>\n      ) : (\n        <div className={classes.root}>{children}</div>\n      )}\n    </div>\n  );\n};\n\nexport default AspectRatioDefault;\n","import { AspectRatioDefault } from \"./AspectRatioDefault\";\n\nexport default AspectRatioDefault;\nexport const AspectRatioBox = AspectRatioDefault;\nexport * from \"./AspectRatioDefault\";\n","import React from \"react\";\nimport {\n  Icon,\n  IconProps,\n  makeStyles,\n  Theme,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    iconWrap: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  })\n);\n\nexport const Logo = (props: IconProps) => {\n  const classes = useStyles();\n  return (\n    <Icon\n      {...props}\n      className={clsx(\"iconfont icon-logo\", classes.iconWrap)}\n    ></Icon>\n  );\n};\n","export * from \"./Logo\";\n","import MuiTabs from \"./MuiTabs\";\nimport MuiTab from \"./MuiTab\";\n\nexport default {\n  MuiCssBaseline: {\n    \"@global\": {\n      \".iconfont\": {\n        lineHeight: \"1\"\n      },\n      body: {\n        minWidth: 960\n      }\n    }\n  },\n  MuiTabs,\n  MuiTab\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","export default {\n  root: {\n    // color: '#fff',\n  }\n};\n","export default {};\n","import {\n  PaletteOptions,\n  PaletteColorOptions\n} from \"@material-ui/core/styles/createPalette\";\n\nexport default {\n  tertiary: {\n    main: \"#ccc\"\n  } as Partial<PaletteColorOptions>\n} as Partial<PaletteOptions>;\n","import layout, { LayoutOptions } from \"./layout\";\nimport base, { BaseOptions } from \"./base\";\n\nexport interface CustomOption {\n  layout: LayoutOptions;\n  base: BaseOptions;\n}\n\nexport default {\n  layout,\n  base\n};\n","export interface LayoutOptions {\n  size: {\n    parent: {\n      width: React.CSSProperties[\"width\"];\n    };\n  };\n}\n\nexport default {\n  size: {\n    parent: {\n      width: 80\n    }\n  }\n} as Partial<LayoutOptions>;\n","export interface BaseOptions {\n  icon: {\n    large: {\n      fontSize: React.CSSProperties[\"fontSize\"];\n    };\n    medium: {\n      fontSize: React.CSSProperties[\"fontSize\"];\n    };\n    small: {\n      fontSize: React.CSSProperties[\"fontSize\"];\n    };\n  };\n}\n\nexport default {\n  icon: {\n    large: {\n      fontSize: 120\n    },\n    medium: {\n      fontSize: 80\n    },\n    small: {\n      fontSize: 60\n    }\n  }\n} as Partial<BaseOptions>;\n","import * as React from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme, Theme, ThemeOptions } from \"@material-ui/core/styles\";\n// import * as Colors from '@material-ui/core/colors'\nimport overrides from \"./overrides\";\nimport typography from \"./typography\";\nimport palette from \"./palette\";\nimport custom, { CustomOption } from \"./custom\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    custom: CustomOption;\n  }\n}\n\nconst CustomThemeContext = React.createContext<\n  [\n    Theme,\n    (payload: ThemeOptions, customPayload?: Partial<CustomOption>) => void\n  ]\n>([createMuiTheme(), () => {}]);\n\nexport const CustomThemeProvider: React.FC = props => {\n  const [customTheme, setCustomTheme] = React.useState<Theme>(() => {\n    return createMuiTheme(\n      {\n        palette,\n        overrides,\n        typography\n      },\n      {\n        custom\n      }\n    );\n  });\n\n  const handleChangeCustomTheme = (\n    payload: ThemeOptions,\n    customPayload?: Partial<CustomOption>\n  ) => {\n    const newCustomTheme = createMuiTheme(\n      {\n        palette,\n        overrides,\n        typography,\n        ...payload\n      },\n      {\n        custom,\n        ...customPayload\n      }\n    );\n    setCustomTheme(newCustomTheme);\n  };\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <CustomThemeContext.Provider\n        value={[customTheme, handleChangeCustomTheme]}\n      >\n        {props.children}\n      </CustomThemeContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport const useCustomTheme = (): [\n  Theme,\n  (payload: ThemeOptions, customPayload?: Partial<CustomOption>) => void\n] => {\n  const [custom, changeCustom] = React.useContext(CustomThemeContext);\n  return [custom, changeCustom];\n};\n\nexport default CustomThemeProvider;\n","import * as React from \"react\";\nimport { Home, Movie, Person, HourglassEmpty } from \"@material-ui/icons\";\nimport { HOME, SHADOW_HOME } from \"@/common/constants/route.constant\";\nimport { useRouteMatch } from \"react-router\";\n\nexport interface MenuProps {\n  id: number;\n\n  icon: React.ReactElement;\n\n  label: string;\n\n  value?: string;\n\n  path?: string;\n\n  disabled?: boolean;\n\n  children?: Omit<MenuProps, \"children\">[];\n}\n\nconst HomeMenus: MenuProps = {\n  id: 1000,\n  icon: <Home />,\n  label: \"Home\",\n  children: [\n    {\n      id: 1001,\n      icon: <HourglassEmpty />,\n      label: \"Home\",\n      path: HOME\n    },\n    {\n      id: 1002,\n      icon: <HourglassEmpty />,\n      label: \"History Topics\",\n      path: \"/topics\",\n      disabled: true\n    }\n  ]\n};\n\nconst ShadowMenus: MenuProps = {\n  id: 2000,\n  icon: <Movie />,\n  label: \"Shadow\",\n  value: \"shadow\",\n  path: SHADOW_HOME\n  // children: [],\n};\n\nconst UserMenus: MenuProps = {\n  id: 3000,\n  icon: <Person />,\n  label: \"My\",\n  value: \"user\",\n  path: \"\",\n  children: [\n    {\n      id: 3001,\n      icon: <HourglassEmpty />,\n      label: \"My Homepage\",\n      value: \"personal\",\n      path: \"/personal\"\n    },\n    {\n      id: 3002,\n      icon: <HourglassEmpty />,\n      label: \"Setting\",\n      value: \"setting\",\n      path: \"/setting\",\n      disabled: true\n    }\n  ]\n};\n\nconst menus: MenuProps[] = [HomeMenus, ShadowMenus, UserMenus];\n\nexport const useMenus = () => {\n  const { path } = useRouteMatch();\n  const [parent, setParent] = React.useState<MenuProps | undefined>();\n  const [child, setChild] = React.useState<\n    Omit<MenuProps, \"children\"> | undefined\n  >();\n  React.useEffect(() => {\n    if (path === \"/\") {\n      setParent(menus[0]);\n      setChild(menus[0].children ? menus[0].children[0] : undefined);\n      return;\n    }\n    let curParentMenu: MenuProps | undefined = undefined;\n    let curChildMenu: Omit<MenuProps, \"children\"> | undefined = undefined;\n    for (let i = 0; i < menus.length; i++) {\n      const parent = menus[i];\n      const child = parent?.children?.find(child => child.path === path);\n      if (child) {\n        curParentMenu = parent;\n        curChildMenu = child;\n        break;\n      } else if (parent.path && path === parent.path) {\n        curParentMenu = parent;\n        break;\n      }\n    }\n    setParent(curParentMenu);\n    setChild(curChildMenu);\n  }, [path]);\n\n  return {\n    menus,\n    parent,\n    child,\n    pid: parent?.id,\n    cid: child?.id\n  };\n};\n\nexport default useMenus;\n","import * as React from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  // Icon,\n  Typography,\n  Icon,\n  Breadcrumbs,\n  Link\n  // Divider,\n} from \"@material-ui/core\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { DrawerProps } from \"@material-ui/core/Drawer\";\nimport useMenus, { MenuProps } from \"./useMenus\";\nimport clsx from \"clsx\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { ChevronRight, ChevronLeft } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\n\ninterface SidebarProps extends Omit<DrawerProps, \"open\" | \"onClose\"> {\n  hasExpand: boolean;\n  setHasExpand: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    toolbar: {\n      padding: theme.spacing(0, 2),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      ...theme.mixins.toolbar\n    },\n    root: {\n      display: \"flex\"\n    },\n    parent: {\n      // width: theme.custom?.layout.size.parent.width,\n      flexShrink: 0,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    parentIcon: {\n      padding: theme.spacing(1)\n    },\n    child: {\n      flex: 1,\n      overflow: \"hidden\",\n      padding: theme.spacing(1, 2)\n    },\n    childWrap: {\n      padding: theme.spacing(1, 0)\n    },\n    childItem: {\n      padding: theme.spacing(1, 0)\n    },\n    active: {\n      color: theme.palette.primary.main\n    },\n    disabled: {\n      color: theme.palette.text.disabled\n    },\n    openWrap: {\n      position: \"fixed\",\n      left: \"0\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\"\n    }\n  });\n});\n\nexport const Sidebar = (props: SidebarProps, ref) => {\n  const { hasExpand, setHasExpand, ...rest } = props;\n  const { menus, pid, cid, parent: parentMenu, child: childMenu } = useMenus();\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [vid, setVid] = React.useState<number | undefined>(pid);\n  React.useEffect(() => {\n    setVid(pid);\n  }, [pid]);\n\n  const handleParentClick = (parent: MenuProps) => {\n    setVid(parent.id);\n    if (parent.path && !parent.disabled && parent.id !== pid) {\n      RouterHelper.push(parent.path);\n    }\n  };\n\n  const handleChildClick = (child: MenuProps) => {\n    if (child.path && !child.disabled && child.id !== cid) {\n      RouterHelper.push(child.path);\n    }\n  };\n\n  const handleCloseDrawer = () => {\n    setHasExpand(false);\n  };\n\n  const handleOpenDrawer = () => {\n    setHasExpand(true);\n  };\n\n  return (\n    <>\n      <Drawer {...rest} open={hasExpand} onClose={handleCloseDrawer}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleCloseDrawer}>\n            <ChevronLeft />\n          </IconButton>\n        </div>\n        <div className={classes.root}>\n          <div className={classes.parent}>\n            {menus.map((parent, idx) => (\n              <div key={idx} className={classes.parentIcon}>\n                <IconButton\n                  size=\"medium\"\n                  color={\n                    pid === parent.id\n                      ? \"primary\"\n                      : vid === parent.id\n                      ? \"secondary\"\n                      : \"default\"\n                  }\n                  onClick={() => handleParentClick(parent)}\n                >\n                  <Icon>{parent.icon}</Icon>\n                </IconButton>\n              </div>\n            ))}\n          </div>\n          {menus.map((parent, idx) => {\n            return (\n              <div\n                key={idx}\n                className={classes.child}\n                hidden={parent.id !== vid}\n              >\n                {parent.children ? (\n                  <div>\n                    <Breadcrumbs aria-label=\"breadcrumb\">\n                      <Link color=\"inherit\">{parentMenu?.label || \"--\"}</Link>\n                      <Link color=\"inherit\">{childMenu?.label || \"--\"}</Link>\n                      {/* <Typography color=\"textPrimary\">Breadcrumb</Typography> */}\n                    </Breadcrumbs>\n                    <div className={classes.childWrap}>\n                      {parent?.children.map((child, index) => {\n                        return (\n                          <div\n                            key={index}\n                            onClick={() => handleChildClick(child)}\n                            className={clsx(classes.childItem, {\n                              [classes.active]: child.id === cid,\n                              [classes.disabled]: child.disabled\n                            })}\n                          >\n                            <Typography variant=\"subtitle2\">\n                              {child.label}\n                            </Typography>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                ) : (\n                  <Placeholder size={80} title=\"no children router\" />\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </Drawer>\n      <div className={classes.openWrap} hidden={hasExpand}>\n        <IconButton onClick={handleOpenDrawer}>\n          <ChevronRight />\n        </IconButton>\n        {/* open menu */}\n      </div>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import * as React from \"react\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport { Theme, InputBase } from \"@material-ui/core\";\nimport { createStyles, makeStyles, fade } from \"@material-ui/core/styles\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    search: {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      margin: theme.spacing(0, 1)\n    },\n    icon: {\n      pointerEvents: \"none\",\n      margin: theme.spacing(0, 1)\n    },\n    input: {\n      color: \"inherit\",\n      paddingRight: theme.spacing(1),\n      transition: theme.transitions.create(\"width\"),\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  });\n});\n\nexport default function Search() {\n  const classes = useStyles();\n  const [word, setWord] = React.useState(\"\");\n  const RouterHelper = useRouterHelper();\n\n  const handleKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    if (event.keyCode === 13 && word) {\n      RouterHelper.gotoSearch(word);\n    }\n  };\n\n  return (\n    <div className={classes.search}>\n      <SearchIcon className={classes.icon} />\n      <InputBase\n        value={word}\n        onChange={e => setWord(e.target.value)}\n        classes={{ input: classes.input }}\n        placeholder=\"搜索\"\n        inputProps={{ \"aria-label\": \"Search\" }}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { AccountCircle } from \"@material-ui/icons\";\nimport {\n  Menu,\n  MenuItem,\n  Button,\n  Avatar,\n  makeStyles,\n  Theme,\n  createStyles,\n  Box\n} from \"@material-ui/core\";\nimport { useAuth, useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    avatar: {\n      width: theme.spacing(4.5),\n      height: theme.spacing(4.5)\n    }\n  });\n});\n\nexport const Account: React.FC = () => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const { hasLogged, member, clearAccessToken } = useAuth();\n  const RouterHelper = useRouterHelper();\n  const classes = useStyles();\n\n  function _close() {\n    setAnchorEl(null);\n  }\n\n  const handleLogin = () => {\n    RouterHelper.redirectAuthLogin();\n  };\n\n  const handleLogout = () => {\n    _close();\n    clearAccessToken();\n  };\n\n  return (\n    <Box mx={0.5}>\n      {hasLogged ? (\n        <>\n          <div\n            onClick={event => {\n              setAnchorEl(event.currentTarget);\n            }}\n          >\n            {member?.avatar ? (\n              <Avatar\n                className={classes.avatar}\n                alt={member.username}\n                src={member.avatar}\n              ></Avatar>\n            ) : (\n              <Avatar className={classes.avatar} alt={member?.username}>\n                <AccountCircle />\n              </Avatar>\n            )}\n          </div>\n          <Menu\n            id=\"account-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={_close}\n          >\n            <MenuItem onClick={handleLogout}>退出</MenuItem>\n          </Menu>\n        </>\n      ) : (\n        <>\n          <Button onClick={handleLogin}>登录</Button>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default Account;\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  // Typography,\n  Box,\n  Divider,\n  IconButton,\n  Zoom,\n  Tooltip\n} from \"@material-ui/core\";\nimport { AddCircle, Brightness1, Brightness2 } from \"@material-ui/icons\";\nimport Search from \"./components/Search\";\nimport Account from \"./components/Account\";\n// import ColorPicker from \"./components/ColorPicker\";\n// import Notice from \"./components/Notice\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { Logo } from \"@/components/base/Icons\";\nimport { useCustomTheme } from \"@/theme\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      boxShadow: theme.shadows[0]\n    },\n    icon: {\n      marginLeft: theme.spacing(2)\n    },\n    toolbar: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    search: {\n      margin: theme.spacing(0, 1)\n    }\n  });\n});\n\nexport default function Topbar() {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [customTheme, changeCustomTheme] = useCustomTheme();\n  const changeThemeType = (type: \"dark\" | \"light\") => {\n    // theme.palette.type = type;\n    changeCustomTheme({\n      palette: {\n        type: type\n      }\n    });\n  };\n\n  return (\n    <>\n      <AppBar color=\"inherit\" position=\"fixed\" className={classes.appBar}>\n        <Toolbar classes={{ root: classes.toolbar }}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Logo fontSize=\"large\" onClick={RouterHelper.gotoHome} />\n            <IconButton\n              onClick={RouterHelper.gotoShadowUpload}\n              size=\"small\"\n              className={classes.icon}\n            >\n              <AddCircle fontSize=\"small\" />\n            </IconButton>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            {/* <ColorPicker /> */}\n            <Search />\n            {/* <Notice /> */}\n            <>\n              <Tooltip\n                TransitionComponent={Zoom}\n                title=\"切换模式\"\n                placement=\"bottom\"\n                enterDelay={600}\n                arrow\n              >\n                {customTheme.palette.type === \"dark\" ? (\n                  <IconButton onClick={() => changeThemeType(\"light\")}>\n                    <Brightness1 color=\"inherit\" />\n                  </IconButton>\n                ) : (\n                  <IconButton onClick={() => changeThemeType(\"dark\")}>\n                    <Brightness2 color=\"inherit\" />\n                  </IconButton>\n                )}\n              </Tooltip>\n            </>\n            <Account />\n          </Box>\n        </Toolbar>\n        <Divider />\n      </AppBar>\n      {/* <Toolbar></Toolbar> */}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\nimport { LoadingDefault } from \"@/components/base/Loading\";\nimport { useAuth, useRouterHelper } from \"@/hooks\";\nimport { Helmet } from \"react-helmet\";\n// import Message from \"@/components/base/Message\";\n\ninterface IProps extends RouteProps {\n  layout?: any;\n  component: any;\n  lazy?: boolean;\n  loading?: any;\n  authority?: Authority;\n}\n\nexport enum Authority {\n  GUEST,\n  MEMBER,\n  ADMIN,\n  ROOT\n}\n\nexport const RouteWithLayout = (props: IProps) => {\n  const {\n    layout: Layout,\n    component: Component,\n    loading: Loading,\n    lazy,\n    authority,\n    ...rest\n  } = props;\n  const RouterHelper = useRouterHelper();\n  const { hasLogged } = useAuth();\n  if (authority !== Authority.GUEST && !hasLogged) {\n    // Message.toast(\"请先登录\");\n    RouterHelper.redirectAuthLogin(true);\n  }\n  return Layout ? (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <>\n          <Helmet>\n            <title>miss | 相忘于江湖</title>\n          </Helmet>\n          <Layout>\n            {lazy ? (\n              <React.Suspense\n                fallback={Loading ? <Loading /> : <LoadingDefault />}\n              >\n                <Component {...matchProps} />\n              </React.Suspense>\n            ) : (\n              <Component {...matchProps} />\n            )}\n          </Layout>\n        </>\n      )}\n    />\n  ) : (\n    <Route\n      {...rest}\n      render={matchProps => {\n        if (lazy) {\n          return (\n            <>\n              <Helmet>\n                <title>miss | 相忘于江湖</title>\n              </Helmet>\n              <React.Suspense\n                fallback={Loading ? <Loading /> : <LoadingDefault />}\n              >\n                <Component {...matchProps} />\n              </React.Suspense>\n            </>\n          );\n        } else {\n          return (\n            <>\n              <Helmet>\n                <title>miss | 相忘于江湖</title>\n              </Helmet>\n              <Component {...matchProps} />\n            </>\n          );\n        }\n      }}\n    />\n  );\n};\nRouteWithLayout.defaultProps = {\n  authority: Authority.GUEST\n};\n\nexport default RouteWithLayout;\n","import * as React from \"react\";\nimport {\n  makeStyles,\n  createStyles,\n  Theme\n  // useTheme\n} from \"@material-ui/core/styles\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { Sidebar, Topbar } from \"./modules\";\nimport clsx from \"clsx\";\nimport { useSidebar } from \"./modules/Sidebar/useSidebar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      backgroundColor: theme.palette.background.default\n    },\n    drawer: {\n      width: 290\n    },\n    shiftMain: {\n      marginLeft: 290\n    },\n    main: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      // minHeight: \"100%\",\n      minHeight: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    }\n  })\n);\n\ninterface MainProps {\n  children?: React.ReactNode;\n  hideSidebar?: boolean;\n}\n\nconst Main: React.FC<MainProps> = (props: MainProps) => {\n  const { children, hideSidebar } = props;\n  const classes = useStyles();\n  const { isLargeDesktop, hasExpand, setHasExpand } = useSidebar();\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <div>\n        {!hideSidebar && (\n          <Sidebar\n            hasExpand={hasExpand}\n            setHasExpand={setHasExpand}\n            variant={isLargeDesktop ? \"persistent\" : \"temporary\"}\n            classes={{ paper: classes.drawer }}\n          />\n        )}\n        <main\n          className={clsx(classes.main, {\n            [classes.shiftMain]: hasExpand && isLargeDesktop && !hideSidebar\n          })}\n        >\n          <Toolbar />\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport const MainWithoutSidebar: React.FC = props => {\n  return <Main hideSidebar>{props.children}</Main>;\n};\n\nexport default Main;\n","import * as React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nexport const useSidebar = () => {\n  const isLargeDesktop = useMediaQuery(\"(min-width: 1600px)\");\n  const [hasExpand, setHasExpand] = React.useState<boolean>(\n    isLargeDesktop ? true : false\n  );\n  const [force, setForce] = React.useState(false);\n\n  React.useEffect(() => {\n    setHasExpand(isLargeDesktop && !force ? true : hasExpand);\n  }, [isLargeDesktop, hasExpand, force]);\n\n  const handleSetHasExpand = (val: boolean) => {\n    setForce(true);\n    setHasExpand(val);\n  };\n\n  return {\n    hasExpand,\n    setHasExpand: handleSetHasExpand,\n    isLargeDesktop\n  };\n};\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Typography\n  // Button,\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useUserUrgesQuery } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { SpecialBox } from \"@/components/public/SpecialBox\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    title: {\n      padding: theme.spacing(1, 2)\n    }\n  })\n);\n\nexport default function Aider() {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n\n  const { data, loading, error } = useUserUrgesQuery();\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography className={classes.title} variant=\"h6\">\n          贡献榜\n        </Typography>\n        <List>\n          {data?.user_urges.length ? (\n            data.user_urges.map((user, i) => {\n              return (\n                <ListItem\n                  key={i}\n                  onClick={() => RouterHelper.gotoProfile(user?.username)}\n                >\n                  <ListItemAvatar>\n                    <Avatar src={user.avatar}></Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography noWrap>{user.nickname}</Typography>\n                    <Typography noWrap variant=\"caption\">\n                      {user.description}\n                    </Typography>\n                  </ListItemText>\n                  {/* <ListItemSecondaryAction>\n                    <Button>\n                      <Typography>关注</Typography>\n                    </Button>\n                  </ListItemSecondaryAction> */}\n                </ListItem>\n              );\n            })\n          ) : (\n            <SpecialBox loading={loading} error={!!error} />\n          )}\n        </List>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Typography, Box, Link } from \"@material-ui/core\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\nimport { useShadowUrgesQuery } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { SpecialBox } from \"@/components/public/SpecialBox\";\n\nexport default function ShadowRecommend() {\n  const RouterHelper = useRouterHelper();\n  const { data, loading, error } = useShadowUrgesQuery();\n\n  return (\n    <Box padding={0}>\n      <Box\n        paddingY={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Typography component=\"span\" variant=\"h6\">\n          最新发布\n        </Typography>\n        <Link\n          onClick={RouterHelper.gotoShadowHome}\n          color=\"textSecondary\"\n          variant=\"caption\"\n          style={{ cursor: \"pointer\" }}\n        >\n          更多\n        </Link>\n      </Box>\n\n      {data?.shadow_urges.length ? (\n        <GridList cellHeight=\"auto\" cols={4}>\n          {data.shadow_urges.map((shadow, index: number) => {\n            return (\n              // <Grow in>\n              <GridListTile key={index} cols={1}>\n                <MediaNormal\n                  {...shadow}\n                  onClickRoot={() => RouterHelper.gotoShadow(shadow.id)}\n                  onClickAuthor={() => {\n                    RouterHelper.gotoProfile(shadow.author.username);\n                  }}\n                />\n              </GridListTile>\n              // </Grow>\n            );\n          })}\n        </GridList>\n      ) : (\n        <SpecialBox\n          loading={loading}\n          error={!!error}\n          loadingNode={\n            <GridList cellHeight=\"auto\" cols={4}>\n              {[0, 0, 0, 0, 0, 0, 0, 0].map((_, index: number) => {\n                return (\n                  <GridListTile key={index} cols={1}>\n                    <MediaNormal loading />\n                  </GridListTile>\n                );\n              })}\n            </GridList>\n          }\n        />\n      )}\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport ShadowRecommend from \"./Shadow\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function Recommend() {\n  return (\n    <>\n      <Box>\n        <ShadowRecommend />\n      </Box>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box, Typography, IconButton } from \"@material-ui/core\";\n// import { Skeleton } from \"@material-ui/lab\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { virtualize } from \"react-swipeable-views-utils\";\nimport { mod } from \"react-swipeable-views-core\";\nimport clsx from \"clsx\";\nimport { useCurrentTopicQuery } from \"@/schema\";\nimport { SpecialBox } from \"@/components/public/SpecialBox\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    },\n    bannerRoot: {\n      flex: 1,\n      overflow: \"hidden\"\n    },\n    banner: {\n      paddingRight: \"50%\"\n    },\n    bannerItem: {\n      minHeight: 200,\n      margin: theme.spacing(0, 0.25),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      overflow: \"hidden\"\n    }\n  })\n);\n\nfunction Topic() {\n  const [index, setIndex] = React.useState(0);\n  const classes = useStyles();\n  const { data, loading, error } = useCurrentTopicQuery();\n  const RouterHelper = useRouterHelper();\n\n  return (\n    <>\n      {data ? (\n        <div className={classes.head}>\n          <div className={classes.headItem}>\n            <Box>\n              <Box mb={3}>\n                <Typography variant=\"h6\" gutterBottom>\n                  精选\n                </Typography>\n                <Typography variant=\"h5\" gutterBottom>\n                  {data?.current_topic.title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {data?.current_topic.description}\n                </Typography>\n              </Box>\n              <Box display=\"flex\" alignItems=\"center\">\n                {(() => {\n                  const top_shadows = data?.current_topic.top_shadows || [];\n                  if (top_shadows.length > 2) {\n                    return (\n                      <React.Fragment>\n                        <div>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => setIndex(index - 1)}\n                          >\n                            <KeyboardArrowLeft />\n                          </IconButton>\n                        </div>\n                        <div className={classes.bannerRoot}>\n                          <VirtualizeSwipeableViews\n                            className={classes.banner}\n                            index={index}\n                            onChangeIndex={index => setIndex(index)}\n                            enableMouseEvents\n                            slideRenderer={params => {\n                              const { key, index } = params;\n                              const items =\n                                data?.current_topic.top_shadows || [];\n                              const idx = mod(index, items.length);\n                              let shadow = items[idx];\n                              if (shadow) {\n                                return (\n                                  <div\n                                    key={key}\n                                    className={clsx(classes.bannerItem)}\n                                  >\n                                    <MediaNormal\n                                      {...items[idx]}\n                                      onClickRoot={() =>\n                                        RouterHelper.gotoShadow(shadow.id)\n                                      }\n                                      onClickAuthor={() =>\n                                        RouterHelper.gotoProfile(\n                                          shadow.author.username\n                                        )\n                                      }\n                                    />\n                                  </div>\n                                );\n                              }\n                            }}\n                          />\n                        </div>\n                        <div>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => setIndex(index + 1)}\n                          >\n                            <KeyboardArrowRight />\n                          </IconButton>\n                        </div>\n                      </React.Fragment>\n                    );\n                  } else if (\n                    top_shadows.length > 0 &&\n                    top_shadows.length <= 2\n                  ) {\n                    return (\n                      <React.Fragment>\n                        <div\n                          className={classes.bannerRoot}\n                          style={{ display: \"flex\" }}\n                        >\n                          {top_shadows.map((item, idx) => {\n                            return (\n                              <div\n                                key={idx}\n                                className={clsx(classes.bannerItem)}\n                                style={{ flex: 1 }}\n                              >\n                                <MediaNormal\n                                  {...item}\n                                  onClickRoot={() =>\n                                    RouterHelper.gotoShadow(item.id)\n                                  }\n                                  onClickAuthor={() =>\n                                    RouterHelper.gotoProfile(\n                                      item.author.username\n                                    )\n                                  }\n                                />\n                              </div>\n                            );\n                          })}\n                          {top_shadows.length === 1 && (\n                            <div\n                              style={{ flex: 1 }}\n                              className={clsx(classes.bannerItem)}\n                            >\n                              <SpecialBox\n                                placeholder\n                                placeholderTitle=\"敬请期待\"\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </React.Fragment>\n                    );\n                  } else {\n                    return <Placeholder title=\"敬请期待\" />;\n                  }\n                })()}\n              </Box>\n            </Box>\n          </div>\n          <div className={classes.headItem}>\n            {data.current_topic.top_shadow ? (\n              <MediaNormal\n                showDescription\n                {...data?.current_topic.top_shadow}\n                onClickRoot={() =>\n                  RouterHelper.gotoShadow(data?.current_topic?.top_shadow?.id)\n                }\n                onClickAuthor={() =>\n                  RouterHelper.gotoProfile(\n                    data?.current_topic?.top_shadow?.author?.username\n                  )\n                }\n              />\n            ) : (\n              <Placeholder title=\"敬请期待\" />\n            )}\n          </div>\n        </div>\n      ) : (\n        <SpecialBox loading={loading} error={!!error} />\n      )}\n    </>\n  );\n}\n\nexport default Topic;\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Recommend, Topic, Aider } from \"./modules\";\nimport { Divider, Collapse, Link } from \"@material-ui/core\";\nimport {\n  BodyScreen,\n  ContentScreen,\n  AiderScreen,\n  FullScreen\n} from \"@/layouts/PageLayout\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { noticeFlagVar } from \"@/graphql/variables\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      paddingLeft: theme.spacing(8),\n      paddingRight: theme.spacing(8)\n    },\n    aider: {\n      backgroundColor: theme.palette.background.paper,\n      width: \"100%\",\n      padding: theme.spacing(2, 2),\n      borderLeft: \"1px solid\",\n      borderColor: theme.palette.divider\n    },\n    head: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n      padding: theme.spacing(4, 0)\n    },\n    headItem: {\n      flex: 1,\n      overflow: \"hidden\",\n      \"& + &\": {\n        marginLeft: theme.spacing(4)\n      }\n    },\n    alertWrap: {\n      flex: 1\n    }\n  })\n);\n\nexport default function Home() {\n  const classes = useStyles();\n  const notice_flag = useReactiveVar(noticeFlagVar);\n\n  return (\n    <FullScreen>\n      <BodyScreen>\n        <Collapse in={notice_flag} className={classes.alertWrap}>\n          <Alert severity=\"warning\" onClose={() => noticeFlagVar(false)}>\n            {/* <AlertTitle>重要消息</AlertTitle> */}\n            网站功能正在完善中，如果在使用过程中遇到任何问题欢迎提bug。\n            <Link\n              target=\"_blank\"\n              href=\"https://github.com/sma2lbao/miss/issues\"\n              color=\"inherit\"\n            >\n              <strong>去提Bug！</strong>\n            </Link>\n          </Alert>\n        </Collapse>\n      </BodyScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Topic />\n          <Divider />\n          <Recommend />\n        </ContentScreen>\n        <AiderScreen sticky className={classes.aider}>\n          <Aider />\n        </AiderScreen>\n      </BodyScreen>\n    </FullScreen>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Button, Box } from \"@material-ui/core\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: theme.spacing(2),\n      background: theme.palette.background.paper\n    }\n  })\n);\n\nexport default function H5NotSupported() {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n\n  return (\n    <div className={classes.root}>\n      <Placeholder title=\"暂未适配移动端，请在电脑端访问。\">\n        <Box marginTop={1}>\n          <Button variant=\"outlined\" onClick={() => RouterHelper.gotoHome()}>\n            继续前往\n          </Button>\n        </Box>\n      </Placeholder>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport {\n  RouteWithLayout as Route,\n  MainWithoutSidebar as MainLayout\n  // MainWithoutSidebar as SecondaryLayout,\n} from \"../layouts\";\nimport Home from \"@/views/Home\";\nimport H5NotSupported from \"@/views/public/H5NotSupported\";\nimport { Authority } from \"@/layouts/RouteWithLayout\";\n\nconst ShadowHome = React.lazy(() => import(\"@/views/shadows/ShadowHome\"));\nconst Shadow = React.lazy(() => import(\"@/views/shadows/Shadow\"));\nconst ShadowPlay = React.lazy(() => import(\"@/views/shadows/ShadowPlay\"));\nconst ShadowUpload = React.lazy(() => import(\"@/views/shadows/ShadowUpload\"));\nconst Profile = React.lazy(() => import(\"@/views/users/Profile\"));\nconst Personal = React.lazy(() => import(\"@/views/users/Personal\"));\nconst Resume = React.lazy(() => import(\"@/views/users/Resume\"));\nconst Login = React.lazy(() => import(\"@/views/auth/Login\"));\nconst Completion = React.lazy(() => import(\"@/views/auth/Completion\"));\nconst NotFound = React.lazy(() => import(\"@/views/public/NotFound\"));\nconst Forbidden = React.lazy(() => import(\"@/views/public/Forbidden\"));\nconst InternalServerError = React.lazy(() =>\n  import(\"@/views/public/InternalServer\")\n);\nconst Search = React.lazy(() => import(\"@/views/public/Search\"));\nconst Test = React.lazy(() => import(\"@/views/Test\"));\n\nfunction AppRoute() {\n  const isH5 = /Android|webOS|iPhone|iPod|BlackBerry/i.test(\n    navigator.userAgent\n  );\n\n  // if (isH5) {\n  //   return (\n  //     <Router>\n  //       <Switch>\n  //         <Route component={H5NotSupported} />\n  //       </Switch>\n  //     </Router>\n  //   );\n  // }\n\n  if (isH5 && !window.location.pathname.includes(\"/not-support\")) {\n    window.location.href = window.location.origin + \"/not-support\";\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} layout={MainLayout} />\n        <Route lazy path=\"/home\" component={Home} layout={MainLayout} />\n        <Route\n          path=\"/shadow-home\"\n          lazy\n          component={ShadowHome}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/shadow/:id\" component={Shadow} layout={MainLayout} />\n        <Route\n          lazy\n          path=\"/shadow-play/:id\"\n          component={ShadowPlay}\n          layout={MainLayout}\n        />\n        <Route\n          lazy\n          path=\"/shadow-upload\"\n          component={ShadowUpload}\n          layout={MainLayout}\n          authority={Authority.MEMBER}\n        />\n        <Route\n          lazy\n          path=\"/profile/:username\"\n          component={Profile}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/personal\" component={Personal} layout={MainLayout} />\n        <Route\n          path=\"/search/:word\"\n          lazy\n          component={Search}\n          layout={MainLayout}\n        />\n        <Route lazy path=\"/resume\" component={Resume} />\n        <Route lazy path=\"/login\" component={Login} />\n        <Route lazy path=\"/completion\" component={Completion} />\n        <Route lazy path=\"/403\" exact component={Forbidden} />\n        <Route lazy path=\"/404\" exact component={NotFound} />\n        <Route lazy path=\"/50x\" exact component={InternalServerError} />\n\n        <Route path=\"/not-support\" component={H5NotSupported} />\n        <Route lazy path=\"/test\" exact component={Test} layout={MainLayout} />\n        <Route lazy component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRoute;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { SnackbarProvider, useSnackbar, OptionsObject } from \"notistack\";\n\ntype SnackbarProps = {\n  message: React.ReactNode;\n  options?: OptionsObject | undefined;\n};\n\n// add a <div> child to body under which to mount the snackbars\nconst mountPoint = document.createElement(\"div\");\ndocument.body.appendChild(mountPoint);\n\nconst ShowSnackbar: React.FC<SnackbarProps> = (props: SnackbarProps) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { message, options } = props;\n  React.useEffect(() => {\n    enqueueSnackbar(message, options);\n  }, [enqueueSnackbar, message, options]);\n  return <div></div>;\n};\n\nexport const Message = {\n  success: function(msg: React.ReactNode, opts?: OptionsObject) {\n    this.toast(msg, { ...opts, variant: \"success\" });\n  },\n  warning: function(msg: React.ReactNode, opts?: OptionsObject) {\n    this.toast(msg, { ...opts, variant: \"warning\" });\n  },\n  info: function(msg: React.ReactNode, opts?: OptionsObject) {\n    this.toast(msg, { ...opts, variant: \"info\" });\n  },\n  error: function(msg: React.ReactNode, opts?: OptionsObject) {\n    this.toast(msg, { ...opts, variant: \"error\" });\n  },\n  toast: function(msg: React.ReactNode, opts?: OptionsObject | undefined) {\n    ReactDOM.render(\n      <div>\n        <SnackbarProvider maxSnack={3}>\n          <ShowSnackbar message={msg} options={opts} />\n        </SnackbarProvider>\n      </div>,\n      mountPoint\n    );\n  }\n};\n\nexport default Message;\n","import { InMemoryCache } from \"@apollo/client\";\nimport {\n  DEFAULT_USER_AVATAR,\n  DEFAULT_USER_NICKNAME,\n  DEFAULT_USER_DESCRIPTION\n} from \"@/common/constants/default.constant\";\nimport { httpDomainVar } from \"./variables\";\n\nexport const cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    User: {\n      fields: {\n        avatar: {\n          read(avatar = DEFAULT_USER_AVATAR) {\n            return avatar ? avatar : DEFAULT_USER_AVATAR;\n          }\n        },\n        nickname: {\n          read(_) {\n            return _ ? _ : DEFAULT_USER_NICKNAME;\n          }\n        },\n        description: {\n          read(_) {\n            return _ ? _ : DEFAULT_USER_DESCRIPTION;\n          }\n        }\n      }\n    },\n    Character: {\n      fields: {\n        avatar: {\n          read(avatar = DEFAULT_USER_AVATAR) {\n            return avatar ? avatar : DEFAULT_USER_AVATAR;\n          }\n        }\n      }\n    },\n    PlatformAuthWay: {\n      fields: {\n        http_domain: {\n          read() {\n            return httpDomainVar();\n          }\n        }\n      }\n    }\n  }\n});\n","import { gql } from \"@apollo/client\";\n\nexport const typeDefs = gql`\n  directive @client on FIELD\n\n  extend type PlatformAuthWay {\n    http_domain: String!\n  }\n\n  extend type User {\n    avatar: String!\n  }\n\n  extend type Character {\n    avatar: String!\n  }\n`;\n\nexport default typeDefs;\n","export enum BaseExceptionStatus {\n  ERROR = 100000,\n  ENTITY_NOT_FOUND = 100404\n}\n\nexport enum MediumExceptionStatus {\n  ERROR = 200000,\n  MEDIUM_NOT_FOUND = 200404\n}\n\nexport enum UserExceptionStatus {\n  ERROR = 300000,\n  REGISTER_OTP_DIFFERENT = 300001,\n  REGISTER_OTP_NOT_EXPIRED = 300002,\n  USER_UNAUTHORIZED = 300401,\n  USER_NOT_FOUND = 300404\n}\n\nexport enum FollowExceptionStutus {\n  ERROR = 400000,\n  FOLLOWER_OWNER_REPEAT = 400001,\n  FOLLOW_NOT_FOUND = 400404\n}\n\nexport enum ShadowExceptionStatus {\n  ERROR = 500000,\n  MEDIUM_NOT_FOUND = 500404\n}\n\nexport type ExceptionStatus =\n  | BaseExceptionStatus\n  | MediumExceptionStatus\n  | UserExceptionStatus\n  | FollowExceptionStutus\n  | ShadowExceptionStatus;\n","import UserResolver from \"./user.mock\";\nimport CharacterResolver from \"./character.mock\";\n\nexport const resolvers = {\n  ...UserResolver,\n  ...CharacterResolver\n};\n","// import * as faker from \"faker\";\n\nexport default {\n  // User: {\n  //   uid: () => faker.random.uuid(),\n  //   username: () => faker.internet.userName(),\n  //   email: () => faker.internet.email(),\n  //   nickname: () => faker.name.firstName(),\n  //   avatar: () => faker.image.avatar(),\n  //   mobile: () => faker.phone.phoneNumber(),\n  //   address: () => faker.address.streetAddress(),\n  //   description: () => faker.lorem.lines(2),\n  //   create_at: () => faker.date.recent(3),\n  // },\n  Query: {\n    current_topic: () => {\n      return {\n        title: \"title\",\n        description: \"description\",\n        top_shadows: [],\n        top_shadow: null\n      };\n    },\n    user_urges: () => {\n      return [\n        {\n          nickname: null,\n          avatar: null,\n          username: \"sma2lbao080\",\n          uid: \"046bef3a-8bd1-4343-b0db-2a78c23eb9b3\",\n          description: null\n        }\n      ];\n    }\n  }\n};\n","// import * as faker from \"faker\";\n\nexport default {\n  // Character: {\n  //   name: faker.name.firstName(),\n  //   avatar: faker.image.avatar(),\n  //   description: faker.lorem.lines(2),\n  //   tags: faker.lorem.paragraphs(),\n  // },\n};\n","import Message from \"@/components/base/Message\";\nimport * as Sentry from \"@sentry/browser\";\nimport { ApolloClient, from, split, Resolvers } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { setContext } from \"@apollo/link-context\";\nimport { onError } from \"@apollo/link-error\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { cache } from \"./cache\";\nimport { typeDefs } from \"./local/schema\";\nimport { resolvers as mockResolvers } from \"./__mock__/resolvers\";\nimport { UserExceptionStatus } from \"@/common/constants/gql-exception.constant\";\nimport { accessTokenVar } from \"./variables\";\n\n// createUploadLink replace httpLink\n// const httpLink = new HttpLink({\n//   uri: process.env.REACT_APP_HTTP_URL,\n// });\n\nconst uploadLink = createUploadLink({\n  uri: process.env.REACT_APP_UPLOAD_URL\n});\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.REACT_APP_WEBSOCKET_URL || \"\",\n  options: {\n    reconnect: true\n  }\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  uploadLink\n);\n\nconst authLink = setContext((_, { headers }) => {\n  const access_token = localStorage.getItem(\"access_token\");\n  return {\n    headers: {\n      ...headers,\n      ...(access_token ? { authorization: `Bearer ${access_token}` } : {})\n    }\n  };\n});\n\nconst errorLink = onError(\n  ({ graphQLErrors, networkError, operation, response }) => {\n    if (operation.operationName === \"IgnoreErrorsQuery\") {\n      if (response?.errors) {\n        response.errors = undefined;\n      }\n    }\n    if (graphQLErrors) {\n      graphQLErrors.forEach(({ message, locations, path }) => {\n        Message.error(message || \"服务器繁忙\", { preventDuplicate: true });\n        Sentry.captureMessage(message);\n        console.log(\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n        );\n      });\n      const isUnauthorized = graphQLErrors.some((item: any) => {\n        return item.status === UserExceptionStatus.USER_UNAUTHORIZED;\n      });\n      if (isUnauthorized) {\n        accessTokenVar(undefined);\n        localStorage.removeItem(\"access_token\");\n      }\n    }\n    if (networkError) {\n      Sentry.captureException(networkError);\n      Message.error(\"服务器繁忙\", { preventDuplicate: true });\n      console.log(`[Network error]: ${networkError}`);\n    }\n  }\n);\n\nconst resolvers = process.env.REACT_APP_ENV === \"mock\" ? mockResolvers : {};\n\nexport const client = new ApolloClient({\n  resolvers: resolvers as Resolvers,\n  typeDefs,\n  cache,\n  link: from([authLink, errorLink, splitLink]),\n  connectToDevTools: true\n});\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { SnackbarProvider } from \"notistack\";\nimport { CustomThemeProvider } from \"./theme\";\nimport AppRoute from \"./router\";\nimport { client } from \"./graphql\";\n\nconst App: React.FC = () => {\n  return (\n    <CustomThemeProvider>\n      <CssBaseline />\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={client}>\n          <AppRoute />\n        </ApolloProvider>\n      </SnackbarProvider>\n    </CustomThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/analytics\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n});\nfirebase.analytics();\n\nSentry.init({\n  enabled: process.env.NODE_ENV === \"production\",\n  dsn: process.env.REACT_APP_SENTRY_DSN\n});\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\nconst rootElement = document.getElementById(\"root\");\nif (rootElement?.hasChildNodes()) {\n  ReactDOM.hydrate(<App />, rootElement);\n} else {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// import { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport {\n  PROFILE,\n  SHADOW_DETAIL,\n  HOME,\n  SHADOW_HOME,\n  SHADOW_PLAY,\n  SHADOW_UPLOAD,\n  AUTH_COMPLETION,\n  AUTH_LOGIN,\n  SEARCH\n} from \"@/common/constants/route.constant\";\n\nexport const useRouterHelper = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  // go home page.\n  const gotoHome = () => {\n    history.push(`${HOME}`);\n  };\n\n  // go profile page.\n  const gotoProfile = (username: string | undefined | null) => {\n    history.push(`${PROFILE}/${username}`);\n  };\n\n  // go shadow detail page.\n  const gotoShadow = (shadow_id: number | undefined | null | string) => {\n    history.push(`${SHADOW_DETAIL}/${shadow_id}`);\n  };\n\n  // go shadow home page.\n  const gotoShadowHome = () => {\n    history.push(SHADOW_HOME);\n  };\n\n  // go shadow play page.\n  const gotoShadowPlay = (\n    shadow_id: number | undefined | string | null,\n    state?: any\n  ) => {\n    history.push(`${SHADOW_PLAY}/${shadow_id}`, state);\n  };\n\n  // go shadow upload.\n  const gotoShadowUpload = () => {\n    history.push(`${SHADOW_UPLOAD}`);\n  };\n\n  // go info completion page.\n  const gotoAuthCompletion = () => {\n    history.push(`${AUTH_COMPLETION}`);\n  };\n\n  const redirectAuthLogin = (referrer?: boolean) => {\n    history.replace(\n      `${AUTH_LOGIN}`,\n      referrer\n        ? {\n            __referrer_from__: location\n          }\n        : undefined\n    );\n  };\n\n  // go search page.\n  const gotoSearch = word => {\n    history.push(`${SEARCH}/${word}`);\n  };\n\n  return {\n    push: (path: string, state?: any) => {\n      history.push(path, state);\n    },\n    replace: (pathOrlocation, stateOptions?) => {\n      history.replace(pathOrlocation, stateOptions);\n    },\n    gotoHome,\n    gotoProfile,\n    gotoShadow,\n    gotoShadowHome,\n    gotoShadowPlay,\n    gotoShadowUpload,\n    gotoAuthCompletion,\n    redirectAuthLogin,\n    gotoSearch\n  };\n};\n","import * as React from \"react\";\nimport {\n  useIsFollowingLazyQuery,\n  useCreateFollowMutation,\n  useRemoveFollowMutation\n} from \"@/schema\";\nimport { useAuth } from \"@/hooks\";\nimport { useSnackbar } from \"notistack\";\n\nexport interface IFollowProps {\n  owner_uid: string;\n}\n\nexport const useFollowHelper = (props: IFollowProps) => {\n  const { owner_uid } = props;\n  const { enqueueSnackbar } = useSnackbar();\n  const { hasLogged } = useAuth();\n  const [following, setFollowing] = React.useState<boolean>(false);\n\n  const [isFollowing] = useIsFollowingLazyQuery({\n    onCompleted(data) {\n      setFollowing(data.is_following);\n    }\n  });\n\n  React.useEffect(() => {\n    if (owner_uid && hasLogged) {\n      isFollowing({\n        variables: {\n          owner_uid\n        }\n      });\n    }\n  }, [hasLogged, isFollowing, owner_uid]);\n\n  const [createFollow] = useCreateFollowMutation({\n    onCompleted() {\n      setFollowing(true);\n      enqueueSnackbar(\"关注成功\");\n    }\n  });\n  const [removeFollow] = useRemoveFollowMutation({\n    onCompleted() {\n      setFollowing(false);\n      enqueueSnackbar(\"取消成功\");\n    }\n  });\n\n  const toggleFollow = () => {\n    if (owner_uid) {\n      if (following) {\n        removeFollow({\n          variables: {\n            follow: {\n              owner_uid\n            }\n          }\n        });\n      } else {\n        createFollow({\n          variables: {\n            follow: {\n              owner_uid: owner_uid\n            }\n          }\n        });\n      }\n    }\n  };\n  return {\n    following,\n    toggleFollow\n  };\n};\n","import * as React from \"react\";\nimport { useMeLazyQuery, User } from \"@/schema\";\nimport { useRouterHelper } from \"./router.helper\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { accessTokenVar } from \"@/graphql/variables\";\nimport { useLocation } from \"react-router\";\n\nexport const useAuth = () => {\n  const RouterHelper = useRouterHelper();\n  const [hasLogged, setHasLogged] = React.useState<boolean>(false);\n  const [member, setMember] = React.useState<User | null>(null);\n  const [meQuery, { data }] = useMeLazyQuery();\n  const access_token = useReactiveVar(accessTokenVar);\n  const location = useLocation();\n\n  const verify = () => {\n    const { __referrer_from__ } = (location.state as any) || {\n      __referrer_from__: { pathname: \"/\" }\n    };\n    if (hasLogged && member) {\n      if (!member.email || !member.uid || !member.username) {\n        RouterHelper.gotoAuthCompletion();\n      } else {\n        RouterHelper.replace(__referrer_from__);\n      }\n    }\n  };\n\n  const setAccessToken = (access_token: string) => {\n    localStorage.setItem(\"access_token\", access_token);\n    accessTokenVar(access_token);\n  };\n\n  const clearAccessToken = () => {\n    localStorage.removeItem(\"access_token\");\n    accessTokenVar(undefined);\n  };\n\n  React.useEffect(() => {\n    if (access_token) {\n      meQuery();\n      if (data?.me) {\n        setHasLogged(true);\n        setMember(data?.me);\n      }\n    } else {\n      setMember(null);\n      setHasLogged(false);\n    }\n    return () => {};\n  }, [access_token, data, meQuery]);\n\n  return {\n    hasLogged,\n    member,\n    verify,\n    setAccessToken,\n    clearAccessToken\n  };\n};\n","export * from \"./router.helper\";\nexport * from \"./follow.helper\";\nexport * from \"./auth.helper\";\n","export const DEFAULT_USER_NICKNAME = \"你好，打工人\";\n\nexport const DEFAULT_USER_DESCRIPTION = \"这个人很神秘，什么也没有留下！\";\n\nexport const DEFAULT_USER_AVATAR =\n  \"http://sma2lbao.cn/files/miss/2020/11/16/1605506266889\";\n\nexport const DEFAULT_HOLDER =\n  \"http://sma2lbao.cn/files/miss/2020/11/13/1605260091918\";\n\nexport const DEFULAT_SHADOW_COVER =\n  \"http://sma2lbao.cn/files/miss/2020/11/13/1605259701164\";\n\nexport const DEFAULT_PROFILE_COVER =\n  \"http://sma2lbao.cn/files/miss/2020/11/13/1605260091918\";\n","// home page\nexport const HOME = \"/home\";\n\n// shadow home page\nexport const SHADOW_HOME = \"/shadow-home\";\n\n// shadow detail page\nexport const SHADOW_DETAIL = \"/shadow\";\n\n// profile page\nexport const PROFILE = \"/profile\";\n\n// shadow play page\nexport const SHADOW_PLAY = \"/shadow-play\";\n\n// shadow upload page\nexport const SHADOW_UPLOAD = \"/shadow-upload\";\n\n// auth completion page\nexport const AUTH_COMPLETION = \"/completion\";\n\n// auth login page\nexport const AUTH_LOGIN = \"/login\";\n\n// search page\nexport const SEARCH = \"/search\";\n","import gql from \"graphql-tag\";\nimport * as ApolloReactCommon from \"@apollo/client\";\nimport * as ApolloReactHooks from \"@apollo/client\";\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: number | string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** Date custom scalar type */\n  Date: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type Bullet = {\n  readonly __typename?: \"Bullet\";\n  readonly id: Scalars[\"ID\"];\n  readonly content: Scalars[\"String\"];\n  readonly point?: Maybe<Scalars[\"Float\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly author: User;\n  readonly medium: Medium;\n};\n\nexport type Category = {\n  readonly __typename?: \"Category\";\n  readonly id: Scalars[\"ID\"];\n  readonly label: Scalars[\"String\"];\n  readonly alias?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly children?: Maybe<ReadonlyArray<Category>>;\n  readonly parent?: Maybe<Category>;\n};\n\nexport type Character = {\n  readonly __typename?: \"Character\";\n  readonly avatar: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly name: Scalars[\"String\"];\n  readonly tags?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n};\n\nexport type CreateBulletInput = {\n  readonly content: Scalars[\"String\"];\n  readonly point?: Maybe<Scalars[\"Float\"]>;\n  readonly medium_id: Scalars[\"Int\"];\n};\n\nexport type CreateCategoryInput = {\n  readonly label: Scalars[\"String\"];\n  readonly alias?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly parent_id?: Maybe<Scalars[\"Float\"]>;\n  readonly children?: Maybe<ReadonlyArray<CreateCategoryInput>>;\n};\n\nexport type CreateCharacterInput = {\n  readonly name: Scalars[\"String\"];\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateFollowInput = {\n  readonly follower_uid?: Maybe<Scalars[\"ID\"]>;\n  readonly owner_uid: Scalars[\"ID\"];\n};\n\nexport type CreatePlaylistInput = {\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateReviewInput = {\n  readonly content: Scalars[\"String\"];\n  readonly author_uid?: Maybe<Scalars[\"ID\"]>;\n  readonly type: ReviewMedium;\n  readonly type_id: Scalars[\"ID\"];\n};\n\nexport type CreateShadowInput = {\n  readonly title: Scalars[\"String\"];\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly cover: Scalars[\"String\"];\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly about?: Maybe<Scalars[\"String\"]>;\n  readonly region?: Maybe<Scalars[\"String\"]>;\n  readonly credits?: Maybe<ReadonlyArray<CreateCharacterInput>>;\n  readonly sources?: Maybe<ReadonlyArray<CreateShadowMediumInput>>;\n};\n\nexport type CreateShadowMediumInput = {\n  readonly name: Scalars[\"String\"];\n  readonly url: Scalars[\"String\"];\n  readonly sub_name?: Maybe<Scalars[\"String\"]>;\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly shadow_id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type CreateTagInput = {\n  readonly label: Scalars[\"String\"];\n  readonly alias?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateTopicInput = {\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly top_shadow_id?: Maybe<Scalars[\"ID\"]>;\n  readonly top_shadows_ids?: Maybe<ReadonlyArray<Scalars[\"ID\"]>>;\n};\n\nexport type CreateUserInput = {\n  readonly username: Scalars[\"String\"];\n  readonly password: Scalars[\"String\"];\n  readonly email: Scalars[\"String\"];\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CreateUserWithCodeInput = {\n  readonly username: Scalars[\"String\"];\n  readonly password: Scalars[\"String\"];\n  readonly email: Scalars[\"String\"];\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly code: Scalars[\"String\"];\n};\n\nexport type CreateVoteInput = {\n  readonly medium_id: Scalars[\"Float\"];\n  readonly status: VoteStatus;\n  readonly owner_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type DeleteFollowInput = {\n  readonly follower_uid?: Maybe<Scalars[\"ID\"]>;\n  readonly owner_uid: Scalars[\"ID\"];\n};\n\nexport type Follow = {\n  readonly __typename?: \"Follow\";\n  readonly follower: User;\n  readonly owner: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type FollowEdge = {\n  readonly __typename?: \"FollowEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Follow;\n};\n\nexport type FollowPageInfo = {\n  readonly __typename?: \"FollowPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type FollowPaginated = {\n  readonly __typename?: \"FollowPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<FollowEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Follow>>;\n  readonly pageInfo: FollowPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Medium = {\n  readonly __typename?: \"Medium\";\n  readonly id: Scalars[\"ID\"];\n  readonly name?: Maybe<Scalars[\"String\"]>;\n  readonly sub_name?: Maybe<Scalars[\"String\"]>;\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly duration?: Maybe<Scalars[\"Float\"]>;\n  readonly preview_url?: Maybe<Scalars[\"String\"]>;\n  readonly url: Scalars[\"String\"];\n  readonly low_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly high_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly super_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly votes?: Maybe<ReadonlyArray<Vote>>;\n  readonly vote_like_count?: Maybe<Scalars[\"Float\"]>;\n  readonly vote_dislike_count?: Maybe<Scalars[\"Float\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly version?: Maybe<Scalars[\"Float\"]>;\n};\n\nexport type Mutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_tag: Tag;\n  readonly add_category_to_tag: Scalars[\"Boolean\"];\n  readonly create_category: Category;\n  readonly delete_category: Scalars[\"Boolean\"];\n  readonly create_bullet: Bullet;\n  readonly login: Scalars[\"String\"];\n  /** create user. */\n  readonly create_user: User;\n  /** create user with verif code. */\n  readonly create_user_with_code: User;\n  readonly send_register_email: Scalars[\"Boolean\"];\n  readonly update_user: User;\n  readonly upload_file_oss: Scalars[\"String\"];\n  readonly create_shadow: Shadow;\n  readonly update_shadow: Shadow;\n  readonly add_mediums_to_shadow: Shadow;\n  readonly add_tags_to_shadow: Shadow;\n  readonly create_topic: Topic;\n  readonly create_review: Review;\n  readonly create_playlist: Playlist;\n  readonly add_shadow_to_playlist: Scalars[\"Boolean\"];\n  readonly create_follow: Follow;\n  readonly remove_follow: Follow;\n  readonly create_or_update_vote: Vote;\n};\n\nexport type MutationCreate_TagArgs = {\n  tag: CreateTagInput;\n};\n\nexport type MutationAdd_Category_To_TagArgs = {\n  tag_id: Scalars[\"Float\"];\n  category_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_CategoryArgs = {\n  category: CreateCategoryInput;\n};\n\nexport type MutationDelete_CategoryArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_BulletArgs = {\n  bullet: CreateBulletInput;\n};\n\nexport type MutationLoginArgs = {\n  password: Scalars[\"String\"];\n  username: Scalars[\"String\"];\n};\n\nexport type MutationCreate_UserArgs = {\n  user: CreateUserInput;\n};\n\nexport type MutationCreate_User_With_CodeArgs = {\n  user: CreateUserWithCodeInput;\n};\n\nexport type MutationSend_Register_EmailArgs = {\n  email: Scalars[\"String\"];\n};\n\nexport type MutationUpdate_UserArgs = {\n  user: UpdateUserInput;\n};\n\nexport type MutationUpload_File_OssArgs = {\n  file: Scalars[\"Upload\"];\n};\n\nexport type MutationCreate_ShadowArgs = {\n  shadow: CreateShadowInput;\n};\n\nexport type MutationUpdate_ShadowArgs = {\n  shadow: UpdateShadowInput;\n  shadow_id: Scalars[\"ID\"];\n};\n\nexport type MutationAdd_Mediums_To_ShadowArgs = {\n  shadow_medium: CreateShadowMediumInput;\n  shadow_id: Scalars[\"ID\"];\n};\n\nexport type MutationAdd_Tags_To_ShadowArgs = {\n  tag_ids: ReadonlyArray<Scalars[\"ID\"]>;\n  shadow_id: Scalars[\"ID\"];\n};\n\nexport type MutationCreate_TopicArgs = {\n  topic: CreateTopicInput;\n};\n\nexport type MutationCreate_ReviewArgs = {\n  review: CreateReviewInput;\n};\n\nexport type MutationCreate_PlaylistArgs = {\n  playlist: CreatePlaylistInput;\n};\n\nexport type MutationAdd_Shadow_To_PlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n  shadow_id: Scalars[\"Float\"];\n};\n\nexport type MutationCreate_FollowArgs = {\n  follow: CreateFollowInput;\n};\n\nexport type MutationRemove_FollowArgs = {\n  follow: DeleteFollowInput;\n};\n\nexport type MutationCreate_Or_Update_VoteArgs = {\n  vote: CreateVoteInput;\n};\n\nexport type PaginatedQuery = {\n  readonly first?: Maybe<Scalars[\"Int\"]>;\n  readonly after?: Maybe<Scalars[\"String\"]>;\n  readonly last?: Maybe<Scalars[\"Int\"]>;\n  readonly before?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type PlatformAuthWay = {\n  readonly __typename?: \"PlatformAuthWay\";\n  readonly http_domain: Scalars[\"String\"];\n  readonly platform: Scalars[\"String\"];\n  readonly url: Scalars[\"String\"];\n};\n\nexport type Playlist = {\n  readonly __typename?: \"Playlist\";\n  readonly id: Scalars[\"ID\"];\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly shadows?: Maybe<ReadonlyArray<Shadow>>;\n  readonly shadows_count?: Maybe<Scalars[\"Float\"]>;\n  readonly author: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type PlaylistEdge = {\n  readonly __typename?: \"PlaylistEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Playlist;\n};\n\nexport type PlaylistPageInfo = {\n  readonly __typename?: \"PlaylistPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type PlaylistPaginated = {\n  readonly __typename?: \"PlaylistPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<PlaylistEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Playlist>>;\n  readonly pageInfo: PlaylistPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Query = {\n  readonly __typename?: \"Query\";\n  readonly category: Category;\n  readonly me: User;\n  readonly platform_auth_way: ReadonlyArray<PlatformAuthWay>;\n  /** find username exit. */\n  readonly has_username: Scalars[\"Boolean\"];\n  /** find user by uid or username. */\n  readonly user: User;\n  /** all user with paginated. */\n  readonly users_paginated: UserPaginated;\n  readonly shadow: Shadow;\n  readonly shadows_paginated: ShadowPaginated;\n  readonly user_shadows_paginated: ShadowPaginated;\n  readonly current_topic: Topic;\n  readonly shadow_urges: ReadonlyArray<Shadow>;\n  readonly shadow_urges_by_shadow: ReadonlyArray<Shadow>;\n  readonly user_urges: ReadonlyArray<User>;\n  readonly shadow_next_urges_by_shadow: ReadonlyArray<Shadow>;\n  readonly reviews_paginated: ReviewPaginated;\n  readonly playlists_paginated: PlaylistPaginated;\n  readonly playlist: Playlist;\n  readonly follows: ReadonlyArray<Follow>;\n  readonly follows_paginated: FollowPaginated;\n  readonly follows_total: Scalars[\"Int\"];\n  readonly fans: ReadonlyArray<Follow>;\n  readonly fans_paginated: FollowPaginated;\n  readonly fans_total: Scalars[\"Int\"];\n  readonly is_following: Scalars[\"Boolean\"];\n  readonly vote: Vote;\n  readonly medium_vote_count: Scalars[\"Int\"];\n  readonly search_shadows_paginated: ShadowPaginated;\n};\n\nexport type QueryCategoryArgs = {\n  id: Scalars[\"Float\"];\n};\n\nexport type QueryHas_UsernameArgs = {\n  username: Scalars[\"String\"];\n};\n\nexport type QueryUserArgs = {\n  username?: Maybe<Scalars[\"String\"]>;\n  uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryUsers_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryShadowArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryShadows_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryUser_Shadows_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n  author_username: Scalars[\"String\"];\n};\n\nexport type QueryShadow_Urges_By_ShadowArgs = {\n  shadow_id: Scalars[\"ID\"];\n};\n\nexport type QueryShadow_Next_Urges_By_ShadowArgs = {\n  shadow_id: Scalars[\"ID\"];\n};\n\nexport type QueryReviews_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n  type_id?: Maybe<Scalars[\"ID\"]>;\n  type?: Maybe<ReviewMedium>;\n};\n\nexport type QueryPlaylists_PaginatedArgs = {\n  author_username?: Maybe<Scalars[\"String\"]>;\n  author_uid?: Maybe<Scalars[\"String\"]>;\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryPlaylistArgs = {\n  playlist_id: Scalars[\"Float\"];\n};\n\nexport type QueryFollows_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFollows_TotalArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryFans_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n};\n\nexport type QueryFans_TotalArgs = {\n  owner_uid?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryIs_FollowingArgs = {\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n  owner_uid: Scalars[\"String\"];\n};\n\nexport type QueryVoteArgs = {\n  medium_id: Scalars[\"ID\"];\n};\n\nexport type QueryMedium_Vote_CountArgs = {\n  status: Scalars[\"String\"];\n  medium_id: Scalars[\"Float\"];\n};\n\nexport type QuerySearch_Shadows_PaginatedArgs = {\n  query?: Maybe<PaginatedQuery>;\n  word?: Maybe<Scalars[\"String\"]>;\n};\n\nexport enum Region {\n  Mainland = \"Mainland\",\n  America = \"America\",\n  Hongkong = \"Hongkong\",\n  Taiwan = \"Taiwan\",\n  Britain = \"Britain\",\n  India = \"India\"\n}\n\nexport type Review = {\n  readonly __typename?: \"Review\";\n  readonly id: Scalars[\"ID\"];\n  readonly content: Scalars[\"String\"];\n  readonly author: User;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type ReviewEdge = {\n  readonly __typename?: \"ReviewEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Review;\n};\n\nexport enum ReviewMedium {\n  Medium = \"MEDIUM\",\n  Shadow = \"SHADOW\"\n}\n\nexport type ReviewPageInfo = {\n  readonly __typename?: \"ReviewPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type ReviewPaginated = {\n  readonly __typename?: \"ReviewPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<ReviewEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Review>>;\n  readonly pageInfo: ReviewPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Shadow = {\n  readonly __typename?: \"Shadow\";\n  readonly id: Scalars[\"ID\"];\n  readonly title: Scalars[\"String\"];\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly cover: Scalars[\"String\"];\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly about?: Maybe<Scalars[\"String\"]>;\n  readonly region: Region;\n  readonly credits?: Maybe<ReadonlyArray<Character>>;\n  readonly sources?: Maybe<ReadonlyArray<ShadowMedium>>;\n  readonly tags?: Maybe<ReadonlyArray<Tag>>;\n  readonly author: User;\n  readonly clazz?: Maybe<Category>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type ShadowEdge = {\n  readonly __typename?: \"ShadowEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: Shadow;\n};\n\nexport type ShadowMedium = {\n  readonly __typename?: \"ShadowMedium\";\n  readonly id: Scalars[\"ID\"];\n  readonly name?: Maybe<Scalars[\"String\"]>;\n  readonly sub_name?: Maybe<Scalars[\"String\"]>;\n  readonly alias_name?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly duration?: Maybe<Scalars[\"Float\"]>;\n  readonly preview_url?: Maybe<Scalars[\"String\"]>;\n  readonly url: Scalars[\"String\"];\n  readonly low_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly medium_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly high_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly super_quality_url?: Maybe<Scalars[\"String\"]>;\n  readonly votes?: Maybe<ReadonlyArray<Vote>>;\n  readonly vote_like_count?: Maybe<Scalars[\"Float\"]>;\n  readonly vote_dislike_count?: Maybe<Scalars[\"Float\"]>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly version?: Maybe<Scalars[\"Float\"]>;\n};\n\nexport type ShadowPageInfo = {\n  readonly __typename?: \"ShadowPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type ShadowPaginated = {\n  readonly __typename?: \"ShadowPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<ShadowEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<Shadow>>;\n  readonly pageInfo: ShadowPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Subscription = {\n  readonly __typename?: \"Subscription\";\n  readonly user_created: User;\n  readonly review_created: Review;\n};\n\nexport type SubscriptionReview_CreatedArgs = {\n  type_id: Scalars[\"ID\"];\n  type: ReviewMedium;\n};\n\nexport type Tag = {\n  readonly __typename?: \"Tag\";\n  readonly id: Scalars[\"ID\"];\n  readonly label: Scalars[\"String\"];\n  readonly alias?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly categories?: Maybe<ReadonlyArray<Category>>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n};\n\nexport type Topic = {\n  readonly __typename?: \"Topic\";\n  readonly id: Scalars[\"ID\"];\n  readonly title: Scalars[\"String\"];\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly top_shadow?: Maybe<Shadow>;\n  readonly top_shadows?: Maybe<ReadonlyArray<Shadow>>;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type UpdateShadowInput = {\n  readonly sub_title?: Maybe<Scalars[\"String\"]>;\n  readonly alias_title?: Maybe<Scalars[\"String\"]>;\n  readonly posters?: Maybe<ReadonlyArray<Scalars[\"String\"]>>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly about?: Maybe<Scalars[\"String\"]>;\n  readonly region?: Maybe<Scalars[\"String\"]>;\n  readonly credits?: Maybe<ReadonlyArray<CreateCharacterInput>>;\n  readonly sources?: Maybe<ReadonlyArray<CreateShadowMediumInput>>;\n  readonly title?: Maybe<Scalars[\"String\"]>;\n  readonly cover?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UpdateUserInput = {\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly avatar?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly password?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type User = {\n  readonly __typename?: \"User\";\n  readonly address?: Maybe<Scalars[\"String\"]>;\n  readonly avatar: Scalars[\"String\"];\n  readonly create_at?: Maybe<Scalars[\"Date\"]>;\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n  readonly description?: Maybe<Scalars[\"String\"]>;\n  readonly email?: Maybe<Scalars[\"String\"]>;\n  readonly mobile?: Maybe<Scalars[\"String\"]>;\n  readonly nickname?: Maybe<Scalars[\"String\"]>;\n  readonly uid: Scalars[\"ID\"];\n  readonly update_at?: Maybe<Scalars[\"Date\"]>;\n  readonly username: Scalars[\"String\"];\n};\n\nexport type UserEdge = {\n  readonly __typename?: \"UserEdge\";\n  readonly cursor: Scalars[\"String\"];\n  readonly node: User;\n};\n\nexport type UserPageInfo = {\n  readonly __typename?: \"UserPageInfo\";\n  readonly hasNextPage: Scalars[\"Boolean\"];\n  readonly hasPreviousPage: Scalars[\"Boolean\"];\n  readonly startCursor: Scalars[\"String\"];\n  readonly endCursor: Scalars[\"String\"];\n};\n\nexport type UserPaginated = {\n  readonly __typename?: \"UserPaginated\";\n  readonly edges?: Maybe<ReadonlyArray<UserEdge>>;\n  readonly nodes?: Maybe<ReadonlyArray<User>>;\n  readonly pageInfo: UserPageInfo;\n  readonly totalCount: Scalars[\"Int\"];\n};\n\nexport type Vote = {\n  readonly __typename?: \"Vote\";\n  readonly id: Scalars[\"ID\"];\n  readonly status: VoteStatus;\n  readonly owner: User;\n  readonly medium: Medium;\n  readonly create_at: Scalars[\"Date\"];\n  readonly update_at: Scalars[\"Date\"];\n  readonly delete_at?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport enum VoteStatus {\n  Likd = \"LIKD\",\n  Dislike = \"DISLIKE\",\n  Default = \"DEFAULT\"\n}\n\nexport type LoginMutationVariables = Exact<{\n  username: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n}>;\n\nexport type LoginMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly login: string;\n};\n\nexport type SendRegisterEmailMutationVariables = Exact<{\n  email: Scalars[\"String\"];\n}>;\n\nexport type SendRegisterEmailMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly send_register_email: boolean;\n};\n\nexport type CreateUserWithCodeMutationVariables = Exact<{\n  user: CreateUserWithCodeInput;\n}>;\n\nexport type CreateUserWithCodeMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_user_with_code: {\n    readonly __typename?: \"User\";\n    readonly username: string;\n    readonly avatar: string;\n  };\n};\n\nexport type UpdateUserMutationVariables = Exact<{\n  user: UpdateUserInput;\n}>;\n\nexport type UpdateUserMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly update_user: {\n    readonly __typename?: \"User\";\n    readonly uid: number | string;\n    readonly username: string;\n    readonly email?: Maybe<string>;\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly mobile?: Maybe<string>;\n    readonly address?: Maybe<string>;\n    readonly description?: Maybe<string>;\n    readonly create_at?: Maybe<any>;\n    readonly update_at?: Maybe<any>;\n  };\n};\n\nexport type CreateShadowMutationVariables = Exact<{\n  shadow: CreateShadowInput;\n}>;\n\nexport type CreateShadowMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_shadow: {\n    readonly __typename?: \"Shadow\";\n    readonly create_at: any;\n  };\n};\n\nexport type UpdateShadowMutationVariables = Exact<{\n  shadow: UpdateShadowInput;\n  shadow_id: Scalars[\"ID\"];\n}>;\n\nexport type UpdateShadowMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly update_shadow: {\n    readonly __typename?: \"Shadow\";\n    readonly create_at: any;\n  };\n};\n\nexport type AddMediumsToShadowMutationVariables = Exact<{\n  shadow_id: Scalars[\"ID\"];\n  shadow_medium: CreateShadowMediumInput;\n}>;\n\nexport type AddMediumsToShadowMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly add_mediums_to_shadow: {\n    readonly __typename?: \"Shadow\";\n    readonly sources?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowMedium\";\n        readonly name?: Maybe<string>;\n      }>\n    >;\n  };\n};\n\nexport type CreateOrUpdateVoteMutationVariables = Exact<{\n  vote: CreateVoteInput;\n}>;\n\nexport type CreateOrUpdateVoteMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_or_update_vote: {\n    readonly __typename?: \"Vote\";\n    readonly status: VoteStatus;\n  };\n};\n\nexport type VoteQueryVariables = Exact<{\n  medium_id: Scalars[\"ID\"];\n}>;\n\nexport type VoteQuery = {\n  readonly __typename?: \"Query\";\n  readonly vote: { readonly __typename?: \"Vote\"; readonly status: VoteStatus };\n};\n\nexport type CreateReviewMutationVariables = Exact<{\n  review: CreateReviewInput;\n}>;\n\nexport type CreateReviewMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_review: {\n    readonly __typename?: \"Review\";\n    readonly id: number | string;\n  };\n};\n\nexport type UploadFileOssMutationVariables = Exact<{\n  file: Scalars[\"Upload\"];\n}>;\n\nexport type UploadFileOssMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly upload_file_oss: string;\n};\n\nexport type CreateFollowMutationVariables = Exact<{\n  follow: CreateFollowInput;\n}>;\n\nexport type CreateFollowMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly create_follow: {\n    readonly __typename?: \"Follow\";\n    readonly create_at: any;\n  };\n};\n\nexport type RemoveFollowMutationVariables = Exact<{\n  follow: DeleteFollowInput;\n}>;\n\nexport type RemoveFollowMutation = {\n  readonly __typename?: \"Mutation\";\n  readonly remove_follow: {\n    readonly __typename?: \"Follow\";\n    readonly create_at: any;\n  };\n};\n\nexport type PlatformAuthWayQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type PlatformAuthWayQuery = {\n  readonly __typename?: \"Query\";\n  readonly platform_auth_way: ReadonlyArray<{\n    readonly __typename?: \"PlatformAuthWay\";\n    readonly platform: string;\n    readonly url: string;\n    readonly http_domain: string;\n  }>;\n};\n\nexport type HasUsernameQueryVariables = Exact<{\n  username: Scalars[\"String\"];\n}>;\n\nexport type HasUsernameQuery = {\n  readonly __typename?: \"Query\";\n  readonly has_username: boolean;\n};\n\nexport type MeQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MeQuery = {\n  readonly __typename?: \"Query\";\n  readonly me: {\n    readonly __typename?: \"User\";\n    readonly uid: number | string;\n    readonly username: string;\n    readonly email?: Maybe<string>;\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly mobile?: Maybe<string>;\n    readonly address?: Maybe<string>;\n    readonly description?: Maybe<string>;\n    readonly create_at?: Maybe<any>;\n    readonly update_at?: Maybe<any>;\n  };\n};\n\nexport type CurrentTopicQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type CurrentTopicQuery = {\n  readonly __typename?: \"Query\";\n  readonly current_topic: {\n    readonly __typename?: \"Topic\";\n    readonly id: number | string;\n    readonly title: string;\n    readonly description?: Maybe<string>;\n    readonly top_shadows?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"Shadow\";\n        readonly id: number | string;\n        readonly description?: Maybe<string>;\n        readonly title: string;\n        readonly sub_title?: Maybe<string>;\n        readonly create_at: any;\n        readonly update_at: any;\n        readonly cover: string;\n        readonly posters?: Maybe<ReadonlyArray<string>>;\n        readonly region: Region;\n        readonly about?: Maybe<string>;\n        readonly sources?: Maybe<\n          ReadonlyArray<{\n            readonly __typename?: \"ShadowMedium\";\n            readonly id: number | string;\n            readonly cover?: Maybe<string>;\n            readonly url: string;\n            readonly super_quality_url?: Maybe<string>;\n            readonly preview_url?: Maybe<string>;\n            readonly posters?: Maybe<ReadonlyArray<string>>;\n            readonly name?: Maybe<string>;\n            readonly sub_name?: Maybe<string>;\n            readonly medium_quality_url?: Maybe<string>;\n            readonly low_quality_url?: Maybe<string>;\n            readonly high_quality_url?: Maybe<string>;\n            readonly duration?: Maybe<number>;\n            readonly description?: Maybe<string>;\n            readonly alias_name?: Maybe<string>;\n            readonly create_at: any;\n            readonly update_at: any;\n            readonly vote_like_count?: Maybe<number>;\n            readonly vote_dislike_count?: Maybe<number>;\n          }>\n        >;\n        readonly author: {\n          readonly __typename?: \"User\";\n          readonly uid: number | string;\n          readonly avatar: string;\n          readonly nickname?: Maybe<string>;\n          readonly username: string;\n          readonly description?: Maybe<string>;\n        };\n      }>\n    >;\n    readonly top_shadow?: Maybe<{\n      readonly __typename?: \"Shadow\";\n      readonly id: number | string;\n      readonly description?: Maybe<string>;\n      readonly title: string;\n      readonly sub_title?: Maybe<string>;\n      readonly create_at: any;\n      readonly update_at: any;\n      readonly cover: string;\n      readonly posters?: Maybe<ReadonlyArray<string>>;\n      readonly region: Region;\n      readonly about?: Maybe<string>;\n      readonly sources?: Maybe<\n        ReadonlyArray<{\n          readonly __typename?: \"ShadowMedium\";\n          readonly id: number | string;\n          readonly cover?: Maybe<string>;\n          readonly url: string;\n          readonly super_quality_url?: Maybe<string>;\n          readonly preview_url?: Maybe<string>;\n          readonly posters?: Maybe<ReadonlyArray<string>>;\n          readonly name?: Maybe<string>;\n          readonly sub_name?: Maybe<string>;\n          readonly medium_quality_url?: Maybe<string>;\n          readonly low_quality_url?: Maybe<string>;\n          readonly high_quality_url?: Maybe<string>;\n          readonly duration?: Maybe<number>;\n          readonly description?: Maybe<string>;\n          readonly alias_name?: Maybe<string>;\n          readonly create_at: any;\n          readonly update_at: any;\n          readonly vote_like_count?: Maybe<number>;\n          readonly vote_dislike_count?: Maybe<number>;\n        }>\n      >;\n      readonly author: {\n        readonly __typename?: \"User\";\n        readonly uid: number | string;\n        readonly avatar: string;\n        readonly nickname?: Maybe<string>;\n        readonly username: string;\n        readonly description?: Maybe<string>;\n      };\n    }>;\n  };\n};\n\nexport type ShadowUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type ShadowUrgesQuery = {\n  readonly __typename?: \"Query\";\n  readonly shadow_urges: ReadonlyArray<{\n    readonly __typename?: \"Shadow\";\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly region: Region;\n    readonly about?: Maybe<string>;\n    readonly sources?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowMedium\";\n        readonly id: number | string;\n        readonly cover?: Maybe<string>;\n        readonly url: string;\n        readonly super_quality_url?: Maybe<string>;\n        readonly preview_url?: Maybe<string>;\n        readonly posters?: Maybe<ReadonlyArray<string>>;\n        readonly name?: Maybe<string>;\n        readonly sub_name?: Maybe<string>;\n        readonly medium_quality_url?: Maybe<string>;\n        readonly low_quality_url?: Maybe<string>;\n        readonly high_quality_url?: Maybe<string>;\n        readonly duration?: Maybe<number>;\n        readonly description?: Maybe<string>;\n        readonly alias_name?: Maybe<string>;\n        readonly create_at: any;\n        readonly update_at: any;\n        readonly vote_like_count?: Maybe<number>;\n        readonly vote_dislike_count?: Maybe<number>;\n      }>\n    >;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n  }>;\n};\n\nexport type UserUrgesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type UserUrgesQuery = {\n  readonly __typename?: \"Query\";\n  readonly user_urges: ReadonlyArray<{\n    readonly __typename?: \"User\";\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly username: string;\n    readonly uid: number | string;\n    readonly description?: Maybe<string>;\n  }>;\n};\n\nexport type PlaylistsPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n  author_uid?: Maybe<Scalars[\"String\"]>;\n  author_username?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type PlaylistsPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly playlists_paginated: {\n    readonly __typename?: \"PlaylistPaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"PlaylistPageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"PlaylistEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Playlist\";\n          readonly title: string;\n          readonly description?: Maybe<string>;\n          readonly cover?: Maybe<string>;\n          readonly create_at: any;\n        };\n      }>\n    >;\n  };\n};\n\nexport type ShadowQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type ShadowQuery = {\n  readonly __typename?: \"Query\";\n  readonly shadow: {\n    readonly __typename?: \"Shadow\";\n    readonly alias_title?: Maybe<string>;\n    readonly region: Region;\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly about?: Maybe<string>;\n    readonly credits?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"Character\";\n        readonly avatar: string;\n        readonly name: string;\n        readonly description?: Maybe<string>;\n      }>\n    >;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n    readonly sources?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowMedium\";\n        readonly id: number | string;\n        readonly cover?: Maybe<string>;\n        readonly url: string;\n        readonly super_quality_url?: Maybe<string>;\n        readonly preview_url?: Maybe<string>;\n        readonly posters?: Maybe<ReadonlyArray<string>>;\n        readonly name?: Maybe<string>;\n        readonly sub_name?: Maybe<string>;\n        readonly medium_quality_url?: Maybe<string>;\n        readonly low_quality_url?: Maybe<string>;\n        readonly high_quality_url?: Maybe<string>;\n        readonly duration?: Maybe<number>;\n        readonly description?: Maybe<string>;\n        readonly alias_name?: Maybe<string>;\n        readonly create_at: any;\n        readonly update_at: any;\n        readonly vote_like_count?: Maybe<number>;\n        readonly vote_dislike_count?: Maybe<number>;\n      }>\n    >;\n  };\n};\n\nexport type ShadowsPaginatedQueryVariables = Exact<{\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type ShadowsPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly shadows_paginated: {\n    readonly __typename?: \"ShadowPaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"ShadowPageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Shadow\";\n          readonly id: number | string;\n          readonly description?: Maybe<string>;\n          readonly title: string;\n          readonly sub_title?: Maybe<string>;\n          readonly create_at: any;\n          readonly update_at: any;\n          readonly cover: string;\n          readonly posters?: Maybe<ReadonlyArray<string>>;\n          readonly region: Region;\n          readonly about?: Maybe<string>;\n          readonly sources?: Maybe<\n            ReadonlyArray<{\n              readonly __typename?: \"ShadowMedium\";\n              readonly id: number | string;\n              readonly cover?: Maybe<string>;\n              readonly url: string;\n              readonly super_quality_url?: Maybe<string>;\n              readonly preview_url?: Maybe<string>;\n              readonly posters?: Maybe<ReadonlyArray<string>>;\n              readonly name?: Maybe<string>;\n              readonly sub_name?: Maybe<string>;\n              readonly medium_quality_url?: Maybe<string>;\n              readonly low_quality_url?: Maybe<string>;\n              readonly high_quality_url?: Maybe<string>;\n              readonly duration?: Maybe<number>;\n              readonly description?: Maybe<string>;\n              readonly alias_name?: Maybe<string>;\n              readonly create_at: any;\n              readonly update_at: any;\n              readonly vote_like_count?: Maybe<number>;\n              readonly vote_dislike_count?: Maybe<number>;\n            }>\n          >;\n          readonly author: {\n            readonly __typename?: \"User\";\n            readonly uid: number | string;\n            readonly avatar: string;\n            readonly nickname?: Maybe<string>;\n            readonly username: string;\n            readonly description?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type UserShadowsPaginatedQueryVariables = Exact<{\n  author_username: Scalars[\"String\"];\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type UserShadowsPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly user_shadows_paginated: {\n    readonly __typename?: \"ShadowPaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"ShadowPageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Shadow\";\n          readonly id: number | string;\n          readonly description?: Maybe<string>;\n          readonly title: string;\n          readonly sub_title?: Maybe<string>;\n          readonly create_at: any;\n          readonly update_at: any;\n          readonly cover: string;\n          readonly posters?: Maybe<ReadonlyArray<string>>;\n          readonly region: Region;\n          readonly about?: Maybe<string>;\n          readonly sources?: Maybe<\n            ReadonlyArray<{\n              readonly __typename?: \"ShadowMedium\";\n              readonly id: number | string;\n              readonly cover?: Maybe<string>;\n              readonly url: string;\n              readonly super_quality_url?: Maybe<string>;\n              readonly preview_url?: Maybe<string>;\n              readonly posters?: Maybe<ReadonlyArray<string>>;\n              readonly name?: Maybe<string>;\n              readonly sub_name?: Maybe<string>;\n              readonly medium_quality_url?: Maybe<string>;\n              readonly low_quality_url?: Maybe<string>;\n              readonly high_quality_url?: Maybe<string>;\n              readonly duration?: Maybe<number>;\n              readonly description?: Maybe<string>;\n              readonly alias_name?: Maybe<string>;\n              readonly create_at: any;\n              readonly update_at: any;\n              readonly vote_like_count?: Maybe<number>;\n              readonly vote_dislike_count?: Maybe<number>;\n            }>\n          >;\n          readonly author: {\n            readonly __typename?: \"User\";\n            readonly uid: number | string;\n            readonly avatar: string;\n            readonly nickname?: Maybe<string>;\n            readonly username: string;\n            readonly description?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type ShadowUrgesByShadowQueryVariables = Exact<{\n  shadow_id: Scalars[\"ID\"];\n}>;\n\nexport type ShadowUrgesByShadowQuery = {\n  readonly __typename?: \"Query\";\n  readonly shadow_urges_by_shadow: ReadonlyArray<{\n    readonly __typename?: \"Shadow\";\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly region: Region;\n    readonly about?: Maybe<string>;\n    readonly sources?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowMedium\";\n        readonly id: number | string;\n        readonly cover?: Maybe<string>;\n        readonly url: string;\n        readonly super_quality_url?: Maybe<string>;\n        readonly preview_url?: Maybe<string>;\n        readonly posters?: Maybe<ReadonlyArray<string>>;\n        readonly name?: Maybe<string>;\n        readonly sub_name?: Maybe<string>;\n        readonly medium_quality_url?: Maybe<string>;\n        readonly low_quality_url?: Maybe<string>;\n        readonly high_quality_url?: Maybe<string>;\n        readonly duration?: Maybe<number>;\n        readonly description?: Maybe<string>;\n        readonly alias_name?: Maybe<string>;\n        readonly create_at: any;\n        readonly update_at: any;\n        readonly vote_like_count?: Maybe<number>;\n        readonly vote_dislike_count?: Maybe<number>;\n      }>\n    >;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n  }>;\n};\n\nexport type ShadowNextUrgesByShadowQueryVariables = Exact<{\n  shadow_id: Scalars[\"ID\"];\n}>;\n\nexport type ShadowNextUrgesByShadowQuery = {\n  readonly __typename?: \"Query\";\n  readonly shadow_next_urges_by_shadow: ReadonlyArray<{\n    readonly __typename?: \"Shadow\";\n    readonly id: number | string;\n    readonly description?: Maybe<string>;\n    readonly title: string;\n    readonly sub_title?: Maybe<string>;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly cover: string;\n    readonly posters?: Maybe<ReadonlyArray<string>>;\n    readonly region: Region;\n    readonly about?: Maybe<string>;\n    readonly sources?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowMedium\";\n        readonly id: number | string;\n        readonly cover?: Maybe<string>;\n        readonly url: string;\n        readonly super_quality_url?: Maybe<string>;\n        readonly preview_url?: Maybe<string>;\n        readonly posters?: Maybe<ReadonlyArray<string>>;\n        readonly name?: Maybe<string>;\n        readonly sub_name?: Maybe<string>;\n        readonly medium_quality_url?: Maybe<string>;\n        readonly low_quality_url?: Maybe<string>;\n        readonly high_quality_url?: Maybe<string>;\n        readonly duration?: Maybe<number>;\n        readonly description?: Maybe<string>;\n        readonly alias_name?: Maybe<string>;\n        readonly create_at: any;\n        readonly update_at: any;\n        readonly vote_like_count?: Maybe<number>;\n        readonly vote_dislike_count?: Maybe<number>;\n      }>\n    >;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n  }>;\n};\n\nexport type ReviewsPaginatedQueryVariables = Exact<{\n  type?: Maybe<ReviewMedium>;\n  type_id?: Maybe<Scalars[\"ID\"]>;\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type ReviewsPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly reviews_paginated: {\n    readonly __typename?: \"ReviewPaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"ReviewPageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ReviewEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Review\";\n          readonly id: number | string;\n          readonly content: string;\n          readonly create_at: any;\n          readonly update_at: any;\n          readonly author: {\n            readonly __typename?: \"User\";\n            readonly uid: number | string;\n            readonly avatar: string;\n            readonly nickname?: Maybe<string>;\n            readonly username: string;\n            readonly description?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type SearchShadowsPaginatedQueryVariables = Exact<{\n  word?: Maybe<Scalars[\"String\"]>;\n  query?: Maybe<PaginatedQuery>;\n}>;\n\nexport type SearchShadowsPaginatedQuery = {\n  readonly __typename?: \"Query\";\n  readonly search_shadows_paginated: {\n    readonly __typename?: \"ShadowPaginated\";\n    readonly totalCount: number;\n    readonly pageInfo: {\n      readonly __typename?: \"ShadowPageInfo\";\n      readonly hasNextPage: boolean;\n      readonly endCursor: string;\n    };\n    readonly edges?: Maybe<\n      ReadonlyArray<{\n        readonly __typename?: \"ShadowEdge\";\n        readonly cursor: string;\n        readonly node: {\n          readonly __typename?: \"Shadow\";\n          readonly id: number | string;\n          readonly description?: Maybe<string>;\n          readonly title: string;\n          readonly sub_title?: Maybe<string>;\n          readonly create_at: any;\n          readonly update_at: any;\n          readonly cover: string;\n          readonly posters?: Maybe<ReadonlyArray<string>>;\n          readonly region: Region;\n          readonly about?: Maybe<string>;\n          readonly sources?: Maybe<\n            ReadonlyArray<{\n              readonly __typename?: \"ShadowMedium\";\n              readonly id: number | string;\n              readonly cover?: Maybe<string>;\n              readonly url: string;\n              readonly super_quality_url?: Maybe<string>;\n              readonly preview_url?: Maybe<string>;\n              readonly posters?: Maybe<ReadonlyArray<string>>;\n              readonly name?: Maybe<string>;\n              readonly sub_name?: Maybe<string>;\n              readonly medium_quality_url?: Maybe<string>;\n              readonly low_quality_url?: Maybe<string>;\n              readonly high_quality_url?: Maybe<string>;\n              readonly duration?: Maybe<number>;\n              readonly description?: Maybe<string>;\n              readonly alias_name?: Maybe<string>;\n              readonly create_at: any;\n              readonly update_at: any;\n              readonly vote_like_count?: Maybe<number>;\n              readonly vote_dislike_count?: Maybe<number>;\n            }>\n          >;\n          readonly author: {\n            readonly __typename?: \"User\";\n            readonly uid: number | string;\n            readonly avatar: string;\n            readonly nickname?: Maybe<string>;\n            readonly username: string;\n            readonly description?: Maybe<string>;\n          };\n        };\n      }>\n    >;\n  };\n};\n\nexport type IsFollowingQueryVariables = Exact<{\n  owner_uid: Scalars[\"String\"];\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type IsFollowingQuery = {\n  readonly __typename?: \"Query\";\n  readonly is_following: boolean;\n};\n\nexport type UserQueryVariables = Exact<{\n  uid?: Maybe<Scalars[\"String\"]>;\n  username?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type UserQuery = {\n  readonly __typename?: \"Query\";\n  readonly user: {\n    readonly __typename?: \"User\";\n    readonly uid: number | string;\n    readonly username: string;\n    readonly email?: Maybe<string>;\n    readonly nickname?: Maybe<string>;\n    readonly avatar: string;\n    readonly mobile?: Maybe<string>;\n    readonly address?: Maybe<string>;\n    readonly description?: Maybe<string>;\n    readonly create_at?: Maybe<any>;\n    readonly update_at?: Maybe<any>;\n    readonly delete_at?: Maybe<any>;\n  };\n};\n\nexport type FansTotalQueryVariables = Exact<{\n  owner_uid?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type FansTotalQuery = {\n  readonly __typename?: \"Query\";\n  readonly fans_total: number;\n};\n\nexport type FollowsTotalQueryVariables = Exact<{\n  follower_uid?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type FollowsTotalQuery = {\n  readonly __typename?: \"Query\";\n  readonly follows_total: number;\n};\n\nexport type ReviewCreatedSubscriptionVariables = Exact<{\n  type: ReviewMedium;\n  type_id: Scalars[\"ID\"];\n}>;\n\nexport type ReviewCreatedSubscription = {\n  readonly __typename?: \"Subscription\";\n  readonly review_created: {\n    readonly __typename?: \"Review\";\n    readonly id: number | string;\n    readonly content: string;\n    readonly create_at: any;\n    readonly update_at: any;\n    readonly author: {\n      readonly __typename?: \"User\";\n      readonly uid: number | string;\n      readonly avatar: string;\n      readonly nickname?: Maybe<string>;\n      readonly username: string;\n      readonly description?: Maybe<string>;\n    };\n  };\n};\n\nexport const MeFragmentDoc = gql`\n  fragment Me on User {\n    uid\n    username\n    email\n    nickname\n    avatar\n    mobile\n    address\n    description\n    create_at\n    update_at\n  }\n`;\nexport const AuthorFragmentDoc = gql`\n  fragment Author on User {\n    uid\n    avatar\n    nickname\n    username\n    description\n  }\n`;\nexport const ShadowSourceFragmentDoc = gql`\n  fragment ShadowSource on ShadowMedium {\n    id\n    cover\n    url\n    super_quality_url\n    preview_url\n    posters\n    name\n    sub_name\n    medium_quality_url\n    low_quality_url\n    high_quality_url\n    duration\n    description\n    alias_name\n    create_at\n    update_at\n    vote_like_count\n    vote_dislike_count\n  }\n`;\nexport const ShadowFragmentDoc = gql`\n  fragment Shadow on Shadow {\n    id\n    description\n    title\n    sub_title\n    create_at\n    update_at\n    cover\n    posters\n    region\n    about\n    sources {\n      ...ShadowSource\n    }\n  }\n  ${ShadowSourceFragmentDoc}\n`;\nexport const ReviewFragmentDoc = gql`\n  fragment Review on Review {\n    id\n    content\n    create_at\n    update_at\n  }\n`;\nexport const LoginDocument = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)\n  }\n`;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<\n  LoginMutation,\n  LoginMutationVariables\n>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      username: // value for 'username'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    LoginMutation,\n    LoginMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(\n    LoginDocument,\n    baseOptions\n  );\n}\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<\n  LoginMutation\n>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  LoginMutation,\n  LoginMutationVariables\n>;\nexport const SendRegisterEmailDocument = gql`\n  mutation sendRegisterEmail($email: String!) {\n    send_register_email(email: $email)\n  }\n`;\nexport type SendRegisterEmailMutationFn = ApolloReactCommon.MutationFunction<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\n\n/**\n * __useSendRegisterEmailMutation__\n *\n * To run a mutation, you first call `useSendRegisterEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSendRegisterEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [sendRegisterEmailMutation, { data, loading, error }] = useSendRegisterEmailMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useSendRegisterEmailMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    SendRegisterEmailMutation,\n    SendRegisterEmailMutationVariables\n  >(SendRegisterEmailDocument, baseOptions);\n}\nexport type SendRegisterEmailMutationHookResult = ReturnType<\n  typeof useSendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationResult = ApolloReactCommon.MutationResult<\n  SendRegisterEmailMutation\n>;\nexport type SendRegisterEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  SendRegisterEmailMutation,\n  SendRegisterEmailMutationVariables\n>;\nexport const CreateUserWithCodeDocument = gql`\n  mutation createUserWithCode($user: CreateUserWithCodeInput!) {\n    create_user_with_code(user: $user) {\n      username\n      avatar\n    }\n  }\n`;\nexport type CreateUserWithCodeMutationFn = ApolloReactCommon.MutationFunction<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\n\n/**\n * __useCreateUserWithCodeMutation__\n *\n * To run a mutation, you first call `useCreateUserWithCodeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateUserWithCodeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createUserWithCodeMutation, { data, loading, error }] = useCreateUserWithCodeMutation({\n *   variables: {\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useCreateUserWithCodeMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateUserWithCodeMutation,\n    CreateUserWithCodeMutationVariables\n  >(CreateUserWithCodeDocument, baseOptions);\n}\nexport type CreateUserWithCodeMutationHookResult = ReturnType<\n  typeof useCreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationResult = ApolloReactCommon.MutationResult<\n  CreateUserWithCodeMutation\n>;\nexport type CreateUserWithCodeMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateUserWithCodeMutation,\n  CreateUserWithCodeMutationVariables\n>;\nexport const UpdateUserDocument = gql`\n  mutation updateUser($user: UpdateUserInput!) {\n    update_user(user: $user) {\n      ...Me\n    }\n  }\n  ${MeFragmentDoc}\n`;\nexport type UpdateUserMutationFn = ApolloReactCommon.MutationFunction<\n  UpdateUserMutation,\n  UpdateUserMutationVariables\n>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useUpdateUserMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    UpdateUserMutation,\n    UpdateUserMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    UpdateUserMutation,\n    UpdateUserMutationVariables\n  >(UpdateUserDocument, baseOptions);\n}\nexport type UpdateUserMutationHookResult = ReturnType<\n  typeof useUpdateUserMutation\n>;\nexport type UpdateUserMutationResult = ApolloReactCommon.MutationResult<\n  UpdateUserMutation\n>;\nexport type UpdateUserMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  UpdateUserMutation,\n  UpdateUserMutationVariables\n>;\nexport const CreateShadowDocument = gql`\n  mutation createShadow($shadow: CreateShadowInput!) {\n    create_shadow(shadow: $shadow) {\n      create_at\n    }\n  }\n`;\nexport type CreateShadowMutationFn = ApolloReactCommon.MutationFunction<\n  CreateShadowMutation,\n  CreateShadowMutationVariables\n>;\n\n/**\n * __useCreateShadowMutation__\n *\n * To run a mutation, you first call `useCreateShadowMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateShadowMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createShadowMutation, { data, loading, error }] = useCreateShadowMutation({\n *   variables: {\n *      shadow: // value for 'shadow'\n *   },\n * });\n */\nexport function useCreateShadowMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateShadowMutation,\n    CreateShadowMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateShadowMutation,\n    CreateShadowMutationVariables\n  >(CreateShadowDocument, baseOptions);\n}\nexport type CreateShadowMutationHookResult = ReturnType<\n  typeof useCreateShadowMutation\n>;\nexport type CreateShadowMutationResult = ApolloReactCommon.MutationResult<\n  CreateShadowMutation\n>;\nexport type CreateShadowMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateShadowMutation,\n  CreateShadowMutationVariables\n>;\nexport const UpdateShadowDocument = gql`\n  mutation updateShadow($shadow: UpdateShadowInput!, $shadow_id: ID!) {\n    update_shadow(shadow_id: $shadow_id, shadow: $shadow) {\n      create_at\n    }\n  }\n`;\nexport type UpdateShadowMutationFn = ApolloReactCommon.MutationFunction<\n  UpdateShadowMutation,\n  UpdateShadowMutationVariables\n>;\n\n/**\n * __useUpdateShadowMutation__\n *\n * To run a mutation, you first call `useUpdateShadowMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateShadowMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateShadowMutation, { data, loading, error }] = useUpdateShadowMutation({\n *   variables: {\n *      shadow: // value for 'shadow'\n *      shadow_id: // value for 'shadow_id'\n *   },\n * });\n */\nexport function useUpdateShadowMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    UpdateShadowMutation,\n    UpdateShadowMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    UpdateShadowMutation,\n    UpdateShadowMutationVariables\n  >(UpdateShadowDocument, baseOptions);\n}\nexport type UpdateShadowMutationHookResult = ReturnType<\n  typeof useUpdateShadowMutation\n>;\nexport type UpdateShadowMutationResult = ApolloReactCommon.MutationResult<\n  UpdateShadowMutation\n>;\nexport type UpdateShadowMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  UpdateShadowMutation,\n  UpdateShadowMutationVariables\n>;\nexport const AddMediumsToShadowDocument = gql`\n  mutation addMediumsToShadow(\n    $shadow_id: ID!\n    $shadow_medium: CreateShadowMediumInput!\n  ) {\n    add_mediums_to_shadow(\n      shadow_id: $shadow_id\n      shadow_medium: $shadow_medium\n    ) {\n      sources {\n        name\n      }\n    }\n  }\n`;\nexport type AddMediumsToShadowMutationFn = ApolloReactCommon.MutationFunction<\n  AddMediumsToShadowMutation,\n  AddMediumsToShadowMutationVariables\n>;\n\n/**\n * __useAddMediumsToShadowMutation__\n *\n * To run a mutation, you first call `useAddMediumsToShadowMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddMediumsToShadowMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addMediumsToShadowMutation, { data, loading, error }] = useAddMediumsToShadowMutation({\n *   variables: {\n *      shadow_id: // value for 'shadow_id'\n *      shadow_medium: // value for 'shadow_medium'\n *   },\n * });\n */\nexport function useAddMediumsToShadowMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    AddMediumsToShadowMutation,\n    AddMediumsToShadowMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    AddMediumsToShadowMutation,\n    AddMediumsToShadowMutationVariables\n  >(AddMediumsToShadowDocument, baseOptions);\n}\nexport type AddMediumsToShadowMutationHookResult = ReturnType<\n  typeof useAddMediumsToShadowMutation\n>;\nexport type AddMediumsToShadowMutationResult = ApolloReactCommon.MutationResult<\n  AddMediumsToShadowMutation\n>;\nexport type AddMediumsToShadowMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  AddMediumsToShadowMutation,\n  AddMediumsToShadowMutationVariables\n>;\nexport const CreateOrUpdateVoteDocument = gql`\n  mutation createOrUpdateVote($vote: CreateVoteInput!) {\n    create_or_update_vote(vote: $vote) {\n      status\n    }\n  }\n`;\nexport type CreateOrUpdateVoteMutationFn = ApolloReactCommon.MutationFunction<\n  CreateOrUpdateVoteMutation,\n  CreateOrUpdateVoteMutationVariables\n>;\n\n/**\n * __useCreateOrUpdateVoteMutation__\n *\n * To run a mutation, you first call `useCreateOrUpdateVoteMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrUpdateVoteMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrUpdateVoteMutation, { data, loading, error }] = useCreateOrUpdateVoteMutation({\n *   variables: {\n *      vote: // value for 'vote'\n *   },\n * });\n */\nexport function useCreateOrUpdateVoteMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateOrUpdateVoteMutation,\n    CreateOrUpdateVoteMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateOrUpdateVoteMutation,\n    CreateOrUpdateVoteMutationVariables\n  >(CreateOrUpdateVoteDocument, baseOptions);\n}\nexport type CreateOrUpdateVoteMutationHookResult = ReturnType<\n  typeof useCreateOrUpdateVoteMutation\n>;\nexport type CreateOrUpdateVoteMutationResult = ApolloReactCommon.MutationResult<\n  CreateOrUpdateVoteMutation\n>;\nexport type CreateOrUpdateVoteMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateOrUpdateVoteMutation,\n  CreateOrUpdateVoteMutationVariables\n>;\nexport const VoteDocument = gql`\n  query vote($medium_id: ID!) {\n    vote(medium_id: $medium_id) {\n      status\n    }\n  }\n`;\n\n/**\n * __useVoteQuery__\n *\n * To run a query within a React component, call `useVoteQuery` and pass it any options that fit your needs.\n * When your component renders, `useVoteQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useVoteQuery({\n *   variables: {\n *      medium_id: // value for 'medium_id'\n *   },\n * });\n */\nexport function useVoteQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<VoteQuery, VoteQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<VoteQuery, VoteQueryVariables>(\n    VoteDocument,\n    baseOptions\n  );\n}\nexport function useVoteLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    VoteQuery,\n    VoteQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<VoteQuery, VoteQueryVariables>(\n    VoteDocument,\n    baseOptions\n  );\n}\nexport type VoteQueryHookResult = ReturnType<typeof useVoteQuery>;\nexport type VoteLazyQueryHookResult = ReturnType<typeof useVoteLazyQuery>;\nexport type VoteQueryResult = ApolloReactCommon.QueryResult<\n  VoteQuery,\n  VoteQueryVariables\n>;\nexport const CreateReviewDocument = gql`\n  mutation createReview($review: CreateReviewInput!) {\n    create_review(review: $review) {\n      id\n    }\n  }\n`;\nexport type CreateReviewMutationFn = ApolloReactCommon.MutationFunction<\n  CreateReviewMutation,\n  CreateReviewMutationVariables\n>;\n\n/**\n * __useCreateReviewMutation__\n *\n * To run a mutation, you first call `useCreateReviewMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateReviewMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createReviewMutation, { data, loading, error }] = useCreateReviewMutation({\n *   variables: {\n *      review: // value for 'review'\n *   },\n * });\n */\nexport function useCreateReviewMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateReviewMutation,\n    CreateReviewMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateReviewMutation,\n    CreateReviewMutationVariables\n  >(CreateReviewDocument, baseOptions);\n}\nexport type CreateReviewMutationHookResult = ReturnType<\n  typeof useCreateReviewMutation\n>;\nexport type CreateReviewMutationResult = ApolloReactCommon.MutationResult<\n  CreateReviewMutation\n>;\nexport type CreateReviewMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateReviewMutation,\n  CreateReviewMutationVariables\n>;\nexport const UploadFileOssDocument = gql`\n  mutation uploadFileOss($file: Upload!) {\n    upload_file_oss(file: $file)\n  }\n`;\nexport type UploadFileOssMutationFn = ApolloReactCommon.MutationFunction<\n  UploadFileOssMutation,\n  UploadFileOssMutationVariables\n>;\n\n/**\n * __useUploadFileOssMutation__\n *\n * To run a mutation, you first call `useUploadFileOssMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUploadFileOssMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [uploadFileOssMutation, { data, loading, error }] = useUploadFileOssMutation({\n *   variables: {\n *      file: // value for 'file'\n *   },\n * });\n */\nexport function useUploadFileOssMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    UploadFileOssMutation,\n    UploadFileOssMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    UploadFileOssMutation,\n    UploadFileOssMutationVariables\n  >(UploadFileOssDocument, baseOptions);\n}\nexport type UploadFileOssMutationHookResult = ReturnType<\n  typeof useUploadFileOssMutation\n>;\nexport type UploadFileOssMutationResult = ApolloReactCommon.MutationResult<\n  UploadFileOssMutation\n>;\nexport type UploadFileOssMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  UploadFileOssMutation,\n  UploadFileOssMutationVariables\n>;\nexport const CreateFollowDocument = gql`\n  mutation createFollow($follow: CreateFollowInput!) {\n    create_follow(follow: $follow) {\n      create_at\n    }\n  }\n`;\nexport type CreateFollowMutationFn = ApolloReactCommon.MutationFunction<\n  CreateFollowMutation,\n  CreateFollowMutationVariables\n>;\n\n/**\n * __useCreateFollowMutation__\n *\n * To run a mutation, you first call `useCreateFollowMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateFollowMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createFollowMutation, { data, loading, error }] = useCreateFollowMutation({\n *   variables: {\n *      follow: // value for 'follow'\n *   },\n * });\n */\nexport function useCreateFollowMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    CreateFollowMutation,\n    CreateFollowMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    CreateFollowMutation,\n    CreateFollowMutationVariables\n  >(CreateFollowDocument, baseOptions);\n}\nexport type CreateFollowMutationHookResult = ReturnType<\n  typeof useCreateFollowMutation\n>;\nexport type CreateFollowMutationResult = ApolloReactCommon.MutationResult<\n  CreateFollowMutation\n>;\nexport type CreateFollowMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  CreateFollowMutation,\n  CreateFollowMutationVariables\n>;\nexport const RemoveFollowDocument = gql`\n  mutation removeFollow($follow: DeleteFollowInput!) {\n    remove_follow(follow: $follow) {\n      create_at\n    }\n  }\n`;\nexport type RemoveFollowMutationFn = ApolloReactCommon.MutationFunction<\n  RemoveFollowMutation,\n  RemoveFollowMutationVariables\n>;\n\n/**\n * __useRemoveFollowMutation__\n *\n * To run a mutation, you first call `useRemoveFollowMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRemoveFollowMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [removeFollowMutation, { data, loading, error }] = useRemoveFollowMutation({\n *   variables: {\n *      follow: // value for 'follow'\n *   },\n * });\n */\nexport function useRemoveFollowMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    RemoveFollowMutation,\n    RemoveFollowMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    RemoveFollowMutation,\n    RemoveFollowMutationVariables\n  >(RemoveFollowDocument, baseOptions);\n}\nexport type RemoveFollowMutationHookResult = ReturnType<\n  typeof useRemoveFollowMutation\n>;\nexport type RemoveFollowMutationResult = ApolloReactCommon.MutationResult<\n  RemoveFollowMutation\n>;\nexport type RemoveFollowMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  RemoveFollowMutation,\n  RemoveFollowMutationVariables\n>;\nexport const PlatformAuthWayDocument = gql`\n  query platformAuthWay {\n    platform_auth_way {\n      platform\n      url\n      http_domain @client\n    }\n  }\n`;\n\n/**\n * __usePlatformAuthWayQuery__\n *\n * To run a query within a React component, call `usePlatformAuthWayQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlatformAuthWayQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlatformAuthWayQuery({\n *   variables: {\n *   },\n * });\n */\nexport function usePlatformAuthWayQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >(PlatformAuthWayDocument, baseOptions);\n}\nexport function usePlatformAuthWayLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    PlatformAuthWayQuery,\n    PlatformAuthWayQueryVariables\n  >(PlatformAuthWayDocument, baseOptions);\n}\nexport type PlatformAuthWayQueryHookResult = ReturnType<\n  typeof usePlatformAuthWayQuery\n>;\nexport type PlatformAuthWayLazyQueryHookResult = ReturnType<\n  typeof usePlatformAuthWayLazyQuery\n>;\nexport type PlatformAuthWayQueryResult = ApolloReactCommon.QueryResult<\n  PlatformAuthWayQuery,\n  PlatformAuthWayQueryVariables\n>;\nexport const HasUsernameDocument = gql`\n  query hasUsername($username: String!) {\n    has_username(username: $username)\n  }\n`;\n\n/**\n * __useHasUsernameQuery__\n *\n * To run a query within a React component, call `useHasUsernameQuery` and pass it any options that fit your needs.\n * When your component renders, `useHasUsernameQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHasUsernameQuery({\n *   variables: {\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useHasUsernameQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    HasUsernameQuery,\n    HasUsernameQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<HasUsernameQuery, HasUsernameQueryVariables>(\n    HasUsernameDocument,\n    baseOptions\n  );\n}\nexport function useHasUsernameLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    HasUsernameQuery,\n    HasUsernameQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    HasUsernameQuery,\n    HasUsernameQueryVariables\n  >(HasUsernameDocument, baseOptions);\n}\nexport type HasUsernameQueryHookResult = ReturnType<typeof useHasUsernameQuery>;\nexport type HasUsernameLazyQueryHookResult = ReturnType<\n  typeof useHasUsernameLazyQuery\n>;\nexport type HasUsernameQueryResult = ApolloReactCommon.QueryResult<\n  HasUsernameQuery,\n  HasUsernameQueryVariables\n>;\nexport const MeDocument = gql`\n  query me {\n    me {\n      ...Me\n    }\n  }\n  ${MeFragmentDoc}\n`;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(\n    MeDocument,\n    baseOptions\n  );\n}\nexport function useMeLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>\n) {\n  return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(\n    MeDocument,\n    baseOptions\n  );\n}\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<\n  MeQuery,\n  MeQueryVariables\n>;\nexport const CurrentTopicDocument = gql`\n  query currentTopic {\n    current_topic {\n      id\n      title\n      description\n      top_shadows {\n        ...Shadow\n        author {\n          ...Author\n        }\n      }\n      top_shadow {\n        ...Shadow\n        author {\n          ...Author\n        }\n      }\n    }\n  }\n  ${ShadowFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useCurrentTopicQuery__\n *\n * To run a query within a React component, call `useCurrentTopicQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentTopicQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentTopicQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentTopicQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport function useCurrentTopicLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    CurrentTopicQuery,\n    CurrentTopicQueryVariables\n  >(CurrentTopicDocument, baseOptions);\n}\nexport type CurrentTopicQueryHookResult = ReturnType<\n  typeof useCurrentTopicQuery\n>;\nexport type CurrentTopicLazyQueryHookResult = ReturnType<\n  typeof useCurrentTopicLazyQuery\n>;\nexport type CurrentTopicQueryResult = ApolloReactCommon.QueryResult<\n  CurrentTopicQuery,\n  CurrentTopicQueryVariables\n>;\nexport const ShadowUrgesDocument = gql`\n  query shadowUrges {\n    shadow_urges {\n      ...Shadow\n      author {\n        ...Author\n      }\n    }\n  }\n  ${ShadowFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useShadowUrgesQuery__\n *\n * To run a query within a React component, call `useShadowUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useShadowUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useShadowUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useShadowUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    ShadowUrgesQuery,\n    ShadowUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<ShadowUrgesQuery, ShadowUrgesQueryVariables>(\n    ShadowUrgesDocument,\n    baseOptions\n  );\n}\nexport function useShadowUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    ShadowUrgesQuery,\n    ShadowUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    ShadowUrgesQuery,\n    ShadowUrgesQueryVariables\n  >(ShadowUrgesDocument, baseOptions);\n}\nexport type ShadowUrgesQueryHookResult = ReturnType<typeof useShadowUrgesQuery>;\nexport type ShadowUrgesLazyQueryHookResult = ReturnType<\n  typeof useShadowUrgesLazyQuery\n>;\nexport type ShadowUrgesQueryResult = ApolloReactCommon.QueryResult<\n  ShadowUrgesQuery,\n  ShadowUrgesQueryVariables\n>;\nexport const UserUrgesDocument = gql`\n  query userUrges {\n    user_urges {\n      nickname\n      avatar\n      username\n      uid\n      description\n    }\n  }\n`;\n\n/**\n * __useUserUrgesQuery__\n *\n * To run a query within a React component, call `useUserUrgesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserUrgesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserUrgesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserUrgesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport function useUserUrgesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserUrgesQuery,\n    UserUrgesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<UserUrgesQuery, UserUrgesQueryVariables>(\n    UserUrgesDocument,\n    baseOptions\n  );\n}\nexport type UserUrgesQueryHookResult = ReturnType<typeof useUserUrgesQuery>;\nexport type UserUrgesLazyQueryHookResult = ReturnType<\n  typeof useUserUrgesLazyQuery\n>;\nexport type UserUrgesQueryResult = ApolloReactCommon.QueryResult<\n  UserUrgesQuery,\n  UserUrgesQueryVariables\n>;\nexport const PlaylistsPaginatedDocument = gql`\n  query playlistsPaginated(\n    $query: PaginatedQuery\n    $author_uid: String\n    $author_username: String\n  ) {\n    playlists_paginated(\n      query: $query\n      author_uid: $author_uid\n      author_username: $author_username\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          title\n          description\n          cover\n          create_at\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __usePlaylistsPaginatedQuery__\n *\n * To run a query within a React component, call `usePlaylistsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlaylistsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlaylistsPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *      author_uid: // value for 'author_uid'\n *      author_username: // value for 'author_username'\n *   },\n * });\n */\nexport function usePlaylistsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport function usePlaylistsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    PlaylistsPaginatedQuery,\n    PlaylistsPaginatedQueryVariables\n  >(PlaylistsPaginatedDocument, baseOptions);\n}\nexport type PlaylistsPaginatedQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedQuery\n>;\nexport type PlaylistsPaginatedLazyQueryHookResult = ReturnType<\n  typeof usePlaylistsPaginatedLazyQuery\n>;\nexport type PlaylistsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  PlaylistsPaginatedQuery,\n  PlaylistsPaginatedQueryVariables\n>;\nexport const ShadowDocument = gql`\n  query shadow($id: ID!) {\n    shadow(id: $id) {\n      credits {\n        avatar\n        name\n        description\n      }\n      author {\n        ...Author\n      }\n      alias_title\n      region\n      ...Shadow\n      sources {\n        ...ShadowSource\n      }\n    }\n  }\n  ${AuthorFragmentDoc}\n  ${ShadowFragmentDoc}\n  ${ShadowSourceFragmentDoc}\n`;\n\n/**\n * __useShadowQuery__\n *\n * To run a query within a React component, call `useShadowQuery` and pass it any options that fit your needs.\n * When your component renders, `useShadowQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useShadowQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useShadowQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    ShadowQuery,\n    ShadowQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<ShadowQuery, ShadowQueryVariables>(\n    ShadowDocument,\n    baseOptions\n  );\n}\nexport function useShadowLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    ShadowQuery,\n    ShadowQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<ShadowQuery, ShadowQueryVariables>(\n    ShadowDocument,\n    baseOptions\n  );\n}\nexport type ShadowQueryHookResult = ReturnType<typeof useShadowQuery>;\nexport type ShadowLazyQueryHookResult = ReturnType<typeof useShadowLazyQuery>;\nexport type ShadowQueryResult = ApolloReactCommon.QueryResult<\n  ShadowQuery,\n  ShadowQueryVariables\n>;\nexport const ShadowsPaginatedDocument = gql`\n  query shadowsPaginated($query: PaginatedQuery) {\n    shadows_paginated(query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          ...Shadow\n          author {\n            ...Author\n          }\n        }\n      }\n    }\n  }\n  ${ShadowFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useShadowsPaginatedQuery__\n *\n * To run a query within a React component, call `useShadowsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useShadowsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useShadowsPaginatedQuery({\n *   variables: {\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useShadowsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    ShadowsPaginatedQuery,\n    ShadowsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    ShadowsPaginatedQuery,\n    ShadowsPaginatedQueryVariables\n  >(ShadowsPaginatedDocument, baseOptions);\n}\nexport function useShadowsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    ShadowsPaginatedQuery,\n    ShadowsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    ShadowsPaginatedQuery,\n    ShadowsPaginatedQueryVariables\n  >(ShadowsPaginatedDocument, baseOptions);\n}\nexport type ShadowsPaginatedQueryHookResult = ReturnType<\n  typeof useShadowsPaginatedQuery\n>;\nexport type ShadowsPaginatedLazyQueryHookResult = ReturnType<\n  typeof useShadowsPaginatedLazyQuery\n>;\nexport type ShadowsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  ShadowsPaginatedQuery,\n  ShadowsPaginatedQueryVariables\n>;\nexport const UserShadowsPaginatedDocument = gql`\n  query userShadowsPaginated(\n    $author_username: String!\n    $query: PaginatedQuery\n  ) {\n    user_shadows_paginated(author_username: $author_username, query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          ...Shadow\n          author {\n            ...Author\n          }\n        }\n      }\n    }\n  }\n  ${ShadowFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useUserShadowsPaginatedQuery__\n *\n * To run a query within a React component, call `useUserShadowsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserShadowsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserShadowsPaginatedQuery({\n *   variables: {\n *      author_username: // value for 'author_username'\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useUserShadowsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    UserShadowsPaginatedQuery,\n    UserShadowsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    UserShadowsPaginatedQuery,\n    UserShadowsPaginatedQueryVariables\n  >(UserShadowsPaginatedDocument, baseOptions);\n}\nexport function useUserShadowsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserShadowsPaginatedQuery,\n    UserShadowsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    UserShadowsPaginatedQuery,\n    UserShadowsPaginatedQueryVariables\n  >(UserShadowsPaginatedDocument, baseOptions);\n}\nexport type UserShadowsPaginatedQueryHookResult = ReturnType<\n  typeof useUserShadowsPaginatedQuery\n>;\nexport type UserShadowsPaginatedLazyQueryHookResult = ReturnType<\n  typeof useUserShadowsPaginatedLazyQuery\n>;\nexport type UserShadowsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  UserShadowsPaginatedQuery,\n  UserShadowsPaginatedQueryVariables\n>;\nexport const ShadowUrgesByShadowDocument = gql`\n  query shadowUrgesByShadow($shadow_id: ID!) {\n    shadow_urges_by_shadow(shadow_id: $shadow_id) {\n      ...Shadow\n      author {\n        ...Author\n      }\n    }\n  }\n  ${ShadowFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useShadowUrgesByShadowQuery__\n *\n * To run a query within a React component, call `useShadowUrgesByShadowQuery` and pass it any options that fit your needs.\n * When your component renders, `useShadowUrgesByShadowQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useShadowUrgesByShadowQuery({\n *   variables: {\n *      shadow_id: // value for 'shadow_id'\n *   },\n * });\n */\nexport function useShadowUrgesByShadowQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    ShadowUrgesByShadowQuery,\n    ShadowUrgesByShadowQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    ShadowUrgesByShadowQuery,\n    ShadowUrgesByShadowQueryVariables\n  >(ShadowUrgesByShadowDocument, baseOptions);\n}\nexport function useShadowUrgesByShadowLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    ShadowUrgesByShadowQuery,\n    ShadowUrgesByShadowQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    ShadowUrgesByShadowQuery,\n    ShadowUrgesByShadowQueryVariables\n  >(ShadowUrgesByShadowDocument, baseOptions);\n}\nexport type ShadowUrgesByShadowQueryHookResult = ReturnType<\n  typeof useShadowUrgesByShadowQuery\n>;\nexport type ShadowUrgesByShadowLazyQueryHookResult = ReturnType<\n  typeof useShadowUrgesByShadowLazyQuery\n>;\nexport type ShadowUrgesByShadowQueryResult = ApolloReactCommon.QueryResult<\n  ShadowUrgesByShadowQuery,\n  ShadowUrgesByShadowQueryVariables\n>;\nexport const ShadowNextUrgesByShadowDocument = gql`\n  query shadowNextUrgesByShadow($shadow_id: ID!) {\n    shadow_next_urges_by_shadow(shadow_id: $shadow_id) {\n      ...Shadow\n      author {\n        ...Author\n      }\n    }\n  }\n  ${ShadowFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useShadowNextUrgesByShadowQuery__\n *\n * To run a query within a React component, call `useShadowNextUrgesByShadowQuery` and pass it any options that fit your needs.\n * When your component renders, `useShadowNextUrgesByShadowQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useShadowNextUrgesByShadowQuery({\n *   variables: {\n *      shadow_id: // value for 'shadow_id'\n *   },\n * });\n */\nexport function useShadowNextUrgesByShadowQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    ShadowNextUrgesByShadowQuery,\n    ShadowNextUrgesByShadowQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    ShadowNextUrgesByShadowQuery,\n    ShadowNextUrgesByShadowQueryVariables\n  >(ShadowNextUrgesByShadowDocument, baseOptions);\n}\nexport function useShadowNextUrgesByShadowLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    ShadowNextUrgesByShadowQuery,\n    ShadowNextUrgesByShadowQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    ShadowNextUrgesByShadowQuery,\n    ShadowNextUrgesByShadowQueryVariables\n  >(ShadowNextUrgesByShadowDocument, baseOptions);\n}\nexport type ShadowNextUrgesByShadowQueryHookResult = ReturnType<\n  typeof useShadowNextUrgesByShadowQuery\n>;\nexport type ShadowNextUrgesByShadowLazyQueryHookResult = ReturnType<\n  typeof useShadowNextUrgesByShadowLazyQuery\n>;\nexport type ShadowNextUrgesByShadowQueryResult = ApolloReactCommon.QueryResult<\n  ShadowNextUrgesByShadowQuery,\n  ShadowNextUrgesByShadowQueryVariables\n>;\nexport const ReviewsPaginatedDocument = gql`\n  query reviewsPaginated(\n    $type: ReviewMedium\n    $type_id: ID\n    $query: PaginatedQuery\n  ) {\n    reviews_paginated(type: $type, type_id: $type_id, query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          ...Review\n          author {\n            ...Author\n          }\n        }\n      }\n    }\n  }\n  ${ReviewFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useReviewsPaginatedQuery__\n *\n * To run a query within a React component, call `useReviewsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useReviewsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewsPaginatedQuery({\n *   variables: {\n *      type: // value for 'type'\n *      type_id: // value for 'type_id'\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useReviewsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    ReviewsPaginatedQuery,\n    ReviewsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    ReviewsPaginatedQuery,\n    ReviewsPaginatedQueryVariables\n  >(ReviewsPaginatedDocument, baseOptions);\n}\nexport function useReviewsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    ReviewsPaginatedQuery,\n    ReviewsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    ReviewsPaginatedQuery,\n    ReviewsPaginatedQueryVariables\n  >(ReviewsPaginatedDocument, baseOptions);\n}\nexport type ReviewsPaginatedQueryHookResult = ReturnType<\n  typeof useReviewsPaginatedQuery\n>;\nexport type ReviewsPaginatedLazyQueryHookResult = ReturnType<\n  typeof useReviewsPaginatedLazyQuery\n>;\nexport type ReviewsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  ReviewsPaginatedQuery,\n  ReviewsPaginatedQueryVariables\n>;\nexport const SearchShadowsPaginatedDocument = gql`\n  query searchShadowsPaginated($word: String, $query: PaginatedQuery) {\n    search_shadows_paginated(word: $word, query: $query) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          ...Shadow\n          author {\n            ...Author\n          }\n        }\n      }\n    }\n  }\n  ${ShadowFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useSearchShadowsPaginatedQuery__\n *\n * To run a query within a React component, call `useSearchShadowsPaginatedQuery` and pass it any options that fit your needs.\n * When your component renders, `useSearchShadowsPaginatedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSearchShadowsPaginatedQuery({\n *   variables: {\n *      word: // value for 'word'\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useSearchShadowsPaginatedQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    SearchShadowsPaginatedQuery,\n    SearchShadowsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    SearchShadowsPaginatedQuery,\n    SearchShadowsPaginatedQueryVariables\n  >(SearchShadowsPaginatedDocument, baseOptions);\n}\nexport function useSearchShadowsPaginatedLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    SearchShadowsPaginatedQuery,\n    SearchShadowsPaginatedQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    SearchShadowsPaginatedQuery,\n    SearchShadowsPaginatedQueryVariables\n  >(SearchShadowsPaginatedDocument, baseOptions);\n}\nexport type SearchShadowsPaginatedQueryHookResult = ReturnType<\n  typeof useSearchShadowsPaginatedQuery\n>;\nexport type SearchShadowsPaginatedLazyQueryHookResult = ReturnType<\n  typeof useSearchShadowsPaginatedLazyQuery\n>;\nexport type SearchShadowsPaginatedQueryResult = ApolloReactCommon.QueryResult<\n  SearchShadowsPaginatedQuery,\n  SearchShadowsPaginatedQueryVariables\n>;\nexport const IsFollowingDocument = gql`\n  query isFollowing($owner_uid: String!, $follower_uid: String) {\n    is_following(owner_uid: $owner_uid, follower_uid: $follower_uid)\n  }\n`;\n\n/**\n * __useIsFollowingQuery__\n *\n * To run a query within a React component, call `useIsFollowingQuery` and pass it any options that fit your needs.\n * When your component renders, `useIsFollowingQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useIsFollowingQuery({\n *   variables: {\n *      owner_uid: // value for 'owner_uid'\n *      follower_uid: // value for 'follower_uid'\n *   },\n * });\n */\nexport function useIsFollowingQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    IsFollowingQuery,\n    IsFollowingQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<IsFollowingQuery, IsFollowingQueryVariables>(\n    IsFollowingDocument,\n    baseOptions\n  );\n}\nexport function useIsFollowingLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    IsFollowingQuery,\n    IsFollowingQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    IsFollowingQuery,\n    IsFollowingQueryVariables\n  >(IsFollowingDocument, baseOptions);\n}\nexport type IsFollowingQueryHookResult = ReturnType<typeof useIsFollowingQuery>;\nexport type IsFollowingLazyQueryHookResult = ReturnType<\n  typeof useIsFollowingLazyQuery\n>;\nexport type IsFollowingQueryResult = ApolloReactCommon.QueryResult<\n  IsFollowingQuery,\n  IsFollowingQueryVariables\n>;\nexport const UserDocument = gql`\n  query user($uid: String, $username: String) {\n    user(uid: $uid, username: $username) {\n      uid\n      username\n      email\n      nickname\n      avatar\n      mobile\n      address\n      description\n      create_at\n      update_at\n      delete_at\n    }\n  }\n`;\n\n/**\n * __useUserQuery__\n *\n * To run a query within a React component, call `useUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserQuery({\n *   variables: {\n *      uid: // value for 'uid'\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useUserQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<UserQuery, UserQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<UserQuery, UserQueryVariables>(\n    UserDocument,\n    baseOptions\n  );\n}\nexport function useUserLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    UserQuery,\n    UserQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<UserQuery, UserQueryVariables>(\n    UserDocument,\n    baseOptions\n  );\n}\nexport type UserQueryHookResult = ReturnType<typeof useUserQuery>;\nexport type UserLazyQueryHookResult = ReturnType<typeof useUserLazyQuery>;\nexport type UserQueryResult = ApolloReactCommon.QueryResult<\n  UserQuery,\n  UserQueryVariables\n>;\nexport const FansTotalDocument = gql`\n  query fansTotal($owner_uid: String) {\n    fans_total(owner_uid: $owner_uid)\n  }\n`;\n\n/**\n * __useFansTotalQuery__\n *\n * To run a query within a React component, call `useFansTotalQuery` and pass it any options that fit your needs.\n * When your component renders, `useFansTotalQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFansTotalQuery({\n *   variables: {\n *      owner_uid: // value for 'owner_uid'\n *   },\n * });\n */\nexport function useFansTotalQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    FansTotalQuery,\n    FansTotalQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<FansTotalQuery, FansTotalQueryVariables>(\n    FansTotalDocument,\n    baseOptions\n  );\n}\nexport function useFansTotalLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    FansTotalQuery,\n    FansTotalQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<FansTotalQuery, FansTotalQueryVariables>(\n    FansTotalDocument,\n    baseOptions\n  );\n}\nexport type FansTotalQueryHookResult = ReturnType<typeof useFansTotalQuery>;\nexport type FansTotalLazyQueryHookResult = ReturnType<\n  typeof useFansTotalLazyQuery\n>;\nexport type FansTotalQueryResult = ApolloReactCommon.QueryResult<\n  FansTotalQuery,\n  FansTotalQueryVariables\n>;\nexport const FollowsTotalDocument = gql`\n  query followsTotal($follower_uid: String) {\n    follows_total(follower_uid: $follower_uid)\n  }\n`;\n\n/**\n * __useFollowsTotalQuery__\n *\n * To run a query within a React component, call `useFollowsTotalQuery` and pass it any options that fit your needs.\n * When your component renders, `useFollowsTotalQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFollowsTotalQuery({\n *   variables: {\n *      follower_uid: // value for 'follower_uid'\n *   },\n * });\n */\nexport function useFollowsTotalQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    FollowsTotalQuery,\n    FollowsTotalQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<\n    FollowsTotalQuery,\n    FollowsTotalQueryVariables\n  >(FollowsTotalDocument, baseOptions);\n}\nexport function useFollowsTotalLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    FollowsTotalQuery,\n    FollowsTotalQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    FollowsTotalQuery,\n    FollowsTotalQueryVariables\n  >(FollowsTotalDocument, baseOptions);\n}\nexport type FollowsTotalQueryHookResult = ReturnType<\n  typeof useFollowsTotalQuery\n>;\nexport type FollowsTotalLazyQueryHookResult = ReturnType<\n  typeof useFollowsTotalLazyQuery\n>;\nexport type FollowsTotalQueryResult = ApolloReactCommon.QueryResult<\n  FollowsTotalQuery,\n  FollowsTotalQueryVariables\n>;\nexport const ReviewCreatedDocument = gql`\n  subscription reviewCreated($type: ReviewMedium!, $type_id: ID!) {\n    review_created(type: $type, type_id: $type_id) {\n      ...Review\n      author {\n        ...Author\n      }\n    }\n  }\n  ${ReviewFragmentDoc}\n  ${AuthorFragmentDoc}\n`;\n\n/**\n * __useReviewCreatedSubscription__\n *\n * To run a query within a React component, call `useReviewCreatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useReviewCreatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewCreatedSubscription({\n *   variables: {\n *      type: // value for 'type'\n *      type_id: // value for 'type_id'\n *   },\n * });\n */\nexport function useReviewCreatedSubscription(\n  baseOptions?: ApolloReactHooks.SubscriptionHookOptions<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >\n) {\n  return ApolloReactHooks.useSubscription<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >(ReviewCreatedDocument, baseOptions);\n}\nexport type ReviewCreatedSubscriptionHookResult = ReturnType<\n  typeof useReviewCreatedSubscription\n>;\nexport type ReviewCreatedSubscriptionResult = ApolloReactCommon.SubscriptionResult<\n  ReviewCreatedSubscription\n>;\n","import { ReactiveVar, makeVar } from \"@apollo/client\";\n\nexport const httpDomainVar: ReactiveVar<string> = makeVar<string>(\n  process.env.REACT_APP_HTTP_DOMAIN_URL || \"\"\n);\n\nexport const accessTokenVar: ReactiveVar<string | undefined | null> = makeVar<\n  string | undefined | null\n>(localStorage.getItem(\"access_token\"));\n\nexport const noticeFlagVar: ReactiveVar<boolean> = makeVar<boolean>(true);\n","import * as React from \"react\";\nimport { IPlaceholderProps } from \"./placeholder.d\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Typography,\n  Icon\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: IPlaceholderProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: IPlaceholderProps) => {\n        return props.height ?? \"100%\";\n      },\n      color: theme.palette.text.secondary,\n      flex: 1,\n      padding: theme.spacing(2, 0)\n    },\n    icon: (props: IPlaceholderProps) =>\n      props.size ? { fontSize: props.size } : theme.custom.base.icon.large\n  })\n);\n\nexport const PlaceholderDefault: React.FC<IPlaceholderProps> = (\n  props: IPlaceholderProps\n) => {\n  const classes = useStyles(props);\n  const { title, subtitle, children } = props;\n  return (\n    <div className={classes.root}>\n      {/* <div> */}\n      <Icon className={clsx(\"iconfont icon-404\", classes.icon)}></Icon>\n      {/* </div> */}\n      {title && <Typography variant=\"h6\">{title}</Typography>}\n      {subtitle && <Typography variant=\"subtitle1\">{subtitle}</Typography>}\n      {children}\n    </div>\n  );\n};\n","import { PlaceholderDefault } from \"./PlaceholderDefault\";\n\nexport default PlaceholderDefault;\nexport const Placeholder = PlaceholderDefault;\nexport * from \"./PlaceholderDefault\";\n","import * as React from \"react\";\nimport { BaseSpecialBoxProps } from \"./specialbox\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport Exception from \"@/components/base/Exception\";\nimport Placeholder from \"@/components/base/Placeholder\";\nimport Loading from \"@/components/base/Loading\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {}\n  })\n);\n\nexport const SpecialBoxDefault: React.FC<BaseSpecialBoxProps> = (\n  props: BaseSpecialBoxProps\n) => {\n  const classes = useStyles();\n  const {\n    component,\n    placeholder,\n    placeholderTitle,\n    placeholderSubtitle,\n    placeholderNode: PlaceholderNode,\n    loading,\n    loadingTitle,\n    loadingSubtitle,\n    loadingNode: LoadingNode,\n    error,\n    errorTitle,\n    errorSubtitle,\n    errorNode: ErrorNode\n  } = props;\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag className={classes.root}>\n      {loading &&\n        (LoadingNode ? (\n          LoadingNode\n        ) : (\n          <Loading title={loadingTitle} subtitle={loadingSubtitle} />\n        ))}\n      {error &&\n        (ErrorNode ? (\n          ErrorNode\n        ) : (\n          <Exception title={errorTitle} subtitle={errorSubtitle} />\n        ))}\n      {placeholder &&\n        !error &&\n        !loading &&\n        (PlaceholderNode ? (\n          PlaceholderNode\n        ) : (\n          <Placeholder\n            title={placeholderTitle}\n            subtitle={placeholderSubtitle}\n          />\n        ))}\n    </Tag>\n  );\n};\n","import * as React from \"react\";\nimport { TextSpecialBoxProps } from \"./specialbox\";\nimport { SpecialBoxDefault } from \"./SpecialBoxDefault\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const SpecialBoxText: React.FC<TextSpecialBoxProps> = (\n  props: TextSpecialBoxProps\n) => {\n  const { component, placeholderNode, loadingNode, errorNode, ...rest } = props;\n  return (\n    <SpecialBoxDefault\n      component={component || \"span\"}\n      placeholderNode={<Typography variant=\"inherit\">敬请期待</Typography>}\n      loadingNode={<Typography variant=\"inherit\">loading</Typography>}\n      errorNode={<Typography variant=\"inherit\">出错啦</Typography>}\n      {...rest}\n    />\n  );\n};\n","import { SpecialBoxDefault } from \"./SpecialBoxDefault\";\n\nexport default SpecialBoxDefault;\nexport const SpecialBox = SpecialBoxDefault;\nexport * from \"./SpecialBoxDefault\";\nexport * from \"./SpecialBoxText\";\n","import * as React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  makeStyles,\n  Box,\n  StandardProps\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    duration: {\n      color: \"#fff\",\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n      borderRadius: theme.shape.borderRadius,\n      width: 60,\n      height: 24,\n      fontSize: 12\n    }\n  })\n);\n\ninterface DurationProps extends StandardProps<HTMLElement, \"root\"> {\n  duration: number;\n  unit?: \"ms\" | \"s\";\n  classes?: any;\n}\n\nfunction Duration(props: DurationProps) {\n  const classes = useStyles();\n  let { duration, unit } = props;\n  if (unit === \"s\") {\n    duration = duration * 1000;\n  }\n\n  // 转换成毫秒\n  const hh = moment.duration(duration, \"ms\").hours() + \"\";\n  const mm = moment.duration(duration, \"ms\").minutes() + \"\";\n  const ss = moment.duration(duration, \"ms\").seconds() + \"\";\n  const format =\n    hh.padStart(2, \"0\") + \":\" + mm.padStart(2, \"0\") + \":\" + ss.padStart(2, \"0\");\n\n  return (\n    <Box\n      className={clsx(classes.duration, props.classes.root, props.className)}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      {format}\n    </Box>\n  );\n}\n\nDuration.defaultProps = {\n  unit: \"ms\"\n} as Partial<DurationProps>;\n\nexport default Duration;\n","import * as React from \"react\";\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaNormalProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_SHADOW_COVER } from \"@/common/constants/default.constant\";\nimport moment from \"moment\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\",\n      pointerEvents: (props: MediaNormalProps) => {\n        return props.disabled || props.loading ? \"none\" : \"auto\";\n      }\n    },\n    cover: {\n      position: \"relative\"\n    },\n    avatar: {\n      width: 56,\n      height: 56,\n      backgroundColor: \"#fff\",\n      border: \"3px solid #fff\",\n      position: \"absolute\",\n      bottom: -28,\n      right: 10,\n      borderRadius: \"50%\",\n      [theme.breakpoints.down(\"md\")]: {\n        width: 40,\n        height: 40,\n        bottom: -20,\n        right: 8\n      }\n    },\n    desc: {\n      overflow: \"hidden\",\n      display: \"-webkit-box\",\n      textOverflow: \"ellipsis\",\n      \"-webkit-line-clamp\": 2,\n      \"-webkit-box-orient\": \"vertical\"\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaNormal: React.FC<MediaNormalProps> = (\n  props: MediaNormalProps\n) => {\n  const classes = useStyles(props);\n\n  const handleClickRoot = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    props.onClickRoot && props.onClickRoot(e);\n  };\n\n  const handleClickAuthor = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    props.onClickAuthor && props.onClickAuthor(e);\n  };\n\n  if (props.loading) {\n    return <MediaNormalLoading classes={classes} />;\n  }\n\n  return (\n    <Box className={classes.wrap} onClick={handleClickRoot}>\n      <div className={classes.cover}>\n        <Image src={props.cover || DEFULAT_SHADOW_COVER} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n        <Avatar\n          onClick={handleClickAuthor}\n          className={classes.avatar}\n          src={props.author && props.author.avatar}\n        ></Avatar>\n      </div>\n      <Box padding={1}>\n        <Typography\n          onClick={handleClickAuthor}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {props.author && (props.author.nickname || props.author.username)}\n        </Typography>\n        <Typography variant=\"subtitle1\" noWrap>\n          {props.title || props.name}\n        </Typography>\n        {props.showDescription && (\n          <Typography\n            className={classes.desc}\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {props.description}\n          </Typography>\n        )}\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          {/* <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数：TODO\n          </Typography> */}\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            发布于：{moment(props.create_at).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst MediaNormalLoading = props => {\n  return (\n    <Box className={props.classes.wrap}>\n      <div className={props.classes.cover}>\n        <Image aspectRatio={16 / 9} />\n        <div className={props.classes.avatar}>\n          <Skeleton width=\"100%\" height=\"100%\" variant=\"circle\"></Skeleton>\n        </div>\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <Skeleton width=\"20%\" />\n        </Typography>\n        <Typography variant=\"subtitle1\" noWrap>\n          <Skeleton width=\"40%\" />\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Skeleton width=\"30%\" />\n          <Skeleton width=\"40%\" />\n          {/* <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          </Typography> */}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MediaNormal;\n","import * as React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaOwnProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_SHADOW_COVER } from \"@/common/constants/default.constant\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    cover: {\n      position: \"relative\"\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaOwn: React.FC<MediaOwnProps> = (props: MediaOwnProps) => {\n  const classes = useStyles();\n\n  const handleClickRoot = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    props.onClickRoot && props.onClickRoot(e);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={handleClickRoot}>\n      <div className={classes.cover}>\n        <Image src={props.cover || DEFULAT_SHADOW_COVER} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n      </div>\n      <Box padding={1}>\n        <Typography variant=\"subtitle1\" noWrap>\n          {props.title || props.name}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          {/* <Typography variant=\"caption\" color=\"textSecondary\">\n            观看次数：TODO\n          </Typography> */}\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            发布于：{moment(props.create_at).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MediaOwn;\n","import * as React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Image from \"@/components/base/Image\";\nimport { MediaPlainProps } from \"./media\";\nimport Duration from \"../Duration\";\nimport { DEFULAT_SHADOW_COVER } from \"@/common/constants/default.constant\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      width: \"100%\"\n    },\n    cover: {\n      position: \"relative\"\n    },\n    duration: {\n      position: \"absolute\",\n      left: 10,\n      bottom: 10\n    }\n  })\n);\nexport const MediaPlain: React.FC<MediaPlainProps> = (\n  props: MediaPlainProps\n) => {\n  const classes = useStyles();\n\n  const handleClickRoot = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    props.onClickRoot && props.onClickRoot(e);\n  };\n\n  return (\n    <Box className={classes.wrap} onClick={handleClickRoot}>\n      <div className={classes.cover}>\n        <Image src={props.cover || DEFULAT_SHADOW_COVER} aspectRatio={16 / 9} />\n        {props.duration && (\n          <Duration\n            classes={{ root: classes.duration }}\n            duration={props.duration}\n          />\n        )}\n      </div>\n    </Box>\n  );\n};\n\nexport default MediaPlain;\n","import * as React from \"react\";\nimport { WithToolProps } from \"./media\";\nimport { makeStyles, Theme, createStyles, IconButton } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      position: \"relative\"\n    },\n    tool: {\n      position: \"absolute\",\n      left: 10,\n      top: 10,\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    }\n  })\n);\n\nexport function withTool<P>(Component: React.FC<P & WithToolProps>) {\n  return (props: P & WithToolProps) => {\n    const classes = useStyles();\n    const { onDelete, ...rest } = props;\n\n    return (\n      <div className={classes.wrap}>\n        <Component {...(rest as P)} />\n        <div className={classes.tool}>\n          <IconButton onClick={onDelete}>\n            <Delete></Delete>\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n}\nexport default withTool;\n","export * from \"./MediaNormal\";\nexport * from \"./MediaOwn\";\nexport * from \"./MediaPlain\";\nexport * from \"./withTool\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { AspectRatioBox } from \"../AspectRatioBox\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    image: {\n      objectFit: (props: ImageProp) => {\n        return props.objectFit || \"cover\";\n      },\n      width: \"100%\",\n      height: \"100%\"\n    }\n  })\n);\n\ninterface ImageProp {\n  aspectRatio?: number; // 宽高比\n  src?: string;\n  width?: number | string;\n  height?: number | string;\n  alt?: string;\n  objectFit?: any;\n}\n\nenum ImageStatus {\n  Loading = 0,\n  Success = 1,\n  Failuare = -1\n}\n\nexport const Image: React.FC<ImageProp> = (props: ImageProp) => {\n  const classes = useStyles(props);\n  const { src, alt, aspectRatio, width, height } = props;\n\n  // status: 0:加载中 1: 加载成功 -1:加载失败\n  const [status, setStatus] = React.useState(ImageStatus.Loading);\n\n  const _loadImage = () => {\n    setStatus(ImageStatus.Success);\n  };\n\n  const _loadImageFail = () => {\n    setStatus(ImageStatus.Failuare);\n  };\n\n  return (\n    <AspectRatioBox ratio={aspectRatio} width={width} height={height}>\n      {src && status !== ImageStatus.Failuare && (\n        <img\n          alt={alt}\n          className={classes.image}\n          src={src}\n          onLoad={_loadImage}\n          onError={_loadImageFail}\n        />\n      )}\n      {status !== ImageStatus.Success && (\n        <>\n          {status === ImageStatus.Loading && (\n            <Skeleton\n              variant=\"rect\"\n              animation=\"wave\"\n              height=\"100%\"\n              width=\"100%\"\n            />\n          )}\n          {status === ImageStatus.Failuare && (\n            <Skeleton\n              variant=\"rect\"\n              animation=\"wave\"\n              height=\"100%\"\n              width=\"100%\"\n            />\n          )}\n        </>\n      )}\n    </AspectRatioBox>\n  );\n};\n\nexport default Image;\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { AiderScreenLayoutProps } from \"../layout.d\";\nimport { CreateCSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      maxWidth: 400,\n      flex: 1\n      // flexGrow: 1,\n      // flexShrink: 1,\n      // flexBasis: \"auto\"\n    },\n    agent: (props: AiderScreenLayoutProps) => {\n      const keys = Object.keys(theme.mixins.toolbar);\n      const height_normal =\n        theme.mixins.toolbar?.height || theme.mixins.toolbar?.minHeight || 0;\n      const top_normal = +height_normal + (props?.top || 0);\n      const style: CreateCSSProperties<AiderScreenLayoutProps> = {\n        position: \"sticky\",\n        top: top_normal,\n        overflow: \"auto\",\n        maxHeight: `calc(100vh - ${top_normal}px)`\n      };\n      keys.forEach(key => {\n        const entity: any = theme.mixins.toolbar[key];\n        if (\n          typeof entity === \"object\" &&\n          (entity?.height || entity?.minHeight)\n        ) {\n          const height_current = entity?.height || entity?.minHeight;\n          const top_current = +height_current + (props?.top || 0);\n          Object.assign(style, {\n            [key]: {\n              top: top_current,\n              maxHeight: `calc(100vh - ${top_current}px)`\n            }\n          });\n        }\n      });\n      return style;\n    },\n    root: {}\n  })\n);\n\nexport default function AiderScreen(props: AiderScreenLayoutProps) {\n  const classes = useStyles(props);\n  const { sticky } = props;\n  if (sticky) {\n    return (\n      <div className={clsx(classes.container)}>\n        <div className={clsx(classes.agent)}>\n          {/* <div className={clsx(classes.wrap)}>\n            <div className={clsx(classes.toolbar)}></div>\n          </div> */}\n          <div className={clsx(classes.root, props.className)}>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={clsx(classes.container, props.className)}>\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { BodyScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1600,\n      display: \"flex\",\n      margin: \"0 auto\"\n    }\n  })\n);\n\nexport default function BodyScreen(props: BodyScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { ContentScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 1200,\n      flex: 3\n      // flexGrow: 3,\n      // flexShrink: 3,\n      // flexBasis: \"auto\"\n    }\n  })\n);\n\nexport default function ContentScreen(props: ContentScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={Object.assign({}, props.width ? { width: props.width } : {})}\n      className={clsx(classes.root, props.className)}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { FullScreenLayoutProps } from \"../layout.d\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    }\n  })\n);\n\nexport default function FullScreen(props: FullScreenLayoutProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, props.className)}>{props.children}</div>\n  );\n}\n","import * as React from \"react\";\n\ninterface PageLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function PageLayout(props: PageLayoutProps) {\n  return <div>{props.children}</div>;\n}\n\nexport { FullScreen, BodyScreen, ContentScreen, AiderScreen } from \"./modules\";\n"],"sourceRoot":""}