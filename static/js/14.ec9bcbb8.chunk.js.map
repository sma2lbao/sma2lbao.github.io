{"version":3,"sources":["components/app/Input/input.d.ts","components/app/Input/useEditableInput.tsx","components/app/Input/EditableInput.tsx","components/app/Input/index.ts","components/base/Editor/Controls.tsx","components/base/Editor/NormalEditor.tsx","views/movies/MovieUpload/modules/EditAbout/index.tsx","views/movies/MovieUpload/modules/EditCast/index.tsx","components/app/FileUpload/FileUpload.tsx","views/movies/MovieUpload/modules/EditTop/index.tsx","views/movies/MovieUpload/modules/EditMediumInfo/index.tsx","views/movies/MovieUpload/modules/EditMain/index.tsx","components/base/Confirm/index.tsx","views/movies/MovieUpload/index.tsx"],"names":["InputStatus","useEditableInput","initValue","React","value","setValue","e","target","useStyles","makeStyles","theme","createStyles","root","input","borderColor","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","inherit","normalRoot","position","toolIcon","top","spacing","cursor","EditableInput","props","onChange","placeholder","variant","rest","classes","NORMAL","status","setStatus","Input","autoFocus","fullWidth","multiline","className","startAdornment","InputAdornment","IconButton","size","onClick","EDITING","Edit","fontSize","readOnly","disableUnderline","onBlur","paper","display","border","palette","divider","flexWrap","margin","grouped","borderRadius","shape","BLOCK_TYPES","label","style","icon","FormatQuote","FormatListBulleted","FormatListNumbered","Code","INLINE_STYLES","FormatBold","FormatItalic","FormatUnderlined","Controls","inlines","setInlines","blocktype","setBlocktype","toggleBlockType","toggleInlineStyle","Paper","elevation","ToggleButtonGroup","event","newFormats","currentTarget","dataset","map","type","ToggleButton","data-style","key","Divider","flexItem","orientation","exclusive","newFormat","editor","minHeight","NormalEditor","ref","raw","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorState","setEditorState","getRawString","stringify","convertToRaw","getCurrentContent","blockType","RichUtils","inlineStyle","blockStyleFn","block","getType","customStyleMap","CODE","backgroundColor","fontFamily","padding","handleKeyCommand","cmd","state","newState","keyBindingFn","getDefaultKeyBinding","spellCheck","EditAbout","aboutRaw","setAboutRaw","about","editorRef","rawString","current","background","EditCast","credits","setCredits","handleChange","idx","cur","Box","List","subheader","ListSubheader","Typography","avatar","name","description","tags","AddCircle","length","item","ListItem","ListItemAvatar","Avatar","src","inputProps","ListItemSecondaryAction","splice","handleDelete","Delete","Placeholder","title","flexDirection","justifyContent","alignItems","width","height","color","text","secondary","flex","custom","base","large","FileUpload","onComplete","onError","children","component","inputRef","useUploadFileOssMutation","onCompleted","data","upload_file_oss","error","message","loading","Tag","role","click","accept","validity","file","files","valid","variables","CloudUpload","defaultProps","aider","left","bottom","aiderContent","maxHeight","backdropFilter","overflow","main","right","transform","mainContent","posters","posterTool","EditTop","setTitle","sub_title","setSubTitle","setDescription","setPosters","cover","setCover","includes","handleRemovePoster","window","confirm","handleChangeCover","Image","aspectRatio","DEFULAT_MOVIE_COVER","GridList","cellHeight","cols","poster","GridListTile","alt","data-idx","imageUrl","gutterBottom","mt","disabled","PlayCircleOutline","body","content","borderRight","sourceWrap","EditMediumInfo","onSave","onCancel","open","setOpen","url","setUrl","setName","alias_name","setAliasName","handleCancle","Dialog","fullScreen","onClose","AppBar","Toolbar","Button","sourceUrl","sticky","box","borderTop","EditMain","forwardRef","useState","openMedium","setOpenMedium","mediums","setMediums","useImperativeHandle","Media","medium","ShowDialog","DialogTitle","DialogContent","DialogContentText","DialogActions","cancel","cancelText","onConfirm","confirmText","Confirm","dialog","options","Promise","resolve","reject","mountPoint","document","createElement","appendChild","clear","remove","ReactDOM","render","speedDial","speedDialIcon","MovieUpload","RouterHelper","useRouterHelper","tab","setTab","topRef","mainRef","aboutRef","castRef","useCreateMovieMutation","then","gotoHome","create_movie","Tabs","val","Tab","hidden","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","Save","tooltipTitle","topFields","mainFields","aboutFields","castFields","movie","sources"],"mappings":"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","file":"static/js/14.ec9bcbb8.chunk.js","sourcesContent":["import { InputProps } from \"@material-ui/core\";\n\nconst variantProps = [\n  \"body1\",\n  \"body2\",\n  \"button\",\n  \"caption\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"inherit\",\n  \"overline\",\n  \"subtitle1\",\n  \"subtitle2\"\n] as const;\n\nexport interface BaseInputAttributes {\n  placeholder?: string;\n\n  variant?: typeof variantProps[number];\n}\n\nexport interface BaseInputProps extends InputProps, BaseInputAttributes {\n  value: any;\n\n  onChange?(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void;\n}\n\nexport enum InputStatus {\n  NORMAL = 0, // 默认状态\n\n  EDITING = 1 // 编辑中\n}\n","import * as React from \"react\";\n\nexport const useEditableInput = (initValue?: any): [any, any] => {\n  const [value, setValue] = React.useState(initValue);\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n  };\n\n  return [value, onChange];\n};\n","import * as React from \"react\";\nimport {\n  Input,\n  makeStyles,\n  Theme,\n  createStyles,\n  InputAdornment,\n  IconButton\n} from \"@material-ui/core\";\nimport { BaseInputProps, InputStatus } from \"./input.d\";\nimport { Edit } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {},\n    input: {\n      borderColor: \"transparent\"\n    },\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n    /* Styles applied to the root element if `variant=\"inherit\"`. */\n    inherit: {},\n\n    normalRoot: {\n      position: \"relative\"\n    },\n\n    toolIcon: {\n      position: \"relative\",\n      top: theme.spacing(-1),\n      cursor: \"pointer\"\n    }\n  });\n});\n\nexport const EditableInput: React.FC<BaseInputProps> = props => {\n  const { value, onChange, placeholder, variant = \"body1\", ...rest } = props;\n  const classes = useStyles();\n  const [status, setStatus] = React.useState<InputStatus>(InputStatus.NORMAL);\n\n  return (\n    <Input\n      classes={{\n        root: classes.root\n      }}\n      autoFocus\n      fullWidth\n      multiline\n      className={classes[variant]}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      {...rest}\n      startAdornment={\n        status === InputStatus.NORMAL ? (\n          <InputAdornment position=\"start\">\n            <IconButton\n              size=\"small\"\n              onClick={() => setStatus(InputStatus.EDITING)}\n            >\n              <Edit fontSize=\"small\" />\n            </IconButton>\n          </InputAdornment>\n        ) : null\n      }\n      readOnly={status === InputStatus.NORMAL}\n      disableUnderline={status === InputStatus.NORMAL}\n      onBlur={() => setStatus(InputStatus.NORMAL)}\n    />\n  );\n};\n","export * from \"./useEditableInput\";\nexport * from \"./EditableInput\";\n","import * as React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Divider,\n  Paper\n} from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport {\n  FormatBold,\n  FormatItalic,\n  FormatUnderlined,\n  FormatQuote,\n  FormatListBulleted,\n  FormatListNumbered,\n  Code\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"inline-flex\",\n      border: `1px solid ${theme.palette.divider}`,\n      flexWrap: \"wrap\"\n    },\n    divider: {\n      margin: theme.spacing(1, 0.5)\n    },\n    grouped: {\n      margin: theme.spacing(0.5),\n      border: \"none\",\n      \"&:not(:first-child)\": {\n        borderRadius: theme.shape.borderRadius\n      },\n      \"&:first-child\": {\n        borderRadius: theme.shape.borderRadius\n      }\n    }\n  })\n);\n\nconst BLOCK_TYPES = [\n  // { label: \"H1\", style: \"header-one\", value: \"h1\", icon: <FormatBold /> },\n  // { label: \"H2\", style: \"header-two\", value: \"h2\", icon: <FormatBold /> },\n  // { label: \"H3\", style: \"header-three\", value: \"h3\", icon: <FormatBold /> },\n  // { label: \"H4\", style: \"header-four\", value: \"h4\", icon: <FormatBold /> },\n  // { label: \"H5\", style: \"header-five\", value: \"h5\", icon: <FormatBold /> },\n  // { label: \"H6\", style: \"header-six\", value: \"h6\", icon: <FormatBold /> },\n  {\n    label: \"Blockquote\",\n    style: \"blockquote\",\n    value: \"blockquote\",\n    icon: <FormatQuote />\n  },\n  {\n    label: \"UL\",\n    style: \"unordered-list-item\",\n    value: \"ul\",\n    icon: <FormatListBulleted />\n  },\n  {\n    label: \"OL\",\n    style: \"ordered-list-item\",\n    value: \"ol\",\n    icon: <FormatListNumbered />\n  },\n  {\n    label: \"CodeBlock\",\n    style: \"code-block\",\n    value: \"codeblock\",\n    icon: <Code />\n  }\n];\n\nconst INLINE_STYLES = [\n  { label: \"Bold\", style: \"BOLD\", value: \"bold\", icon: <FormatBold /> },\n  { label: \"Italic\", style: \"ITALIC\", value: \"italic\", icon: <FormatItalic /> },\n  {\n    label: \"Underline\",\n    style: \"UNDERLINE\",\n    value: \"underline\",\n    icon: <FormatUnderlined />\n  }\n  // {\n  //   label: \"Monospace\",\n  //   style: \"CODE\",\n  //   value: \"code\",\n  //   icon: <FormatQuote />,\n  // },\n];\n\nexport const Controls = props => {\n  const classes = useStyles();\n  const [inlines, setInlines] = React.useState<string[]>([]);\n  const [blocktype, setBlocktype] = React.useState<string>();\n  const { toggleBlockType, toggleInlineStyle } = props;\n  // const selection = editorState.getSelection();\n  // const blockType = editorState\n  //   .getCurrentContent()\n  //   .getBlockForKey(selection.getStartKey())\n  //   .getType();\n  // const currentStyle = editorState.getCurrentInlineStyle();\n\n  const handleInlineFormat = (\n    event: React.MouseEvent<HTMLElement>,\n    newFormats: string[]\n  ) => {\n    const { style } = event.currentTarget.dataset;\n    if (style) {\n      toggleInlineStyle(style);\n    }\n    setInlines(newFormats);\n  };\n\n  const handleBlocktypeFormat = (\n    event: React.MouseEvent<HTMLElement>,\n    newFormat\n  ) => {\n    const { style } = event.currentTarget.dataset;\n    if (style) {\n      toggleBlockType(style);\n    }\n    setBlocktype(newFormat);\n  };\n\n  return (\n    <Paper elevation={0} className={classes.paper}>\n      <ToggleButtonGroup\n        value={inlines}\n        onChange={handleInlineFormat}\n        classes={{ grouped: classes.grouped }}\n      >\n        {INLINE_STYLES.map(type => (\n          <ToggleButton\n            data-style={type.style}\n            key={type.value}\n            value={type.value}\n          >\n            {type.icon}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n      <Divider flexItem orientation=\"vertical\" className={classes.divider} />\n      <ToggleButtonGroup\n        value={blocktype}\n        exclusive\n        onChange={handleBlocktypeFormat}\n        classes={{ grouped: classes.grouped }}\n      >\n        {BLOCK_TYPES.map(type => (\n          <ToggleButton\n            data-style={type.style}\n            key={type.value}\n            value={type.value}\n          >\n            {type.icon}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </Paper>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  convertFromRaw,\n  convertToRaw\n} from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps, BaseEditorHandles } from \"./editor\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport { Controls } from \"./Controls\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      // minHeight: 420,\n    },\n    editor: {\n      minHeight: 220,\n      border: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const NormalEditor = React.forwardRef<\n  BaseEditorHandles,\n  BaseEditorProps\n>((props, ref) => {\n  const classes = useStyles();\n  const { raw, onBlur, placeholder } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    raw\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(raw)))\n      : EditorState.createEmpty()\n  );\n\n  React.useImperativeHandle(ref, () => ({\n    getRawString: () => {\n      return JSON.stringify(convertToRaw(editorState.getCurrentContent()));\n    }\n  }));\n\n  const handleKeyCommand = (cmd, state) => {\n    const newState = RichUtils.handleKeyCommand(state, cmd);\n    if (newState) {\n      setEditorState(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  const mapKeyToEditorCommand = e => {\n    // if (e.keyCode === 9 /* TAB */) {\n    //   const newEditorState = RichUtils.onTab(e, editorState, 4 /* maxDepth */);\n    //   if (newEditorState !== editorState) {\n    //     setEditorState(newEditorState);\n    //   }\n    //   return null;\n    // }\n    return getDefaultKeyBinding(e);\n  };\n\n  const toggleBlockType = blockType => {\n    setEditorState(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = inlineStyle => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, inlineStyle));\n  };\n\n  // Custom overrides for \"code\" style.\n  const styleMap = {\n    CODE: {\n      backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n      fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n      fontSize: 16,\n      padding: 2\n    }\n  };\n\n  function getBlockStyle(block) {\n    switch (block.getType()) {\n      case \"blockquote\":\n        return \"RichEditor-blockquote\";\n      default:\n        return \"\";\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Controls\n        editorState={editorState}\n        toggleBlockType={toggleBlockType}\n        toggleInlineStyle={toggleInlineStyle}\n      />\n      <div className={classes.editor}>\n        <Editor\n          blockStyleFn={getBlockStyle}\n          customStyleMap={styleMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={setEditorState}\n          onBlur={onBlur}\n          placeholder={placeholder}\n          spellCheck={true}\n        />\n      </div>\n    </div>\n  );\n});\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\nimport { EditorHandles } from \"@/components/base/Editor/editor\";\n\nexport interface EditAboutHandles {\n  about?: string;\n}\n\nexport const EditAbout = React.forwardRef<EditAboutHandles, unknown>(\n  (props, ref) => {\n    const [aboutRaw, setAboutRaw] = React.useState(\"\");\n\n    React.useImperativeHandle(ref, () => ({\n      about: aboutRaw\n    }));\n    const editorRef = React.createRef<EditorHandles>();\n\n    const handleBlur = () => {\n      const rawString = editorRef.current?.getRawString();\n      setAboutRaw(rawString);\n    };\n\n    return (\n      <div>\n        <NormalEditor ref={editorRef} onBlur={handleBlur} />\n      </div>\n    );\n  }\n);\n\nexport default EditAbout;\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\nimport { EditableInput } from \"@/components/app/Input\";\n\nexport interface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport interface EditCastHandles {\n  credits: CharacterEdit[];\n}\n\nexport const EditCast = React.forwardRef<EditCastHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      credits\n    }));\n\n    const handleAddCredit = () => {\n      setCredits([\n        ...credits,\n        {\n          avatar: \"\",\n          name: \"\",\n          description: \"\",\n          tags: []\n        }\n      ]);\n    };\n\n    const handleChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      const { dataset, value } = e.target;\n      if (dataset.idx && dataset.key) {\n        const cur = credits[dataset.idx];\n        cur[dataset.key] = value;\n        setCredits([...credits, cur]);\n      }\n    };\n\n    const handleDelete = (idx: number) => {\n      credits.splice(idx, 1);\n      setCredits([...credits]);\n    };\n\n    return (\n      <Box className={classes.root}>\n        <List\n          subheader={\n            <ListSubheader>\n              <Typography>演职表</Typography>\n              <IconButton onClick={handleAddCredit} size=\"small\">\n                <AddCircle fontSize=\"small\" />\n              </IconButton>\n            </ListSubheader>\n          }\n        >\n          {credits.length ? (\n            <>\n              {credits.map((item, idx) => {\n                return (\n                  <ListItem key={idx}>\n                    <ListItemAvatar>\n                      <Avatar src={item.avatar}></Avatar>\n                    </ListItemAvatar>\n                    <div>\n                      <EditableInput\n                        inputProps={{ \"data-idx\": idx, \"data-key\": \"name\" }}\n                        value={item.name}\n                        onChange={handleChange}\n                        placeholder=\"请输入名字\"\n                      />\n\n                      <EditableInput\n                        inputProps={{\n                          \"data-idx\": idx,\n                          \"data-key\": \"description\"\n                        }}\n                        value={item.name}\n                        onChange={handleChange}\n                        placeholder=\"请输入描述\"\n                      />\n                    </div>\n                    <ListItemSecondaryAction>\n                      <IconButton onClick={() => handleDelete(idx)}>\n                        <Delete />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </>\n          ) : (\n            <div>\n              <Placeholder title=\"Please add cast.\" />\n            </div>\n          )}\n        </List>\n      </Box>\n    );\n  }\n);\n\nexport default EditCast;\n","import * as React from \"react\";\nimport { useUploadFileOssMutation } from \"@/schema\";\nimport { BaseFileUploadProps } from \"./file-upload\";\nimport {\n  Box,\n  makeStyles,\n  Theme,\n  createStyles,\n  Typography\n} from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport { IPlaceholderProps } from \"@/components/base/Placeholder/placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: IPlaceholderProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: IPlaceholderProps) => {\n        return props.height ?? \"100%\";\n      },\n      color: theme.palette.text.secondary,\n      flex: 1\n    },\n    icon: theme.custom.base.icon.large\n  })\n);\n\nexport const FileUpload: React.FC<BaseFileUploadProps> = props => {\n  const { onComplete, onError, children, component, custom, title } = props;\n  const classes = useStyles(props);\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const [upload_file_oss, { loading }] = useUploadFileOssMutation({\n    onCompleted(data) {\n      onComplete && onComplete(data.upload_file_oss);\n    },\n    onError(error) {\n      onError && onError(error.message);\n    }\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity.valid) {\n      upload_file_oss({ variables: { file } });\n    }\n  };\n\n  const handleClick = () => {\n    if (!loading) {\n      inputRef.current?.click();\n    }\n  };\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag role=\"button\" onClick={handleClick}>\n      <input\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\"*\"\n        onChange={handleChange}\n      />\n      {custom ? (\n        { children }\n      ) : (\n        <Box className={classes.root}>\n          <div>\n            <CloudUpload className={classes.icon} />\n            {/* <CircularProgress className={classes.icon} /> */}\n          </div>\n          <Typography variant=\"h6\">{loading ? \"上传中...\" : title}</Typography>\n        </Box>\n      )}\n    </Tag>\n  );\n};\n\nFileUpload.defaultProps = {\n  custom: false,\n  title: \"点击上传\"\n};\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Box,\n  GridList,\n  GridListTile,\n  IconButton\n} from \"@material-ui/core\";\n\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\nimport { PlayCircleOutline } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    aider: {\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"45%\",\n      padding: theme.spacing(8)\n    },\n    aiderContent: {\n      width: \"50%\",\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      maxHeight: \"100%\",\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      overflow: \"auto\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    mainContent: {\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      padding: theme.spacing(4),\n      borderRadius: theme.shape.borderRadius\n    },\n    posters: {},\n    posterTool: {\n      display: \"none\"\n    }\n  })\n);\n\nexport interface EditTopHandles {\n  title: string;\n\n  sub_title?: string;\n\n  description?: string;\n\n  posters?: string[];\n\n  cover: string;\n}\n\nexport const EditTop = React.forwardRef<EditTopHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [title, setTitle] = useEditableInput(\"\");\n    const [sub_title, setSubTitle] = useEditableInput(\"\");\n    const [description, setDescription] = useEditableInput(\"\");\n    const [posters, setPosters] = React.useState<string[]>([]);\n    const [cover, setCover] = React.useState<string>(\"\");\n\n    React.useEffect(() => {\n      if (posters && posters.length > 0) {\n        if (!cover || !posters.includes(cover)) setCover(posters[0]);\n      } else {\n        setCover(\"\");\n      }\n    }, [cover, posters]);\n\n    React.useImperativeHandle(ref, () => ({\n      title,\n      sub_title,\n      description,\n      posters,\n      cover\n    }));\n\n    const handleAddPoster = imageUrl => {\n      if (imageUrl && !posters.includes(imageUrl)) {\n        setPosters([...posters, imageUrl]);\n      }\n    };\n\n    const handleRemovePoster = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const result = window.confirm(\"delete?\");\n      if (result) {\n        const { dataset } = e.currentTarget;\n        if (dataset.idx) {\n          posters.splice(+dataset.idx, 1);\n          setPosters([...posters]);\n        }\n      }\n    };\n\n    const handleChangeCover = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const { dataset } = e.currentTarget;\n      if (dataset.idx) {\n        setCover(posters[dataset.idx]);\n      }\n    };\n\n    return (\n      <div className={classes.root}>\n        <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n        <div className={classes.aider}>\n          <div className={classes.aiderContent}>\n            <GridList cellHeight=\"auto\" className={classes.posters} cols={1}>\n              {posters.map((poster, idx) => (\n                <GridListTile key={poster} cols={1}>\n                  <Image\n                    aspectRatio={16 / 9}\n                    src={poster}\n                    alt={\"poster\" + idx}\n                  />\n                  <div className={classes.posterTool}>\n                    <div data-idx={idx} onClick={handleRemovePoster}>\n                      remove poster\n                    </div>\n                    <div data-idx={idx} onClick={handleChangeCover}>\n                      {cover === poster ? \"is cover\" : \"isn't cover\"}\n                    </div>\n                  </div>\n                </GridListTile>\n              ))}\n              <GridListTile cols={1}>\n                <FileUpload onComplete={handleAddPoster} title=\"上传海报\" />\n              </GridListTile>\n            </GridList>\n          </div>\n        </div>\n        <div className={classes.main}>\n          <div className={classes.mainContent}>\n            <Typography gutterBottom variant=\"h4\" component=\"div\">\n              <EditableInput\n                variant=\"h4\"\n                value={title}\n                onChange={setTitle}\n                placeholder=\"movie title\"\n              />\n            </Typography>\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n              <EditableInput\n                value={sub_title}\n                onChange={setSubTitle}\n                placeholder=\"请输入副标题\"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\">\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"请输入电影描述...\"\n              />\n            </Typography>\n            <Box mt={3}>\n              <IconButton size=\"medium\" disabled>\n                <PlayCircleOutline fontSize=\"large\" />\n              </IconButton>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default EditTop;\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    sourceWrap: {\n      width: \"100%\",\n      position: \"relative\"\n    }\n  })\n);\n\nexport interface EditMediumInfoProp {\n  open: boolean;\n\n  onSave?(medium: unknown): void;\n\n  onCancel?(): void;\n}\n\nexport const EditMediumInfo: React.FC<EditMediumInfoProp> = (\n  props: EditMediumInfoProp\n) => {\n  const { onSave, onCancel } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [url, setUrl] = React.useState(\"\");\n  const [cover, setCover] = React.useState(\"\");\n  const [name, setName] = useEditableInput(\"\");\n  const [alias_name, setAliasName] = useEditableInput(\"\");\n  const [description, setDescription] = useEditableInput(\"\");\n\n  React.useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  const reset = () => {\n    setOpen(false);\n    setUrl(\"\");\n    setCover(\"\");\n    setName(\"\");\n    setAliasName(\"\");\n    setDescription(\"\");\n  };\n\n  const handleChangeCover = imageUrl => {\n    if (imageUrl) {\n      setCover(imageUrl);\n    }\n  };\n\n  const handleChangeSource = sourceUrl => {\n    if (sourceUrl) {\n      setUrl(sourceUrl);\n    }\n  };\n\n  const handleSave = () => {\n    onSave &&\n      onSave({\n        url,\n        cover,\n        name,\n        alias_name,\n        description\n      });\n    handleCancle();\n  };\n\n  const handleCancle = () => {\n    setOpen(false);\n    onCancel && onCancel();\n    reset();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleCancle}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Button onClick={handleSave} color=\"inherit\">\n              save\n            </Button>\n            <Button onClick={handleCancle} color=\"inherit\">\n              cancle\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <FullScreen>\n            <BodyScreen>\n              <div className={classes.sourceWrap}>\n                <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n                <FileUpload onComplete={handleChangeCover}>\n                  add cover\n                </FileUpload>\n                <FileUpload onComplete={handleChangeSource}>\n                  add source\n                </FileUpload>\n              </div>\n            </BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              {/* <VideoInfo /> */}\n              {/* <NextPlay /> */}\n              <EditableInput\n                value={name}\n                onChange={setName}\n                placeholder=\"name\"\n              />\n              <EditableInput\n                value={alias_name}\n                onChange={setAliasName}\n                placeholder=\"alias_name\"\n              />\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"description...\"\n              />\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              {/* <Comment /> */}\n              <Placeholder title=\"评论区\" />\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  GridList,\n  GridListTile,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { EditMediumInfo } from \"../EditMediumInfo\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport interface EditMainHandles {\n  mediums: any[];\n}\n\nexport const EditMain = React.forwardRef<EditMainHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [openMedium, setOpenMedium] = React.useState(false);\n    const [mediums, setMediums] = React.useState<any>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      mediums: mediums\n    }));\n\n    const handleSave = medium => {\n      setMediums([...mediums, medium]);\n    };\n\n    return (\n      <>\n        <Box className={classes.root}>\n          <Box className={classes.box}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              相关资源\n            </Typography>\n            <GridList cellHeight=\"auto\" cols={4}>\n              {mediums.map((item, idx) => {\n                return (\n                  <GridListTile cols={1} key={idx}>\n                    <MediaNormal {...item} />\n                  </GridListTile>\n                );\n              })}\n\n              <Button onClick={() => setOpenMedium(true)}>添加</Button>\n            </GridList>\n          </Box>\n          {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n        </Box>\n        <EditMediumInfo\n          open={openMedium}\n          onSave={handleSave}\n          onCancel={() => setOpenMedium(false)}\n        />\n      </>\n    );\n  }\n);\n\nexport default EditMain;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  DialogProps\n} from \"@material-ui/core\";\n\ninterface ConfirmProps extends Omit<DialogProps, \"open\"> {\n  title?: string;\n  content: string;\n  cancel?: boolean;\n  cancelText?: string;\n  confirmText?: string;\n}\n\ninterface ConfirmEventProps {\n  onConfirm?(): void;\n  onCancel?(): void;\n}\n\nconst ShowDialog = (props: ConfirmEventProps & ConfirmProps) => {\n  const [open, setOpen] = React.useState(true);\n  const handleCancel = () => {\n    setOpen(false);\n    props.onCancel && props.onCancel();\n  };\n\n  const handleConfirm = () => {\n    setOpen(false);\n    props.onConfirm && props.onConfirm();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onCancel && props.onCancel();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        {props.title && <DialogTitle>{props.title}</DialogTitle>}\n        <DialogContent>\n          <DialogContentText>{props.content}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {props.cancel && (\n            <Button onClick={handleCancel} color=\"primary\">\n              {props.cancelText || \"取消\"}\n            </Button>\n          )}\n          <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n            {props.confirmText || \"确定\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport const Confirm = {\n  dialog: function(options: ConfirmProps): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const mountPoint = document.createElement(\"div\");\n      document.body.appendChild(mountPoint);\n      const clear = () => {\n        mountPoint.remove();\n      };\n      const onConfirm = () => {\n        resolve(true);\n        clear();\n      };\n      const onCancel = () => {\n        resolve(false);\n        clear();\n      };\n      ReactDOM.render(\n        <div>\n          <ShowDialog {...options} onConfirm={onConfirm} onCancel={onCancel} />\n        </div>,\n        mountPoint\n      );\n    });\n  }\n};\n\nexport default Confirm;\n","import * as React from \"react\";\nimport {\n  EditAbout,\n  EditCast,\n  EditMain,\n  EditTop,\n  EditCastHandles,\n  EditTopHandles,\n  EditMainHandles,\n  EditAboutHandles\n} from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport { useCreateMovieMutation } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport Confirm from \"@/components/base/Confirm\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from \"@material-ui/lab\";\nimport { Save } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    speedDial: {\n      position: \"fixed\",\n      \"&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft\": {\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n      },\n      \"&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight\": {\n        top: theme.spacing(2),\n        left: theme.spacing(2)\n      }\n    },\n    speedDialIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  })\n);\n\nexport const MovieUpload: React.FC = () => {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [tab, setTab] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const topRef = React.createRef<EditTopHandles>();\n  const mainRef = React.createRef<EditMainHandles>();\n  const aboutRef = React.createRef<EditAboutHandles>();\n  const castRef = React.createRef<EditCastHandles>();\n\n  const [create_movie] = useCreateMovieMutation({\n    onCompleted() {\n      Confirm.dialog({\n        title: \"提示\",\n        content: \"上传成功。\"\n      }).then(() => {\n        RouterHelper.gotoHome();\n      });\n    }\n  });\n\n  const handleCreateMovie = () => {\n    const topFields = topRef.current;\n    const mainFields = mainRef.current;\n    const aboutFields = aboutRef.current;\n    const castFields = castRef.current;\n\n    create_movie({\n      variables: {\n        movie: {\n          title: topFields?.title || \"\",\n          cover: topFields?.cover || \"\",\n          posters: topFields?.posters,\n          description: topFields?.description,\n          credits: castFields?.credits,\n          about: aboutFields?.about,\n          sources: mainFields?.mediums\n        }\n      }\n    });\n  };\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop ref={topRef} />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMain ref={mainRef} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} />\n            </div>\n            <SpeedDial\n              ariaLabel=\"SpeedDial OpenIcon\"\n              className={classes.speedDial}\n              // hidden={hidden}\n              // icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n              icon={<SpeedDialIcon className={classes.speedDialIcon} />}\n              onClose={() => setOpen(false)}\n              onOpen={() => setOpen(true)}\n              open={open}\n            >\n              <SpeedDialAction\n                icon={<Save />}\n                tooltipTitle=\"Create\"\n                onClick={handleCreateMovie}\n              />\n            </SpeedDial>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default MovieUpload;\n"],"sourceRoot":""}