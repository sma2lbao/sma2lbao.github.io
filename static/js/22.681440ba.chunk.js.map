{"version":3,"sources":["components/base/Editor/NormalEditor.tsx","views/movies/MovieUpload/modules/EditAbout/index.tsx","components/app/Input/useEditableInput.tsx","components/app/Input/EditableInput.tsx","views/movies/MovieUpload/modules/EditCast/index.tsx","components/app/FileUpload/FileUpload.tsx","views/movies/MovieUpload/modules/EditTop/index.tsx","views/movies/MovieUpload/modules/EditMediumInfo/index.tsx","views/movies/MovieUpload/modules/EditMain/index.tsx","views/movies/MovieUpload/index.tsx"],"names":["NormalEditor","React","props","ref","raw","onBlur","placeholder","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorState","setEditorState","getRawString","stringify","convertToRaw","getCurrentContent","onChange","EditAbout","aboutRaw","setAboutRaw","about","editorRef","rawString","current","useEditableInput","initValue","value","setValue","e","target","useStyles","makeStyles","theme","createStyles","root","input","borderColor","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","inherit","EditableInput","variant","rest","classes","Input","className","backgroundColor","palette","background","paper","EditCast","credits","setCredits","handleChange","dataset","idx","key","cur","Box","List","subheader","ListSubheader","Typography","IconButton","onClick","avatar","name","description","tags","size","AddCircle","fontSize","length","map","item","ListItem","ListItemAvatar","Avatar","src","inputProps","ListItemSecondaryAction","newCredits","splice","handleDelete","Delete","Placeholder","title","FileUpload","onComplete","onError","children","component","inputRef","useUploadFileOssMutation","onCompleted","data","upload_file_oss","error","message","loading","Tag","role","click","style","display","type","accept","currentTarget","validity","file","files","valid","variables","position","width","aider","left","top","bottom","padding","spacing","aiderContent","borderRadius","shape","maxHeight","backdropFilter","overflow","main","right","transform","color","flexDirection","mainContent","posters","posterTool","EditTop","setTitle","sub_title","setSubTitle","setDescription","setPosters","cover","setCover","includes","handleRemovePoster","window","confirm","handleChangeCover","Image","aspectRatio","DEFULAT_MOVIE_COVER","GridList","cellHeight","cols","poster","GridListTile","alt","data-idx","imageUrl","gutterBottom","mt","Button","disabled","height","body","margin","content","borderRight","divider","sourceWrap","EditMediumInfo","onSave","onCancel","open","setOpen","url","setUrl","setName","alias_name","setAliasName","handleCancle","Dialog","fullScreen","onClose","AppBar","Toolbar","sourceUrl","sticky","box","borderTop","EditMain","forwardRef","useState","openMedium","setOpenMedium","mediums","setMediums","useImperativeHandle","Media","medium","MovieUpload","RouterHelper","useRouterHelper","tab","setTab","topRef","mainRef","aboutRef","castRef","useCreateMovieMutation","alert","gotoHome","create_movie","Tabs","val","Tab","label","hidden","topFields","mainFields","aboutFields","castFields","movie","sources"],"mappings":"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","file":"static/js/22.681440ba.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Editor, EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps, BaseEditorHandles } from \"./editor\";\n\nexport const NormalEditor = React.forwardRef<\n  BaseEditorHandles,\n  BaseEditorProps\n>((props, ref) => {\n  const { raw, onBlur, placeholder } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    raw\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(raw)))\n      : EditorState.createEmpty()\n  );\n\n  React.useImperativeHandle(ref, () => ({\n    getRawString: () => {\n      return JSON.stringify(convertToRaw(editorState.getCurrentContent()));\n    }\n  }));\n\n  return (\n    <Editor\n      editorState={editorState}\n      onChange={setEditorState}\n      onBlur={onBlur}\n      placeholder={placeholder}\n    />\n  );\n});\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\nimport { EditorHandles } from \"@/components/base/Editor/editor\";\n\nexport interface EditAboutHandles {\n  about?: string;\n}\n\nexport const EditAbout = React.forwardRef<EditAboutHandles, unknown>(\n  (props, ref) => {\n    const [aboutRaw, setAboutRaw] = React.useState(\"\");\n\n    React.useImperativeHandle(ref, () => ({\n      about: aboutRaw\n    }));\n    const editorRef = React.createRef<EditorHandles>();\n\n    const handleBlur = () => {\n      const rawString = editorRef.current?.getRawString();\n      setAboutRaw(rawString);\n    };\n\n    return (\n      <div>\n        <NormalEditor ref={editorRef} onBlur={handleBlur} />\n      </div>\n    );\n  }\n);\n\nexport default EditAbout;\n","import * as React from \"react\";\n\nexport const useEditableInput = (initValue?: any): [any, any] => {\n  const [value, setValue] = React.useState(initValue);\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n  };\n\n  return [value, onChange];\n};\n","import * as React from \"react\";\nimport { Input, makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport { BaseInputProps } from \"./input\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {},\n    input: {\n      borderColor: \"transparent\"\n    },\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n    /* Styles applied to the root element if `variant=\"inherit\"`. */\n    inherit: {}\n  });\n});\n\nexport const EditableInput: React.FC<BaseInputProps> = props => {\n  const { value, onChange, placeholder, variant = \"body1\", ...rest } = props;\n  const classes = useStyles();\n  return (\n    <Input\n      classes={{\n        root: classes.root\n      }}\n      className={classes[variant]}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      {...rest}\n    />\n  );\n};\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\nimport { EditableInput } from \"@/components/app/Input\";\n\nexport interface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport interface EditCastHandles {\n  credits: CharacterEdit[];\n}\n\nexport const EditCast = React.forwardRef<EditCastHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      credits\n    }));\n\n    const handleAddCredit = () => {\n      setCredits([\n        ...credits,\n        {\n          avatar: \"\",\n          name: \"\",\n          description: \"\",\n          tags: []\n        }\n      ]);\n    };\n\n    const handleChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      const { dataset, value } = e.target;\n      if (dataset.idx && dataset.key) {\n        const cur = credits[dataset.idx];\n        cur[dataset.key] = value;\n        setCredits([...credits, cur]);\n      }\n    };\n\n    const handleDelete = (idx: number) => {\n      const newCredits = credits.splice(idx, 1);\n      setCredits([...newCredits]);\n    };\n\n    return (\n      <Box className={classes.root}>\n        <List\n          subheader={\n            <ListSubheader>\n              <Typography>演职表</Typography>\n              <IconButton onClick={handleAddCredit} size=\"small\">\n                <AddCircle fontSize=\"small\" />\n              </IconButton>\n            </ListSubheader>\n          }\n        >\n          {credits.length ? (\n            <>\n              {credits.map((item, idx) => {\n                return (\n                  <ListItem key={idx}>\n                    <ListItemAvatar>\n                      <Avatar src={item.avatar}></Avatar>\n                    </ListItemAvatar>\n                    <div>\n                      <EditableInput\n                        inputProps={{ \"data-idx\": idx, \"data-key\": \"name\" }}\n                        value={item.name}\n                        onChange={handleChange}\n                        placeholder=\"请输入名字\"\n                      />\n\n                      <EditableInput\n                        inputProps={{\n                          \"data-idx\": idx,\n                          \"data-key\": \"description\"\n                        }}\n                        value={item.name}\n                        onChange={handleChange}\n                        placeholder=\"请输入描述\"\n                      />\n                    </div>\n                    <ListItemSecondaryAction>\n                      <IconButton onClick={() => handleDelete(idx)}>\n                        <Delete />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </>\n          ) : (\n            <div>\n              <Placeholder title=\"请添加演职人员\" />\n            </div>\n          )}\n        </List>\n      </Box>\n    );\n  }\n);\n\nexport default EditCast;\n","import * as React from \"react\";\nimport { useUploadFileOssMutation } from \"@/schema\";\nimport { BaseFileUploadProps } from \"./file-upload\";\n\nexport const FileUpload: React.FC<BaseFileUploadProps> = props => {\n  const { onComplete, onError, children, component } = props;\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const [upload_file_oss, { loading }] = useUploadFileOssMutation({\n    onCompleted(data) {\n      onComplete && onComplete(data.upload_file_oss);\n    },\n    onError(error) {\n      onError && onError(error.message);\n    }\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity.valid) {\n      upload_file_oss({ variables: { file } });\n    }\n  };\n\n  const handleClick = () => {\n    if (!loading) {\n      inputRef.current?.click();\n    }\n  };\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag role=\"button\" onClick={handleClick}>\n      <input\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\"*\"\n        onChange={handleChange}\n      />\n      {children}\n    </Tag>\n  );\n};\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Button,\n  Box,\n  GridList,\n  GridListTile\n} from \"@material-ui/core\";\n\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    aider: {\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"45%\",\n      padding: theme.spacing(8)\n    },\n    aiderContent: {\n      width: \"50%\",\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      maxHeight: \"100%\",\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      overflow: \"auto\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    mainContent: {\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      padding: theme.spacing(4),\n      borderRadius: theme.shape.borderRadius\n    },\n    posters: {},\n    posterTool: {\n      display: \"none\"\n    }\n  })\n);\n\nexport interface EditTopHandles {\n  title: string;\n\n  sub_title?: string;\n\n  description?: string;\n\n  posters?: string[];\n\n  cover: string;\n}\n\nexport const EditTop = React.forwardRef<EditTopHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [title, setTitle] = useEditableInput(\"\");\n    const [sub_title, setSubTitle] = useEditableInput(\"\");\n    const [description, setDescription] = useEditableInput(\"\");\n    const [posters, setPosters] = React.useState<string[]>([]);\n    const [cover, setCover] = React.useState<string>(\"\");\n\n    React.useEffect(() => {\n      if (posters && posters.length > 0) {\n        if (!cover || !posters.includes(cover)) setCover(posters[0]);\n      } else {\n        setCover(\"\");\n      }\n    }, [cover, posters]);\n\n    React.useImperativeHandle(ref, () => ({\n      title,\n      sub_title,\n      description,\n      posters,\n      cover\n    }));\n\n    const handleAddPoster = imageUrl => {\n      if (imageUrl && !posters.includes(imageUrl)) {\n        setPosters([...posters, imageUrl]);\n      }\n    };\n\n    const handleRemovePoster = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const result = window.confirm(\"delete?\");\n      if (result) {\n        const { dataset } = e.currentTarget;\n        if (dataset.idx) {\n          posters.splice(+dataset.idx, 1);\n          setPosters([...posters]);\n        }\n      }\n    };\n\n    const handleChangeCover = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const { dataset } = e.currentTarget;\n      if (dataset.idx) {\n        setCover(posters[dataset.idx]);\n      }\n    };\n\n    return (\n      <div className={classes.root}>\n        <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n        <div className={classes.aider}>\n          <div className={classes.aiderContent}>\n            <GridList cellHeight=\"auto\" className={classes.posters} cols={1}>\n              {posters.map((poster, idx) => (\n                <GridListTile key={poster} cols={1}>\n                  <Image\n                    aspectRatio={16 / 9}\n                    src={poster}\n                    alt={\"poster\" + idx}\n                  />\n                  <div className={classes.posterTool}>\n                    <div data-idx={idx} onClick={handleRemovePoster}>\n                      remove poster\n                    </div>\n                    <div data-idx={idx} onClick={handleChangeCover}>\n                      {cover === poster ? \"is cover\" : \"isn't cover\"}\n                    </div>\n                  </div>\n                </GridListTile>\n              ))}\n              <GridListTile cols={1}>\n                <FileUpload onComplete={handleAddPoster}>add poster</FileUpload>\n              </GridListTile>\n            </GridList>\n          </div>\n        </div>\n        <div className={classes.main}>\n          <div className={classes.mainContent}>\n            <Typography gutterBottom variant=\"h4\" component=\"div\">\n              <EditableInput\n                variant=\"h4\"\n                value={title}\n                onChange={setTitle}\n                placeholder=\"movie title\"\n              />\n            </Typography>\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n              <EditableInput\n                value={sub_title}\n                onChange={setSubTitle}\n                placeholder=\"请输入副标题\"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\">\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"请输入电影描述...\"\n              />\n            </Typography>\n            <Box mt={3}>\n              <Button disabled size=\"large\" variant=\"contained\" color=\"primary\">\n                播放\n              </Button>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default EditTop;\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    sourceWrap: {\n      width: \"100%\",\n      position: \"relative\"\n    }\n  })\n);\n\nexport interface EditMediumInfoProp {\n  open: boolean;\n\n  onSave?(medium: unknown): void;\n\n  onCancel?(): void;\n}\n\nexport const EditMediumInfo: React.FC<EditMediumInfoProp> = (\n  props: EditMediumInfoProp\n) => {\n  const { onSave, onCancel } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [url, setUrl] = React.useState(\"\");\n  const [cover, setCover] = React.useState(\"\");\n  const [name, setName] = useEditableInput(\"\");\n  const [alias_name, setAliasName] = useEditableInput(\"\");\n  const [description, setDescription] = useEditableInput(\"\");\n\n  React.useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  const reset = () => {\n    setOpen(false);\n    setUrl(\"\");\n    setCover(\"\");\n    setName(\"\");\n    setAliasName(\"\");\n    setDescription(\"\");\n  };\n\n  const handleChangeCover = imageUrl => {\n    if (imageUrl) {\n      setCover(imageUrl);\n    }\n  };\n\n  const handleChangeSource = sourceUrl => {\n    if (sourceUrl) {\n      setUrl(sourceUrl);\n    }\n  };\n\n  const handleSave = () => {\n    onSave &&\n      onSave({\n        url,\n        cover,\n        name,\n        alias_name,\n        description\n      });\n    handleCancle();\n  };\n\n  const handleCancle = () => {\n    setOpen(false);\n    onCancel && onCancel();\n    reset();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleCancle}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Button onClick={handleSave} color=\"inherit\">\n              save\n            </Button>\n            <Button onClick={handleCancle} color=\"inherit\">\n              cancle\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <FullScreen>\n            <BodyScreen>\n              <div className={classes.sourceWrap}>\n                <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n                <FileUpload onComplete={handleChangeCover}>\n                  add cover\n                </FileUpload>\n                <FileUpload onComplete={handleChangeSource}>\n                  add source\n                </FileUpload>\n              </div>\n            </BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              {/* <VideoInfo /> */}\n              {/* <NextPlay /> */}\n              <EditableInput\n                value={name}\n                onChange={setName}\n                placeholder=\"name\"\n              />\n              <EditableInput\n                value={alias_name}\n                onChange={setAliasName}\n                placeholder=\"alias_name\"\n              />\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"description...\"\n              />\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              {/* <Comment /> */}\n              <Placeholder title=\"评论区\" />\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  GridList,\n  GridListTile,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { EditMediumInfo } from \"../EditMediumInfo\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport interface EditMainHandles {\n  mediums: any[];\n}\n\nexport const EditMain = React.forwardRef<EditMainHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [openMedium, setOpenMedium] = React.useState(false);\n    const [mediums, setMediums] = React.useState<any>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      mediums: mediums\n    }));\n\n    const handleSave = medium => {\n      setMediums([...mediums, medium]);\n    };\n\n    return (\n      <>\n        <Box className={classes.root}>\n          <Box className={classes.box}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              相关资源\n            </Typography>\n            <GridList cellHeight=\"auto\" cols={4}>\n              {mediums.map((item, idx) => {\n                return (\n                  <GridListTile cols={1} key={idx}>\n                    <MediaNormal {...item} />\n                  </GridListTile>\n                );\n              })}\n\n              <Button onClick={() => setOpenMedium(true)}>添加</Button>\n            </GridList>\n          </Box>\n          {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n        </Box>\n        <EditMediumInfo\n          open={openMedium}\n          onSave={handleSave}\n          onCancel={() => setOpenMedium(false)}\n        />\n      </>\n    );\n  }\n);\n\nexport default EditMain;\n","import * as React from \"react\";\nimport {\n  EditAbout,\n  EditCast,\n  EditMain,\n  EditTop,\n  EditCastHandles,\n  EditTopHandles,\n  EditMainHandles,\n  EditAboutHandles\n} from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport { useCreateMovieMutation } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const MovieUpload: React.FC = () => {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [tab, setTab] = React.useState(0);\n  const topRef = React.createRef<EditTopHandles>();\n  const mainRef = React.createRef<EditMainHandles>();\n  const aboutRef = React.createRef<EditAboutHandles>();\n  const castRef = React.createRef<EditCastHandles>();\n\n  const [create_movie] = useCreateMovieMutation({\n    onCompleted(data) {\n      window.alert(\"success\");\n      RouterHelper.gotoHome();\n    }\n  });\n\n  const handleCreateMovie = () => {\n    const topFields = topRef.current;\n    const mainFields = mainRef.current;\n    const aboutFields = aboutRef.current;\n    const castFields = castRef.current;\n\n    create_movie({\n      variables: {\n        movie: {\n          title: topFields?.title || \"\",\n          cover: topFields?.cover || \"\",\n          posters: topFields?.posters,\n          description: topFields?.description,\n          credits: castFields?.credits,\n          about: aboutFields?.about,\n          sources: mainFields?.mediums\n        }\n      }\n    });\n  };\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop ref={topRef} />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMain ref={mainRef} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} />\n            </div>\n            <div>\n              <div onClick={handleCreateMovie}>create</div>\n            </div>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default MovieUpload;\n"],"sourceRoot":""}