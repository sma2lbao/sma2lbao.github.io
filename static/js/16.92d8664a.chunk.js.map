{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/shadows/ShadowHome/modules/Filter/index.tsx","views/shadows/ShadowHome/modules/Sort/index.tsx","views/shadows/ShadowHome/index.tsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Filter","Placeholder","title","Sort","useStyles","makeStyles","theme","createStyles","content","margin","padding","spacing","background","palette","paper","aider","backgroundColor","width","borderLeft","borderColor","divider","gridRoot","display","gridTemplateColumns","gridGap","gridAutoFlow","gridCard","gridRow","gridColumn","footer","textAlign","scollButton","position","right","bottom","ShadowHome","props","RouterHelper","useRouterHelper","useShadowsPaginatedQuery","variables","query","last","data","loading","error","fetchMore","classes","className","shadows_paginated","edges","length","Box","map","edge","key","cursor","Media","node","onClickRoot","gotoShadow","id","onClickAuthor","gotoProfile","author","username","SpecialBox","placeholder","placeholderTitle","loadingNode","GridList","cellHeight","cols","_","index","GridListTile","pageInfo","hasNextPage","Button","onClick","before","endCursor","updateQuery","previousQueryResult","fetchMoreResult","totalCount","__typename","disabled","Typography","color","variant","sticky"],"mappings":"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","file":"static/js/16.92d8664a.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from \"react\";\nimport // Box,\n// makeStyles,\n// Theme,\n// createStyles,\n// Typography,\n// Chip,\n\"@material-ui/core\";\n// import { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\n// import { Face } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       // display: \"flex\",\n//       // alignItems: \"center\",\n//     },\n//   })\n// );\n\nexport default function Filter() {\n  // const classes = useStyles();\n\n  return <Placeholder title=\"过滤功能正在开发中\" />;\n\n  // return (\n  //   <Box className={classes.root}>\n  //     <div>\n  //       <Typography variant=\"caption\">地区</Typography>\n  //       <div>\n  //         <ToggleButtonGroup value={1}>\n  //           <ToggleButton value={1}>其他</ToggleButton>\n  //           <ToggleButton value={2}>其他</ToggleButton>\n  //           <ToggleButton value={3}>其他</ToggleButton>\n  //           <ToggleButton value={4}>其他</ToggleButton>\n  //         </ToggleButtonGroup>\n  //       </div>\n  //     </div>\n\n  //     <div>\n  //       <Typography variant=\"caption\">地区</Typography>\n  //       <div>\n  //         <ToggleButtonGroup value={1}>\n  //           <ToggleButton value={1}>其他</ToggleButton>\n  //           <ToggleButton value={2}>其他</ToggleButton>\n  //           <ToggleButton value={3}>其他</ToggleButton>\n  //           <ToggleButton value={4}>其他</ToggleButton>\n  //         </ToggleButtonGroup>\n  //       </div>\n  //     </div>\n\n  //     <div>\n  //       <Typography variant=\"caption\">标签</Typography>\n  //       <div>\n  //         <Chip\n  //           color=\"secondary\"\n  //           size=\"small\"\n  //           onDelete={() => {}}\n  //           icon={<Face />}\n  //         />\n  //       </div>\n  //     </div>\n  //   </Box>\n  // );\n}\n","import * as React from \"react\";\n// import { Box, makeStyles, Theme, createStyles } from \"@material-ui/core\";\n// import { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Placeholder from \"@/components/base/Placeholder\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       backgroundColor: theme.palette.background.paper,\n//       display: \"flex\",\n//       padding: theme.spacing(2, 0)\n//     }\n//   })\n// );\n\nexport default function Sort() {\n  return <Placeholder title=\"排序功能正在开发中\" />;\n  // const classes = useStyles();\n  // const [sorts, setSorts] = React.useState(() => [1, 2]);\n\n  // const _changeCall = (_, newSorts: any[]) => {\n  //   setSorts(newSorts);\n  // };\n\n  // return (\n  //   <Box className={classes.root}>\n  //     <ToggleButtonGroup value={sorts} onChange={_changeCall}>\n  //       <ToggleButton value={1}></ToggleButton>\n  //       <ToggleButton value={2}></ToggleButton>\n  //       <ToggleButton value={3}></ToggleButton>\n  //       <ToggleButton value={4}></ToggleButton>\n  //     </ToggleButtonGroup>\n  //   </Box>\n  // );\n}\n","import * as React from \"react\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  BodyScreen,\n  FullScreen\n} from \"@/layouts/PageLayout\";\nimport { Filter, Sort } from \"./modules\";\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  // Fab,\n  // useScrollTrigger,\n  // Zoom,\n  Button,\n  Typography,\n  GridList,\n  GridListTile\n} from \"@material-ui/core\";\n// import { KeyboardArrowUp } from \"@material-ui/icons\";\nimport { useShadowsPaginatedQuery } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport { SpecialBox } from \"@/components/public/SpecialBox\";\n\ninterface Props {\n  window?: () => Window;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      margin: \"0 auto\",\n      padding: theme.spacing(8),\n      background: theme.palette.background.paper\n    },\n    aider: {\n      backgroundColor: theme.palette.background.paper,\n      width: \"100%\",\n      padding: theme.spacing(2, 2),\n      borderLeft: \"1px solid\",\n      borderColor: theme.palette.divider\n    },\n    gridRoot: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      gridGap: theme.spacing(1, 1),\n      gridAutoFlow: \"row dense\"\n    },\n    gridCard: {\n      gridRow: \"1 span\",\n      gridColumn: \"1 span\"\n    },\n    footer: {\n      padding: theme.spacing(2),\n      textAlign: \"center\"\n    },\n    scollButton: {\n      position: \"fixed\",\n      right: theme.spacing(2),\n      bottom: theme.spacing(2)\n    }\n  })\n);\n\nexport default function ShadowHome(props: Props) {\n  const RouterHelper = useRouterHelper();\n  const { data, loading, error, fetchMore } = useShadowsPaginatedQuery({\n    variables: {\n      query: {\n        last: 16\n      }\n    }\n  });\n  const loadMore = () => {\n    fetchMore({\n      variables: {\n        query: {\n          last: 8,\n          before: data?.shadows_paginated?.pageInfo?.endCursor\n        }\n      },\n      updateQuery: (previousQueryResult, { fetchMoreResult }) => {\n        if (fetchMoreResult?.shadows_paginated?.edges) {\n          const {\n            edges,\n            pageInfo,\n            totalCount\n          } = fetchMoreResult.shadows_paginated;\n          return {\n            shadows_paginated: {\n              pageInfo,\n              totalCount,\n              edges: [...previousQueryResult.shadows_paginated.edges, ...edges],\n              __typename: previousQueryResult.shadows_paginated.__typename\n            }\n          };\n        }\n        return previousQueryResult;\n      }\n    });\n  };\n\n  const classes = useStyles();\n  // const { window } = props;\n  // const trigger = useScrollTrigger({\n  //   target: window ? window() : undefined,\n  //   disableHysteresis: true,\n  //   threshold: 500,\n  // });\n\n  return (\n    <FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.content}>\n          {data?.shadows_paginated?.edges?.length ? (\n            <Box className={classes.gridRoot}>\n              {data?.shadows_paginated?.edges?.map((edge: any) => {\n                return (\n                  <div key={edge.cursor} className={classes.gridCard}>\n                    <MediaNormal\n                      {...edge.node}\n                      onClickRoot={() => RouterHelper.gotoShadow(edge.node.id)}\n                      onClickAuthor={() =>\n                        RouterHelper.gotoProfile(edge.node.author.username)\n                      }\n                    />\n                  </div>\n                );\n              })}\n            </Box>\n          ) : (\n            <SpecialBox\n              loading={loading}\n              error={!!error}\n              placeholder\n              placeholderTitle=\"暂无结果\"\n              loadingNode={\n                <GridList cellHeight=\"auto\" cols={4}>\n                  {[0, 0, 0, 0, 0, 0, 0, 0].map((_, index: number) => {\n                    return (\n                      <GridListTile key={index} cols={1}>\n                        <MediaNormal loading />\n                      </GridListTile>\n                    );\n                  })}\n                </GridList>\n              }\n            />\n          )}\n\n          {data?.shadows_paginated?.pageInfo?.hasNextPage && (\n            <Box className={classes.footer}>\n              <Button onClick={loadMore} disabled={loading}>\n                <Typography color=\"textSecondary\" variant=\"caption\">\n                  {loading ? \"加载中...\" : \"加载更多\"}\n                </Typography>\n              </Button>\n            </Box>\n          )}\n        </ContentScreen>\n        <AiderScreen sticky className={classes.aider}>\n          <Sort />\n          <Filter />\n        </AiderScreen>\n\n        {/* <Zoom in={trigger}>\n          <Fab size=\"small\" className={classes.scollButton}>\n            <KeyboardArrowUp />\n          </Fab>\n        </Zoom> */}\n      </BodyScreen>\n    </FullScreen>\n  );\n}\n"],"sourceRoot":""}