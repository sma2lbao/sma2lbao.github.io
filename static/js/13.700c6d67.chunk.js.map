{"version":3,"sources":["components/app/Input/input.d.ts","components/app/Input/useEditableInput.tsx","components/app/Input/EditableInput.tsx","components/app/Input/index.ts","components/app/Player/ShadowPlayer.tsx","components/app/Player/index.ts","components/app/FileUpload/useFileUpload.tsx","components/app/FileUpload/FileUpload.tsx","components/app/FileUpload/index.ts","views/shadows/ShadowUpload/modules/EditMediumInfo/EditInfo.tsx","views/shadows/ShadowUpload/modules/EditMediumInfo/index.tsx","components/base/Editor/Controls.tsx","components/base/Editor/NormalEditor.tsx","views/shadows/ShadowUpload/modules/EditAbout/index.tsx","views/shadows/ShadowUpload/modules/EditCast/index.tsx","views/shadows/ShadowUpload/modules/EditTop/index.tsx","views/shadows/ShadowUpload/modules/EditMain/index.tsx","components/base/Confirm/index.tsx","views/shadows/ShadowUpload/index.tsx"],"names":["InputStatus","useEditableInput","initValue","React","value","setValue","e","target","useStyles","makeStyles","theme","createStyles","root","input","borderColor","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","inherit","normalRoot","position","toolIcon","top","spacing","cursor","EditableInput","props","onChange","placeholder","variant","rest","classes","NORMAL","status","setStatus","Input","autoFocus","fullWidth","multiline","className","startAdornment","InputAdornment","IconButton","size","onClick","EDITING","Edit","fontSize","readOnly","disableUnderline","onBlur","width","paddingTop","player","height","left","ShadowPlayer","url","defaultProps","controls","display","flexDirection","justifyContent","alignItems","color","palette","text","secondary","flex","icon","custom","base","small","FileUpload","onComplete","onError","children","component","title","inputRef","useUploadFileOssMutation","onCompleted","data","upload_file_oss","error","message","loading","Tag","role","current","click","ref","style","type","accept","currentTarget","validity","file","files","valid","variables","Box","CloudUpload","Typography","header","marginBottom","infoItem","marginLeft","toolBox","marginRight","toolText","description","EditInfo","name","setName","alias_name","setAliasName","setDescription","member","useAuth","moment","Date","now","format","ThumbDownAlt","ThumbUpAlt","MoreVert","Avatar","src","avatar","ml","nickname","body","backgroundColor","background","paper","margin","content","padding","borderRight","divider","aider","overflow","sourceWrap","toolbarWrap","imageFab","bottom","shadowFab","right","EditMediumInfo","onSave","onCancel","open","setOpen","setUrl","cover","setCover","infoRef","handleCancle","Dialog","fullScreen","onClose","AppBar","Toolbar","Button","light","DEFULAT_SHADOW_COVER","Image","aspectRatio","imageUrl","Fab","sourceUrl","MovieCreation","sticky","Placeholder","border","flexWrap","grouped","borderRadius","shape","BLOCK_TYPES","label","FormatQuote","FormatListBulleted","FormatListNumbered","Code","INLINE_STYLES","FormatBold","FormatItalic","FormatUnderlined","Controls","inlines","setInlines","blocktype","setBlocktype","toggleBlockType","toggleInlineStyle","Paper","elevation","ToggleButtonGroup","event","newFormats","dataset","map","ToggleButton","data-style","key","Divider","flexItem","orientation","exclusive","newFormat","editor","minHeight","NormalEditor","raw","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorState","setEditorState","getRawString","stringify","convertToRaw","getCurrentContent","blockType","RichUtils","inlineStyle","blockStyleFn","block","getType","customStyleMap","CODE","fontFamily","handleKeyCommand","cmd","state","newState","keyBindingFn","getDefaultKeyBinding","spellCheck","EditAbout","aboutRaw","setAboutRaw","about","editorRef","rawString","subheaderWrap","EditCast","credits","setCredits","handleChange","idx","List","subheader","ListSubheader","tags","AddCircle","length","item","ListItem","ListItemAvatar","inputProps","rowsMax","ListItemSecondaryAction","splice","handleDelete","Delete","AutoPlaySwipeableViews","autoPlay","SwipeableViews","aiderContent","maxHeight","backdropFilter","main","transform","mainContent","poster","posterTool","visibility","EditTop","activeStep","setActiveStep","setTitle","sub_title","setSubTitle","posters","setPosters","includes","handleRemovePoster","window","confirm","onChangeIndex","step","index","image","GridList","cellHeight","cols","GridListTile","alt","Tooltip","TransitionComponent","Zoom","placement","arrow","Switch","checked","handleChangeCover","data-idx","mt","disabled","PlayCircleOutline","box","borderTop","EditMain","forwardRef","useState","openMedium","setOpenMedium","mediums","setMediums","useImperativeHandle","gutterBottom","Media","medium","ShowDialog","DialogTitle","DialogContent","DialogContentText","DialogActions","cancel","cancelText","onConfirm","confirmText","Confirm","dialog","options","Promise","resolve","reject","mountPoint","document","createElement","appendChild","clear","remove","ReactDOM","render","speedDial","speedDialIcon","ShadowUpload","RouterHelper","useRouterHelper","tab","setTab","topRef","mainRef","aboutRef","castRef","useCreateShadowMutation","then","gotoHome","create_shadow","Tabs","val","Tab","hidden","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","Save","tooltipTitle","topFields","mainFields","aboutFields","castFields","shadow","sources"],"mappings":"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","file":"static/js/13.700c6d67.chunk.js","sourcesContent":["import { InputProps } from \"@material-ui/core\";\n\nconst variantProps = [\n  \"body1\",\n  \"body2\",\n  \"button\",\n  \"caption\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"inherit\",\n  \"overline\",\n  \"subtitle1\",\n  \"subtitle2\"\n] as const;\n\nexport interface BaseInputAttributes {\n  placeholder?: string;\n\n  variant?: typeof variantProps[number];\n}\n\nexport interface BaseInputProps extends InputProps, BaseInputAttributes {\n  value: any;\n\n  onChange?(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void;\n}\n\nexport enum InputStatus {\n  NORMAL = 0, // 默认状态\n\n  EDITING = 1 // 编辑中\n}\n","import * as React from \"react\";\n\nexport const useEditableInput = (initValue?: any): [any, any] => {\n  const [value, setValue] = React.useState(initValue);\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n  };\n\n  return [value, onChange];\n};\n","import * as React from \"react\";\nimport {\n  Input,\n  makeStyles,\n  Theme,\n  createStyles,\n  InputAdornment,\n  IconButton\n} from \"@material-ui/core\";\nimport { BaseInputProps, InputStatus } from \"./input.d\";\nimport { Edit } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {},\n    input: {\n      borderColor: \"transparent\"\n    },\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n    /* Styles applied to the root element if `variant=\"inherit\"`. */\n    inherit: {},\n\n    normalRoot: {\n      position: \"relative\"\n    },\n\n    toolIcon: {\n      position: \"relative\",\n      top: theme.spacing(-1),\n      cursor: \"pointer\"\n    }\n  });\n});\n\nexport const EditableInput: React.FC<BaseInputProps> = props => {\n  const { value, onChange, placeholder, variant = \"inherit\", ...rest } = props;\n  const classes = useStyles();\n  const [status, setStatus] = React.useState<InputStatus>(InputStatus.NORMAL);\n\n  return (\n    <Input\n      classes={{\n        root: classes.root\n      }}\n      autoFocus\n      fullWidth\n      multiline\n      className={classes[variant]}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      {...rest}\n      startAdornment={\n        status === InputStatus.NORMAL ? (\n          <InputAdornment position=\"start\">\n            <IconButton\n              size=\"small\"\n              onClick={() => setStatus(InputStatus.EDITING)}\n            >\n              <Edit fontSize=\"small\" />\n            </IconButton>\n          </InputAdornment>\n        ) : null\n      }\n      readOnly={status === InputStatus.NORMAL}\n      disableUnderline={status === InputStatus.NORMAL}\n      onBlur={() => setStatus(InputStatus.NORMAL)}\n    />\n  );\n};\n","export * from \"./useEditableInput\";\nexport * from \"./EditableInput\";\n","import * as React from \"react\";\nimport ReactPlayer, { ReactPlayerProps } from \"react-player\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      paddingTop: \"calc(56.25%)\",\n      position: \"relative\"\n    },\n    player: {\n      width: \"100% !important\",\n      height: \"100% !important\",\n      position: \"absolute\",\n      top: 0,\n      left: 0\n    }\n  })\n);\n\nexport interface PlayerBaseProps\n  extends Pick<\n    ReactPlayerProps,\n    \"url\" | \"playing\" | \"controls\" | \"muted\" | \"wrapper\" | \"light\"\n  > {}\n\nexport const ShadowPlayer: React.FC<PlayerBaseProps> = props => {\n  const classes = useStyles();\n  const { url, ...rest } = props;\n\n  return (\n    <div className={classes.root}>\n      <ReactPlayer {...rest} className={classes.player} url={url} />\n    </div>\n  );\n};\n\nShadowPlayer.defaultProps = {\n  controls: true\n};\n\nexport default ShadowPlayer;\n","export * from \"./ShadowPlayer\";\n","export const useFileUpload = () => {};\n","import * as React from \"react\";\nimport { useUploadFileOssMutation } from \"@/schema\";\nimport { BaseFileUploadProps } from \"./file-upload\";\nimport {\n  Box,\n  makeStyles,\n  Theme,\n  createStyles,\n  Typography\n} from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport { IPlaceholderProps } from \"@/components/base/Placeholder/placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: (props: IPlaceholderProps) => {\n        return props.width ?? \"100%\";\n      },\n      height: (props: IPlaceholderProps) => {\n        return props.height ?? \"100%\";\n      },\n      color: theme.palette.text.secondary,\n      flex: 1\n    },\n    icon: theme.custom.base.icon.small\n  })\n);\n\nexport const FileUpload: React.FC<BaseFileUploadProps> = props => {\n  const { onComplete, onError, children, component, custom, title } = props;\n  const classes = useStyles(props);\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const [upload_file_oss, { loading }] = useUploadFileOssMutation({\n    onCompleted(data) {\n      onComplete && onComplete(data.upload_file_oss);\n    },\n    onError(error) {\n      onError && onError(error.message);\n    }\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity.valid) {\n      upload_file_oss({ variables: { file } });\n    }\n  };\n\n  const handleClick = () => {\n    if (!loading) {\n      inputRef.current?.click();\n    }\n  };\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag role=\"button\" onClick={handleClick}>\n      <input\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\"*\"\n        onChange={handleChange}\n      />\n      {custom ? (\n        <>{children}</>\n      ) : (\n        <Box className={classes.root}>\n          <div>\n            <CloudUpload className={classes.icon} />\n          </div>\n          <Typography variant=\"h6\">{loading ? \"上传中...\" : title}</Typography>\n        </Box>\n      )}\n    </Tag>\n  );\n};\n\nFileUpload.defaultProps = {\n  custom: false,\n  title: \"点击上传\"\n};\n","export * from \"./useFileUpload\";\nexport * from \"./FileUpload\";\n","import * as React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { Typography, Box, IconButton, Avatar } from \"@material-ui/core\";\nimport { ThumbUpAlt, ThumbDownAlt, MoreVert } from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport { EditableInput, useEditableInput } from \"@/components/app/Input\";\nimport { useAuth } from \"@/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    header: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginBottom: theme.spacing(1)\n    },\n    infoItem: {\n      \"& + &\": {\n        marginLeft: theme.spacing(1)\n      }\n    },\n    toolBox: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginRight: theme.spacing(2)\n    },\n    toolText: {\n      marginLeft: theme.spacing(0.5)\n    },\n    description: {\n      marginBottom: theme.spacing(1)\n    }\n  })\n);\n\nexport interface EditInfoHandles {\n  name?: string;\n\n  alias_name?: string;\n\n  description?: string;\n}\n\nexport const EditInfo = React.forwardRef<EditInfoHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [name, setName] = useEditableInput(\"\");\n    const [alias_name, setAliasName] = useEditableInput(\"\");\n    const [description, setDescription] = useEditableInput(\"\");\n    const { member } = useAuth();\n\n    React.useImperativeHandle(ref, () => ({\n      name,\n      alias_name,\n      description\n    }));\n\n    return (\n      <div>\n        <Box className={classes.header}>\n          <div>\n            <Typography variant=\"subtitle1\">\n              <EditableInput\n                value={name}\n                onChange={setName}\n                placeholder=\"name\"\n              />\n              <EditableInput\n                value={alias_name}\n                onChange={setAliasName}\n                placeholder=\"alias_name\"\n              />\n            </Typography>\n            <Box display=\"flex\">\n              <Typography variant=\"caption\" className={classes.infoItem}>\n                观看: TODO\n              </Typography>\n              <Typography variant=\"caption\" className={classes.infoItem}>\n                发布时间: {moment(Date.now()).format(\"YYYY-MM-DD HH:mm\")}\n              </Typography>\n            </Box>\n          </div>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box className={classes.toolBox}>\n              <IconButton size=\"small\">\n                <ThumbDownAlt fontSize=\"small\" />\n              </IconButton>\n              <Typography className={classes.toolText}>TODO</Typography>\n            </Box>\n            <Box className={classes.toolBox}>\n              <IconButton size=\"small\">\n                <ThumbUpAlt fontSize=\"small\" />\n              </IconButton>\n              <Typography className={classes.toolText}>TODO</Typography>\n            </Box>\n            <IconButton size=\"small\">\n              <MoreVert fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        </Box>\n        <Typography className={classes.description} variant=\"body2\">\n          <EditableInput\n            value={description}\n            onChange={setDescription}\n            placeholder=\"description...\"\n          />\n        </Typography>\n\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box display=\"flex\" alignItems=\"center\">\n            <Avatar src={member?.avatar}></Avatar>\n            <Box ml={1}>\n              <Typography variant=\"subtitle2\">{member?.nickname}</Typography>\n              <Typography variant=\"caption\">{member?.description}</Typography>\n            </Box>\n          </Box>\n        </Box>\n      </div>\n    );\n  }\n);\n\nexport default EditInfo;\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles,\n  Fab\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_SHADOW_COVER } from \"@/common/constants/default.constant\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { MovieCreation } from \"@material-ui/icons\";\nimport { ShadowPlayer } from \"@/components/app/Player\";\nimport { EditInfo, EditInfoHandles } from \"./EditInfo\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    sourceWrap: {\n      width: \"100%\",\n      position: \"relative\"\n    },\n    toolbarWrap: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    imageFab: {\n      position: \"absolute\",\n      left: theme.spacing(4),\n      bottom: theme.spacing(4)\n    },\n    shadowFab: {\n      position: \"absolute\",\n      right: theme.spacing(4),\n      bottom: theme.spacing(4)\n    }\n  })\n);\n\nexport interface EditMediumInfoProp {\n  open: boolean;\n\n  onSave?(medium: unknown): void;\n\n  onCancel?(): void;\n}\n\nexport const EditMediumInfo: React.FC<EditMediumInfoProp> = (\n  props: EditMediumInfoProp\n) => {\n  const { onSave, onCancel } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [url, setUrl] = React.useState(\"\");\n  const [cover, setCover] = React.useState(\"\");\n\n  const infoRef = React.createRef<EditInfoHandles>();\n\n  React.useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  const reset = () => {\n    setOpen(false);\n    setUrl(\"\");\n    setCover(\"\");\n  };\n\n  const handleChangeCover = imageUrl => {\n    if (imageUrl) {\n      setCover(imageUrl);\n    }\n  };\n\n  const handleChangeSource = sourceUrl => {\n    if (sourceUrl) {\n      setUrl(sourceUrl);\n    }\n  };\n\n  const handleSave = () => {\n    onSave &&\n      onSave({\n        url,\n        cover,\n        name: infoRef.current?.name,\n        alias_name: infoRef.current?.alias_name,\n        description: infoRef.current?.description\n      });\n    handleCancle();\n  };\n\n  const handleCancle = () => {\n    setOpen(false);\n    onCancel && onCancel();\n    reset();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleCancle}>\n        <AppBar position=\"fixed\">\n          <Toolbar className={classes.toolbarWrap}>\n            <Button onClick={handleSave} color=\"inherit\">\n              保存\n            </Button>\n            <Button onClick={handleCancle} color=\"inherit\">\n              取消\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <Toolbar />\n          <FullScreen>\n            <BodyScreen>\n              <div className={classes.sourceWrap}>\n                {url ? (\n                  <ShadowPlayer\n                    url={url}\n                    light={cover ? cover : DEFULAT_SHADOW_COVER}\n                  />\n                ) : (\n                  <Image\n                    aspectRatio={16 / 9}\n                    src={cover ? cover : DEFULAT_SHADOW_COVER}\n                  />\n                )}\n                <FileUpload custom onComplete={handleChangeCover}>\n                  <Fab\n                    color={url ? \"primary\" : \"default\"}\n                    size=\"medium\"\n                    className={classes.imageFab}\n                  >\n                    <ImageIcon />\n                  </Fab>\n                </FileUpload>\n                <FileUpload custom onComplete={handleChangeSource}>\n                  <Fab\n                    color={cover ? \"primary\" : \"default\"}\n                    size=\"medium\"\n                    className={classes.shadowFab}\n                  >\n                    <MovieCreation />\n                  </Fab>\n                </FileUpload>\n              </div>\n            </BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              <EditInfo ref={infoRef} />\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              <Placeholder title=\"评论区\" />\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Divider,\n  Paper\n} from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport {\n  FormatBold,\n  FormatItalic,\n  FormatUnderlined,\n  FormatQuote,\n  FormatListBulleted,\n  FormatListNumbered,\n  Code\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"inline-flex\",\n      border: `1px solid ${theme.palette.divider}`,\n      flexWrap: \"wrap\"\n    },\n    divider: {\n      margin: theme.spacing(1, 0.5)\n    },\n    grouped: {\n      margin: theme.spacing(0.5),\n      border: \"none\",\n      \"&:not(:first-child)\": {\n        borderRadius: theme.shape.borderRadius\n      },\n      \"&:first-child\": {\n        borderRadius: theme.shape.borderRadius\n      }\n    }\n  })\n);\n\nconst BLOCK_TYPES = [\n  // { label: \"H1\", style: \"header-one\", value: \"h1\", icon: <FormatBold /> },\n  // { label: \"H2\", style: \"header-two\", value: \"h2\", icon: <FormatBold /> },\n  // { label: \"H3\", style: \"header-three\", value: \"h3\", icon: <FormatBold /> },\n  // { label: \"H4\", style: \"header-four\", value: \"h4\", icon: <FormatBold /> },\n  // { label: \"H5\", style: \"header-five\", value: \"h5\", icon: <FormatBold /> },\n  // { label: \"H6\", style: \"header-six\", value: \"h6\", icon: <FormatBold /> },\n  {\n    label: \"Blockquote\",\n    style: \"blockquote\",\n    value: \"blockquote\",\n    icon: <FormatQuote />\n  },\n  {\n    label: \"UL\",\n    style: \"unordered-list-item\",\n    value: \"ul\",\n    icon: <FormatListBulleted />\n  },\n  {\n    label: \"OL\",\n    style: \"ordered-list-item\",\n    value: \"ol\",\n    icon: <FormatListNumbered />\n  },\n  {\n    label: \"CodeBlock\",\n    style: \"code-block\",\n    value: \"codeblock\",\n    icon: <Code />\n  }\n];\n\nconst INLINE_STYLES = [\n  { label: \"Bold\", style: \"BOLD\", value: \"bold\", icon: <FormatBold /> },\n  { label: \"Italic\", style: \"ITALIC\", value: \"italic\", icon: <FormatItalic /> },\n  {\n    label: \"Underline\",\n    style: \"UNDERLINE\",\n    value: \"underline\",\n    icon: <FormatUnderlined />\n  }\n  // {\n  //   label: \"Monospace\",\n  //   style: \"CODE\",\n  //   value: \"code\",\n  //   icon: <FormatQuote />,\n  // },\n];\n\nexport const Controls = props => {\n  const classes = useStyles();\n  const [inlines, setInlines] = React.useState<string[]>([]);\n  const [blocktype, setBlocktype] = React.useState<string>();\n  const { toggleBlockType, toggleInlineStyle } = props;\n  // const selection = editorState.getSelection();\n  // const blockType = editorState\n  //   .getCurrentContent()\n  //   .getBlockForKey(selection.getStartKey())\n  //   .getType();\n  // const currentStyle = editorState.getCurrentInlineStyle();\n\n  const handleInlineFormat = (\n    event: React.MouseEvent<HTMLElement>,\n    newFormats: string[]\n  ) => {\n    const { style } = event.currentTarget.dataset;\n    if (style) {\n      toggleInlineStyle(style);\n    }\n    setInlines(newFormats);\n  };\n\n  const handleBlocktypeFormat = (\n    event: React.MouseEvent<HTMLElement>,\n    newFormat\n  ) => {\n    const { style } = event.currentTarget.dataset;\n    if (style) {\n      toggleBlockType(style);\n    }\n    setBlocktype(newFormat);\n  };\n\n  return (\n    <Paper elevation={0} className={classes.paper}>\n      <ToggleButtonGroup\n        value={inlines}\n        onChange={handleInlineFormat}\n        classes={{ grouped: classes.grouped }}\n      >\n        {INLINE_STYLES.map(type => (\n          <ToggleButton\n            data-style={type.style}\n            key={type.value}\n            value={type.value}\n          >\n            {type.icon}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n      <Divider flexItem orientation=\"vertical\" className={classes.divider} />\n      <ToggleButtonGroup\n        value={blocktype}\n        exclusive\n        onChange={handleBlocktypeFormat}\n        classes={{ grouped: classes.grouped }}\n      >\n        {BLOCK_TYPES.map(type => (\n          <ToggleButton\n            data-style={type.style}\n            key={type.value}\n            value={type.value}\n          >\n            {type.icon}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </Paper>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  convertFromRaw,\n  convertToRaw\n} from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps, BaseEditorHandles } from \"./editor\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport { Controls } from \"./Controls\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      // minHeight: 420,\n    },\n    editor: {\n      minHeight: 220,\n      border: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const NormalEditor = React.forwardRef<\n  BaseEditorHandles,\n  BaseEditorProps\n>((props, ref) => {\n  const classes = useStyles();\n  const { raw, onBlur, placeholder } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    raw\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(raw)))\n      : EditorState.createEmpty()\n  );\n\n  React.useImperativeHandle(ref, () => ({\n    getRawString: () => {\n      return JSON.stringify(convertToRaw(editorState.getCurrentContent()));\n    }\n  }));\n\n  const handleKeyCommand = (cmd, state) => {\n    const newState = RichUtils.handleKeyCommand(state, cmd);\n    if (newState) {\n      setEditorState(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  const mapKeyToEditorCommand = e => {\n    // if (e.keyCode === 9 /* TAB */) {\n    //   const newEditorState = RichUtils.onTab(e, editorState, 4 /* maxDepth */);\n    //   if (newEditorState !== editorState) {\n    //     setEditorState(newEditorState);\n    //   }\n    //   return null;\n    // }\n    return getDefaultKeyBinding(e);\n  };\n\n  const toggleBlockType = blockType => {\n    setEditorState(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = inlineStyle => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, inlineStyle));\n  };\n\n  // Custom overrides for \"code\" style.\n  const styleMap = {\n    CODE: {\n      backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n      fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n      fontSize: 16,\n      padding: 2\n    }\n  };\n\n  function getBlockStyle(block) {\n    switch (block.getType()) {\n      case \"blockquote\":\n        return \"RichEditor-blockquote\";\n      default:\n        return \"\";\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Controls\n        editorState={editorState}\n        toggleBlockType={toggleBlockType}\n        toggleInlineStyle={toggleInlineStyle}\n      />\n      <div className={classes.editor}>\n        <Editor\n          blockStyleFn={getBlockStyle}\n          customStyleMap={styleMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={setEditorState}\n          onBlur={onBlur}\n          placeholder={placeholder}\n          spellCheck={true}\n        />\n      </div>\n    </div>\n  );\n});\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\nimport { EditorHandles } from \"@/components/base/Editor/editor\";\n\nexport interface EditAboutHandles {\n  about?: string;\n}\n\nexport const EditAbout = React.forwardRef<EditAboutHandles, unknown>(\n  (props, ref) => {\n    const [aboutRaw, setAboutRaw] = React.useState(\"\");\n\n    React.useImperativeHandle(ref, () => ({\n      about: aboutRaw\n    }));\n    const editorRef = React.createRef<EditorHandles>();\n\n    const handleBlur = () => {\n      const rawString = editorRef.current?.getRawString();\n      setAboutRaw(rawString);\n    };\n\n    return (\n      <div>\n        <NormalEditor ref={editorRef} onBlur={handleBlur} />\n      </div>\n    );\n  }\n);\n\nexport default EditAbout;\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\nimport { EditableInput } from \"@/components/app/Input\";\n\nexport interface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    subheaderWrap: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    }\n  })\n);\n\nexport interface EditCastHandles {\n  credits: CharacterEdit[];\n}\n\nexport const EditCast = React.forwardRef<EditCastHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      credits\n    }));\n\n    const handleAddCredit = () => {\n      setCredits([\n        ...credits,\n        {\n          avatar: \"\",\n          name: \"\",\n          description: \"\",\n          tags: []\n        }\n      ]);\n    };\n\n    const handleChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      const { dataset, value } = e.target;\n      if (dataset.idx && dataset.key) {\n        const cur = credits[dataset.idx];\n        cur[dataset.key] = value;\n        setCredits([...credits]);\n      }\n    };\n\n    const handleDelete = (idx: number) => {\n      credits.splice(idx, 1);\n      setCredits([...credits]);\n    };\n\n    return (\n      <Box className={classes.root}>\n        <List\n          subheader={\n            <ListSubheader className={classes.subheaderWrap}>\n              <Typography>演职表</Typography>\n              <IconButton onClick={handleAddCredit} size=\"small\">\n                <AddCircle fontSize=\"small\" />\n              </IconButton>\n            </ListSubheader>\n          }\n        >\n          {credits.length ? (\n            <>\n              {credits.map((item, idx) => {\n                return (\n                  <ListItem key={idx}>\n                    <ListItemAvatar>\n                      <Avatar src={item.avatar}></Avatar>\n                    </ListItemAvatar>\n                    <div>\n                      <EditableInput\n                        inputProps={{ \"data-idx\": idx, \"data-key\": \"name\" }}\n                        value={item.name}\n                        onChange={handleChange}\n                        placeholder=\"请输入名字\"\n                        rowsMax={1}\n                      />\n\n                      <EditableInput\n                        inputProps={{\n                          \"data-idx\": idx,\n                          \"data-key\": \"description\"\n                        }}\n                        value={item.description}\n                        onChange={handleChange}\n                        placeholder=\"请输入描述\"\n                        rowsMax={1}\n                      />\n                    </div>\n                    <ListItemSecondaryAction>\n                      <IconButton onClick={() => handleDelete(idx)}>\n                        <Delete />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </>\n          ) : (\n            <div>\n              <Placeholder title=\"Please add cast.\" />\n            </div>\n          )}\n        </List>\n      </Box>\n    );\n  }\n);\n\nexport default EditCast;\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_SHADOW_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  GridList,\n  GridListTile,\n  IconButton,\n  Switch,\n  Tooltip,\n  Zoom\n} from \"@material-ui/core\";\n\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\nimport { PlayCircleOutline, Delete } from \"@material-ui/icons\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    aider: {\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"45%\",\n      padding: theme.spacing(8)\n    },\n    aiderContent: {\n      width: \"50%\",\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius,\n      maxHeight: \"100%\",\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      overflow: \"auto\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    mainContent: {\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      padding: theme.spacing(4),\n      borderRadius: theme.shape.borderRadius\n    },\n    poster: {\n      position: \"relative\"\n    },\n    posterTool: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      visibility: \"hidden\",\n      position: \"absolute\",\n      padding: theme.spacing(1),\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      color: \"#fff\",\n      \"$poster:hover &\": {\n        visibility: \"initial\"\n      }\n    }\n  })\n);\n\nexport interface EditTopHandles {\n  title: string;\n\n  sub_title?: string;\n\n  description?: string;\n\n  posters?: string[];\n\n  cover: string;\n}\n\nexport const EditTop = React.forwardRef<EditTopHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [title, setTitle] = useEditableInput(\"\");\n    const [sub_title, setSubTitle] = useEditableInput(\"\");\n    const [description, setDescription] = useEditableInput(\"\");\n    const [posters, setPosters] = React.useState<string[]>([]);\n    const [cover, setCover] = React.useState<string>(\"\");\n\n    React.useEffect(() => {\n      if (posters && posters.length > 0) {\n        if (!cover || !posters.includes(cover)) setCover(posters[0]);\n      } else {\n        setCover(\"\");\n      }\n    }, [cover, posters]);\n\n    React.useImperativeHandle(ref, () => ({\n      title,\n      sub_title,\n      description,\n      posters,\n      cover\n    }));\n\n    const handleAddPoster = imageUrl => {\n      if (imageUrl && !posters.includes(imageUrl)) {\n        setPosters([...posters, imageUrl]);\n      }\n    };\n\n    const handleRemovePoster = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const result = window.confirm(\"delete?\");\n      if (result) {\n        const { dataset } = e.currentTarget;\n        if (dataset.idx) {\n          posters.splice(+dataset.idx, 1);\n          setPosters([...posters]);\n        }\n      }\n    };\n\n    const handleChangeCover = (idx: number) => {\n      setCover(posters[idx]);\n    };\n\n    return (\n      <div className={classes.root}>\n        {posters.length ? (\n          <AutoPlaySwipeableViews\n            onChangeIndex={step => setActiveStep(step)}\n            index={activeStep}\n          >\n            {posters.map((image, idx) => {\n              return <Image key={idx} aspectRatio={16 / 9} src={image} />;\n            })}\n          </AutoPlaySwipeableViews>\n        ) : (\n          <Image aspectRatio={16 / 9} src={DEFULAT_SHADOW_COVER} />\n        )}\n\n        <div className={classes.aider}>\n          <div className={classes.aiderContent}>\n            <GridList cellHeight=\"auto\" cols={1}>\n              {posters.map((poster, idx) => (\n                <GridListTile key={poster} cols={1} className={classes.poster}>\n                  <Image\n                    aspectRatio={16 / 9}\n                    src={poster}\n                    alt={\"poster\" + idx}\n                  />\n                  <div className={classes.posterTool}>\n                    <div>\n                      <Tooltip\n                        TransitionComponent={Zoom}\n                        title=\"设成封面\"\n                        placement=\"bottom\"\n                        arrow\n                      >\n                        <Switch\n                          size=\"small\"\n                          color=\"primary\"\n                          checked={cover === poster}\n                          onChange={() => handleChangeCover(idx)}\n                        />\n                      </Tooltip>\n                    </div>\n                    <div data-idx={idx} onClick={handleRemovePoster}>\n                      <Tooltip\n                        TransitionComponent={Zoom}\n                        title=\"删除\"\n                        placement=\"bottom\"\n                        arrow\n                      >\n                        <IconButton size=\"medium\">\n                          <Delete fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </div>\n                  </div>\n                </GridListTile>\n              ))}\n              <GridListTile cols={1}>\n                <FileUpload onComplete={handleAddPoster} title=\"上传海报\" />\n              </GridListTile>\n            </GridList>\n          </div>\n        </div>\n        <div className={classes.main}>\n          <div className={classes.mainContent}>\n            <EditableInput\n              variant=\"h4\"\n              value={title}\n              onChange={setTitle}\n              placeholder=\"请输入标题\"\n            />\n            <EditableInput\n              value={sub_title}\n              onChange={setSubTitle}\n              placeholder=\"请输入副标题\"\n            />\n            <EditableInput\n              value={description}\n              onChange={setDescription}\n              placeholder=\"请输入电影描述...\"\n            />\n            <Box mt={3}>\n              <IconButton size=\"medium\" disabled>\n                <PlayCircleOutline fontSize=\"large\" />\n              </IconButton>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default EditTop;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  GridList,\n  GridListTile,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { EditMediumInfo } from \"../EditMediumInfo\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport interface EditMainHandles {\n  mediums: any[];\n}\n\nexport const EditMain = React.forwardRef<EditMainHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [openMedium, setOpenMedium] = React.useState(false);\n    const [mediums, setMediums] = React.useState<any>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      mediums: mediums\n    }));\n\n    const handleSave = medium => {\n      setMediums([...mediums, medium]);\n    };\n\n    return (\n      <>\n        <Box className={classes.root}>\n          <Box className={classes.box}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              相关资源\n            </Typography>\n            <GridList cellHeight=\"auto\" cols={4}>\n              {mediums.map((item, idx) => {\n                return (\n                  <GridListTile cols={1} key={idx}>\n                    <MediaNormal {...item} />\n                  </GridListTile>\n                );\n              })}\n\n              <Button onClick={() => setOpenMedium(true)}>\n                <Placeholder />\n              </Button>\n            </GridList>\n          </Box>\n          {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n        </Box>\n        <EditMediumInfo\n          open={openMedium}\n          onSave={handleSave}\n          onCancel={() => setOpenMedium(false)}\n        />\n      </>\n    );\n  }\n);\n\nexport default EditMain;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  DialogProps\n} from \"@material-ui/core\";\n\ninterface ConfirmProps extends Omit<DialogProps, \"open\"> {\n  title?: string;\n  content: string;\n  cancel?: boolean;\n  cancelText?: string;\n  confirmText?: string;\n}\n\ninterface ConfirmEventProps {\n  onConfirm?(): void;\n  onCancel?(): void;\n}\n\nconst ShowDialog = (props: ConfirmEventProps & ConfirmProps) => {\n  const [open, setOpen] = React.useState(true);\n  const handleCancel = () => {\n    setOpen(false);\n    props.onCancel && props.onCancel();\n  };\n\n  const handleConfirm = () => {\n    setOpen(false);\n    props.onConfirm && props.onConfirm();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onCancel && props.onCancel();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        {props.title && <DialogTitle>{props.title}</DialogTitle>}\n        <DialogContent>\n          <DialogContentText>{props.content}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {props.cancel && (\n            <Button onClick={handleCancel} color=\"primary\">\n              {props.cancelText || \"取消\"}\n            </Button>\n          )}\n          <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n            {props.confirmText || \"确定\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport const Confirm = {\n  dialog: function(options: ConfirmProps): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const mountPoint = document.createElement(\"div\");\n      document.body.appendChild(mountPoint);\n      const clear = () => {\n        mountPoint.remove();\n      };\n      const onConfirm = () => {\n        resolve(true);\n        clear();\n      };\n      const onCancel = () => {\n        resolve(false);\n        clear();\n      };\n      ReactDOM.render(\n        <div>\n          <ShowDialog {...options} onConfirm={onConfirm} onCancel={onCancel} />\n        </div>,\n        mountPoint\n      );\n    });\n  }\n};\n\nexport default Confirm;\n","import * as React from \"react\";\nimport {\n  EditAbout,\n  EditCast,\n  EditMain,\n  EditTop,\n  EditCastHandles,\n  EditTopHandles,\n  EditMainHandles,\n  EditAboutHandles\n} from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport { useCreateShadowMutation } from \"@/schema\";\nimport { useRouterHelper } from \"@/hooks\";\nimport Confirm from \"@/components/base/Confirm\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from \"@material-ui/lab\";\nimport { Save } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    speedDial: {\n      position: \"fixed\",\n      \"&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft\": {\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n      },\n      \"&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight\": {\n        top: theme.spacing(2),\n        left: theme.spacing(2)\n      }\n    },\n    speedDialIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  })\n);\n\nexport const ShadowUpload: React.FC = () => {\n  const classes = useStyles();\n  const RouterHelper = useRouterHelper();\n  const [tab, setTab] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const topRef = React.createRef<EditTopHandles>();\n  const mainRef = React.createRef<EditMainHandles>();\n  const aboutRef = React.createRef<EditAboutHandles>();\n  const castRef = React.createRef<EditCastHandles>();\n\n  const [create_shadow] = useCreateShadowMutation({\n    onCompleted() {\n      Confirm.dialog({\n        title: \"提示\",\n        content: \"上传成功。\"\n      }).then(() => {\n        RouterHelper.gotoHome();\n      });\n    }\n  });\n\n  const handleCreateShadow = () => {\n    const topFields = topRef.current;\n    const mainFields = mainRef.current;\n    const aboutFields = aboutRef.current;\n    const castFields = castRef.current;\n\n    create_shadow({\n      variables: {\n        shadow: {\n          title: topFields?.title || \"\",\n          cover: topFields?.cover || \"\",\n          posters: topFields?.posters,\n          description: topFields?.description,\n          credits: castFields?.credits,\n          about: aboutFields?.about,\n          sources: mainFields?.mediums\n        }\n      }\n    });\n  };\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop ref={topRef} />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMain ref={mainRef} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} />\n            </div>\n            <SpeedDial\n              ariaLabel=\"SpeedDial OpenIcon\"\n              className={classes.speedDial}\n              // hidden={hidden}\n              // icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n              icon={<SpeedDialIcon className={classes.speedDialIcon} />}\n              onClose={() => setOpen(false)}\n              onOpen={() => setOpen(true)}\n              open={open}\n            >\n              <SpeedDialAction\n                icon={<Save />}\n                tooltipTitle=\"Create\"\n                onClick={handleCreateShadow}\n              />\n            </SpeedDial>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default ShadowUpload;\n"],"sourceRoot":""}