{"version":3,"sources":["components/app/FileUpload/useFileUpload.tsx","components/app/FileUpload/FileUpload.tsx","components/app/FileUpload/index.ts","components/base/Editor/NormalEditor.tsx","views/movies/MovieUpload/modules/EditAbout/index.tsx","views/movies/MovieUpload/modules/EditCast/index.tsx","components/app/Input/useEditableInput.tsx","components/app/Input/EditableInput.tsx","views/movies/MovieUpload/modules/EditTop/index.tsx","views/movies/MovieUpload/modules/EditMediumInfo/index.tsx","views/movies/MovieUpload/modules/EditMain/index.tsx","views/movies/MovieUpload/index.tsx"],"names":["FileUpload","props","onComplete","onError","children","component","inputRef","React","useUploadFileOssMutation","onCompleted","data","upload_file_oss","error","message","loading","Tag","role","onClick","current","click","ref","style","display","type","accept","onChange","e","currentTarget","validity","file","files","valid","variables","NormalEditor","raw","onBlur","placeholder","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorState","setEditorState","getRawString","stringify","convertToRaw","getCurrentContent","EditAbout","aboutRaw","setAboutRaw","about","editorRef","rawString","useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","background","paper","EditCast","classes","credits","setCredits","handleChange","target","dataset","value","idx","key","cur","handleDelete","newCredits","splice","Box","className","List","subheader","ListSubheader","Typography","IconButton","avatar","name","description","tags","size","AddCircle","fontSize","length","map","item","ListItem","ListItemAvatar","Avatar","src","ListItemText","primary","Input","data-idx","data-key","secondary","ListItemSecondaryAction","Delete","Placeholder","title","useEditableInput","initValue","setValue","input","borderColor","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","inherit","EditableInput","variant","position","width","aider","left","top","bottom","padding","spacing","aiderContent","borderRadius","shape","height","backdropFilter","overflow","main","right","transform","color","flexDirection","mainContent","posters","posterTool","EditTop","setTitle","sub_title","setSubTitle","setDescription","setPosters","cover","setCover","includes","handleRemovePoster","window","confirm","handleChangeCover","Image","aspectRatio","DEFULAT_MOVIE_COVER","GridList","cellHeight","cols","poster","GridListTile","alt","imageUrl","gutterBottom","mt","Button","disabled","body","margin","content","borderRight","divider","sourceWrap","EditMediumInfo","onSave","onCancel","open","setOpen","url","setUrl","setName","alias_name","setAliasName","handleCancle","Dialog","fullScreen","onClose","AppBar","Toolbar","sourceUrl","sticky","box","borderTop","EditMain","forwardRef","useState","openMedium","setOpenMedium","mediums","setMediums","useImperativeHandle","Media","medium","MovieUpload","tab","setTab","topRef","mainRef","aboutRef","castRef","useCreateMovieMutation","create_movie","Tabs","val","Tab","label","hidden","topFields","mainFields","aboutFields","castFields","movie","sources"],"mappings":"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","file":"static/js/11.782ff791.chunk.js","sourcesContent":["export const useFileUpload = () => {};\n","import * as React from \"react\";\nimport { useUploadFileOssMutation } from \"@/schema\";\nimport { BaseFileUploadProps } from \"./file-upload\";\n\nexport const FileUpload: React.FC<BaseFileUploadProps> = props => {\n  const { onComplete, onError, children, component } = props;\n\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const [upload_file_oss, { loading }] = useUploadFileOssMutation({\n    onCompleted(data) {\n      onComplete && onComplete(data.upload_file_oss);\n    },\n    onError(error) {\n      onError && onError(error.message);\n    }\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      validity,\n      files: [file]\n    } = e.currentTarget;\n    if (validity.valid) {\n      upload_file_oss({ variables: { file } });\n    }\n  };\n\n  const handleClick = () => {\n    if (!loading) {\n      inputRef.current?.click();\n    }\n  };\n\n  const Tag = component || \"div\";\n\n  return (\n    <Tag role=\"button\" onClick={handleClick}>\n      <input\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\"*\"\n        onChange={handleChange}\n      />\n      {children}\n    </Tag>\n  );\n};\n","export * from \"./useFileUpload\";\nexport * from \"./FileUpload\";\n","import * as React from \"react\";\nimport { Editor, EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps, BaseEditorHandles } from \"./editor\";\n\nexport const NormalEditor = React.forwardRef<\n  BaseEditorHandles,\n  BaseEditorProps\n>((props, ref) => {\n  const { raw, onBlur, placeholder } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    raw\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(raw)))\n      : EditorState.createEmpty()\n  );\n\n  React.useImperativeHandle(ref, () => ({\n    getRawString: () => {\n      return JSON.stringify(convertToRaw(editorState.getCurrentContent()));\n    }\n  }));\n\n  return (\n    <Editor\n      editorState={editorState}\n      onChange={setEditorState}\n      onBlur={onBlur}\n      placeholder={placeholder}\n    />\n  );\n});\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\nimport { EditorHandles } from \"@/components/base/Editor/editor\";\n\nexport interface EditAboutHandles {\n  about?: string;\n}\n\nexport const EditAbout = React.forwardRef<EditAboutHandles, unknown>(\n  (props, ref) => {\n    const [aboutRaw, setAboutRaw] = React.useState(\"\");\n\n    React.useImperativeHandle(ref, () => ({\n      about: aboutRaw\n    }));\n    const editorRef = React.createRef<EditorHandles>();\n\n    const handleBlur = () => {\n      const rawString = editorRef.current?.getRawString();\n      setAboutRaw(rawString);\n    };\n\n    return (\n      <div>\n        <NormalEditor ref={editorRef} onBlur={handleBlur} />\n      </div>\n    );\n  }\n);\n\nexport default EditAbout;\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography,\n  Input\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\n\nexport interface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport interface EditCastHandles {\n  credits: CharacterEdit[];\n}\n\nexport const EditCast = React.forwardRef<EditCastHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      credits\n    }));\n\n    const handleAddCredit = () => {\n      setCredits([\n        ...credits,\n        {\n          avatar: \"\",\n          name: \"\",\n          description: \"\",\n          tags: []\n        }\n      ]);\n    };\n\n    const handleChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      const { dataset, value } = e.target;\n      if (dataset.idx && dataset.key) {\n        const cur = credits[dataset.idx];\n        cur[dataset.key] = value;\n        setCredits([...credits, cur]);\n      }\n    };\n\n    const handleDelete = (\n      e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n      const { dataset } = e.currentTarget;\n      if (dataset.idx) {\n        const newCredits = credits.splice(+dataset.idx, 1);\n        setCredits([...newCredits]);\n      }\n    };\n\n    return (\n      <Box className={classes.root}>\n        <List\n          subheader={\n            <ListSubheader>\n              <Typography>演职表</Typography>\n              <IconButton onClick={handleAddCredit} size=\"small\">\n                <AddCircle fontSize=\"small\" />\n              </IconButton>\n            </ListSubheader>\n          }\n        >\n          {credits.length ? (\n            <>\n              {credits.map((item, idx) => {\n                return (\n                  <ListItem key={idx}>\n                    {\n                      <div>\n                        <ListItemAvatar>\n                          <Avatar src={item.avatar}></Avatar>\n                        </ListItemAvatar>\n                      </div>\n                    }\n                    <ListItemText\n                      primary={\n                        <div>\n                          <Input\n                            data-idx={idx}\n                            data-key=\"name\"\n                            onChange={handleChange}\n                            value={item.name}\n                            placeholder=\"请输入名字\"\n                          />\n                        </div>\n                      }\n                      secondary={\n                        <div>\n                          <Input\n                            data-idx={idx}\n                            data-key=\"description\"\n                            value={item.description}\n                            placeholder=\"请输入描述\"\n                          />\n                        </div>\n                      }\n                    />\n                    <ListItemSecondaryAction>\n                      {/* <IconButton>\n                      <Edit />\n                    </IconButton> */}\n                      {/* <IconButton>\n                      <Done />\n                    </IconButton> */}\n                      <IconButton data-idx={idx} onClick={handleDelete}>\n                        <Delete />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </>\n          ) : (\n            <div>\n              <Placeholder title=\"请添加演职人员\" />\n            </div>\n          )}\n        </List>\n      </Box>\n    );\n  }\n);\n\nexport default EditCast;\n","import * as React from \"react\";\n\nexport const useEditableInput = (initValue?: any): [any, any] => {\n  const [value, setValue] = React.useState(initValue);\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n  };\n\n  return [value, onChange];\n};\n","import * as React from \"react\";\nimport { Input, makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport { BaseInputProps } from \"./input\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {},\n    input: {\n      borderColor: \"transparent\"\n    },\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n    /* Styles applied to the root element if `variant=\"inherit\"`. */\n    inherit: {}\n  });\n});\n\nexport const EditableInput: React.FC<BaseInputProps> = props => {\n  const { value, onChange, placeholder, variant = \"body1\" } = props;\n  const classes = useStyles();\n  return (\n    <Input\n      classes={{\n        root: classes.root\n      }}\n      className={classes[variant]}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  );\n};\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Button,\n  Box,\n  GridList,\n  GridListTile\n} from \"@material-ui/core\";\n\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    aider: {\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"45%\",\n      padding: theme.spacing(8)\n    },\n    aiderContent: {\n      width: \"50%\",\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      height: \"100%\",\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      overflow: \"auto\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    mainContent: {\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      padding: theme.spacing(4),\n      borderRadius: theme.shape.borderRadius\n    },\n    posters: {},\n    posterTool: {\n      display: \"none\"\n    }\n  })\n);\n\nexport interface EditTopHandles {\n  title: string;\n\n  sub_title?: string;\n\n  description?: string;\n\n  posters?: string[];\n\n  cover: string;\n}\n\nexport const EditTop = React.forwardRef<EditTopHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [title, setTitle] = useEditableInput(\"\");\n    const [sub_title, setSubTitle] = useEditableInput(\"\");\n    const [description, setDescription] = useEditableInput(\"\");\n    const [posters, setPosters] = React.useState<string[]>([]);\n    const [cover, setCover] = React.useState<string>(\"\");\n\n    React.useEffect(() => {\n      if (posters && posters.length > 0) {\n        if (!cover || !posters.includes(cover)) setCover(posters[0]);\n      } else {\n        setCover(\"\");\n      }\n    }, [cover, posters]);\n\n    React.useImperativeHandle(ref, () => ({\n      title,\n      sub_title,\n      description,\n      posters,\n      cover\n    }));\n\n    const handleAddPoster = imageUrl => {\n      if (imageUrl && !posters.includes(imageUrl)) {\n        setPosters([...posters, imageUrl]);\n      }\n    };\n\n    const handleRemovePoster = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const result = window.confirm(\"delete?\");\n      if (result) {\n        const { dataset } = e.currentTarget;\n        if (dataset.idx) {\n          posters.splice(+dataset.idx, 1);\n          setPosters([...posters]);\n        }\n      }\n    };\n\n    const handleChangeCover = (\n      e: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const { dataset } = e.currentTarget;\n      if (dataset.idx) {\n        setCover(posters[dataset.idx]);\n      }\n    };\n\n    return (\n      <div className={classes.root}>\n        <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n        <div className={classes.aider}>\n          <div className={classes.aiderContent}>\n            <GridList cellHeight=\"auto\" className={classes.posters} cols={1}>\n              {posters.map((poster, idx) => (\n                <GridListTile key={poster} cols={1}>\n                  <Image\n                    aspectRatio={16 / 9}\n                    src={poster}\n                    alt={\"poster\" + idx}\n                  />\n                  <div className={classes.posterTool}>\n                    <div data-idx={idx} onClick={handleRemovePoster}>\n                      remove poster\n                    </div>\n                    <div data-idx={idx} onClick={handleChangeCover}>\n                      {cover === poster ? \"is cover\" : \"isn't cover\"}\n                    </div>\n                  </div>\n                </GridListTile>\n              ))}\n              <GridListTile cols={1}>\n                <FileUpload onComplete={handleAddPoster}>add poster</FileUpload>\n              </GridListTile>\n            </GridList>\n          </div>\n        </div>\n        <div className={classes.main}>\n          <div className={classes.mainContent}>\n            <Typography gutterBottom variant=\"h4\" component=\"div\">\n              <EditableInput\n                variant=\"h4\"\n                value={title}\n                onChange={setTitle}\n                placeholder=\"movie title\"\n              />\n            </Typography>\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n              <EditableInput\n                value={sub_title}\n                onChange={setSubTitle}\n                placeholder=\"请输入副标题\"\n              />\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\">\n              <EditableInput\n                value={description}\n                onChange={setDescription}\n                placeholder=\"请输入电影描述...\"\n              />\n            </Typography>\n            <Box mt={3}>\n              <Button disabled size=\"large\" variant=\"contained\" color=\"primary\">\n                播放\n              </Button>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default EditTop;\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles,\n  Typography\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { useEditableInput, EditableInput } from \"@/components/app/Input\";\nimport { FileUpload } from \"@/components/app/FileUpload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    sourceWrap: {\n      width: \"100%\",\n      position: \"relative\"\n    }\n  })\n);\n\nexport interface EditMediumInfoProp {\n  open: boolean;\n\n  onSave?(medium: unknown): void;\n\n  onCancel?(): void;\n}\n\nexport const EditMediumInfo: React.FC<EditMediumInfoProp> = (\n  props: EditMediumInfoProp\n) => {\n  const { onSave, onCancel } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [url, setUrl] = React.useState(\"\");\n  const [cover, setCover] = React.useState(\"\");\n  const [name, setName] = useEditableInput(\"\");\n  const [alias_name, setAliasName] = useEditableInput(\"\");\n  const [description, setDescription] = useEditableInput(\"\");\n\n  React.useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  const reset = () => {\n    setOpen(false);\n    setUrl(\"\");\n    setCover(\"\");\n    setName(\"\");\n    setAliasName(\"\");\n    setDescription(\"\");\n  };\n\n  const handleChangeCover = imageUrl => {\n    if (imageUrl) {\n      setCover(imageUrl);\n    }\n  };\n\n  const handleChangeSource = sourceUrl => {\n    if (sourceUrl) {\n      setUrl(sourceUrl);\n    }\n  };\n\n  const handleSave = () => {\n    onSave &&\n      onSave({\n        url,\n        cover,\n        name,\n        alias_name,\n        description\n      });\n    handleCancle();\n  };\n\n  const handleCancle = () => {\n    setOpen(false);\n    onCancel && onCancel();\n    reset();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleCancle}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Button onClick={handleSave} color=\"inherit\">\n              save\n            </Button>\n            <Button onClick={handleCancle} color=\"inherit\">\n              cancle\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <FullScreen>\n            <BodyScreen>\n              <div className={classes.sourceWrap}>\n                <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n                <FileUpload onComplete={handleChangeCover}>\n                  add cover\n                </FileUpload>\n                <FileUpload onComplete={handleChangeSource}>\n                  add source\n                </FileUpload>\n              </div>\n            </BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              {/* <VideoInfo /> */}\n              {/* <NextPlay /> */}\n              <Typography>\n                <EditableInput value={name} onChange={setName} />\n              </Typography>\n              <Typography>\n                <EditableInput\n                  value={alias_name}\n                  onChange={setAliasName}\n                  placeholder=\"alias_name\"\n                />\n              </Typography>\n              <Typography>\n                <EditableInput\n                  value={description}\n                  onChange={setDescription}\n                  placeholder=\"description...\"\n                />\n              </Typography>\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              {/* <Comment /> */}\n              <Placeholder title=\"评论区\" />\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  GridList,\n  GridListTile,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/Media\";\nimport { EditMediumInfo } from \"../EditMediumInfo\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport interface EditMainHandles {\n  mediums: any[];\n}\n\nexport const EditMain = React.forwardRef<EditMainHandles, unknown>(\n  (props, ref) => {\n    const classes = useStyles();\n    const [openMedium, setOpenMedium] = React.useState(false);\n    const [mediums, setMediums] = React.useState<any>([]);\n\n    React.useImperativeHandle(ref, () => ({\n      mediums: mediums\n    }));\n\n    const handleSave = medium => {\n      setMediums([...mediums, medium]);\n    };\n\n    return (\n      <>\n        <Box className={classes.root}>\n          <Box className={classes.box}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              相关资源\n            </Typography>\n            <GridList cellHeight=\"auto\" cols={4}>\n              {mediums.map((item, idx) => {\n                return (\n                  <GridListTile cols={1} key={idx}>\n                    <MediaNormal {...item} />\n                  </GridListTile>\n                );\n              })}\n\n              <Button onClick={() => setOpenMedium(true)}>添加</Button>\n            </GridList>\n          </Box>\n          {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n        </Box>\n        <EditMediumInfo\n          open={openMedium}\n          onSave={handleSave}\n          onCancel={() => setOpenMedium(false)}\n        />\n      </>\n    );\n  }\n);\n\nexport default EditMain;\n","import * as React from \"react\";\nimport {\n  EditAbout,\n  EditCast,\n  EditMain,\n  EditTop,\n  EditCastHandles,\n  EditTopHandles,\n  EditMainHandles,\n  EditAboutHandles\n} from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport { useCreateMovieMutation } from \"@/schema\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const MovieUpload: React.FC = () => {\n  const classes = useStyles();\n  const [tab, setTab] = React.useState(0);\n  const topRef = React.createRef<EditTopHandles>();\n  const mainRef = React.createRef<EditMainHandles>();\n  const aboutRef = React.createRef<EditAboutHandles>();\n  const castRef = React.createRef<EditCastHandles>();\n\n  const [create_movie] = useCreateMovieMutation();\n\n  const handleCreateMovie = () => {\n    const topFields = topRef.current;\n    const mainFields = mainRef.current;\n    const aboutFields = aboutRef.current;\n    const castFields = castRef.current;\n\n    create_movie({\n      variables: {\n        movie: {\n          title: topFields?.title || \"\",\n          cover: topFields?.cover || \"\",\n          posters: topFields?.posters,\n          description: topFields?.description,\n          credits: castFields?.credits,\n          about: aboutFields?.about,\n          sources: mainFields?.mediums\n        }\n      }\n    });\n  };\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop ref={topRef} />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMain ref={mainRef} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} />\n            </div>\n            <div>\n              <div onClick={handleCreateMovie}>create</div>\n            </div>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default MovieUpload;\n"],"sourceRoot":""}