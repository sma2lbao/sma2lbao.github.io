{"version":3,"sources":["components/app/Player/ShadowPlayer.tsx","components/app/Player/withThird.tsx","components/app/Player/index.ts","views/Test/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","player","width","height","background","ShadowPlayer","props","classes","url","rest","isM3u8","toString","endsWith","videoRef","React","AspectRatioBox","ratio","ref","className","config","file","forceHLS","attributes","controlsList","disablePictureInPicture","onContextMenu","e","preventDefault","youtube","playerVars","autoplay","playing","modestbranding","rel","showinfo","controls","embedOptions","defaultProps","wrap","position","tool","right","spacing","top","transform","display","flexDirection","justifyContent","maxHeight","overflow","backdropFilter","color","padding","borderRadius","shape","visibility","grouped","border","withThird","Component","youtubeUrl","originUrl","undefined","bridgUrl","setBridgUrl","source","setSource","showThird","ThemeProvider","createMuiTheme","palette","type","ToggleButtonGroup","orientation","value","exclusive","onChange","event","nextValue","ToggleButton","YouTube","ThirdShadowPlayer","Test","style"],"mappings":"+JAKMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,MAAO,kBACPC,OAAQ,kBACRC,WAAY,aAWLC,EAA0C,SAAAC,GACrD,IAAMC,EAAUV,IACRW,EAAiBF,EAAjBE,IAAQC,EAF8C,YAErCH,EAFqC,SAGxDI,EAAM,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAKG,WAAWC,SAAS,SAClCC,EAAWC,cAEjB,OACE,gBAACC,EAAA,EAAD,CAAgBC,MAAO,GAAK,GAC1B,gBAAC,IAAD,eACEC,IAAKJ,EACLK,UAAWX,EAAQN,QACfQ,EAHN,CAIED,IAAKA,EACLW,OAAQ,CACNC,KAAM,CACJC,SAAUX,EACVY,WAAY,CACVC,aAAc,8BACdC,yBAAyB,EACzBC,cAAe,SAAAC,GAAC,OAAIA,EAAEC,oBAG1BC,QAAS,CACPC,WAAY,CACVC,SAAUrB,EAAKsB,QACfC,eAAgB,EAChBC,IAAK,EACLC,SAAU,EACVC,SAAU1B,EAAK0B,UAEjBC,aAAc,UAQ1B/B,EAAagC,aAAe,CAC1BF,UAAU,EACVJ,SAAS,GAGI1B,I,qDCpDTR,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXsC,KAAM,CACJC,SAAU,WACVrC,MAAO,QAETsC,KAAM,CACJD,SAAU,WACVE,MAAO1C,EAAM2C,QAAQ,GACrBC,IAAK,MACLC,UAAW,mBACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,UAAW,MACXC,SAAU,OACV7C,WAAY,oBACZ8C,eAAgB,YAChBC,MAAO,OACPC,QAASrD,EAAM2C,QAAQ,GACvBW,aAActD,EAAMuD,MAAMD,aAC1BE,WAAY,SACZ,gBAAiB,CACfA,WAAY,YAGhBC,QAAS,CACPC,OAAQ,OACR,sBAAuB,CACrBJ,aAActD,EAAMuD,MAAMD,cAE5B,gBAAiB,CACfA,aAActD,EAAMuD,MAAMD,oBAU3B,SAASK,EAAaC,GAC3B,OAAO,SAACrD,GACN,IAAMC,EAAUV,IACR+D,EAAwBtD,EAAxBsD,WAAenD,EAFa,YAEJH,EAFI,gBAG9BuD,EAAYpD,GAASA,EAAaD,IAAOC,EAAaD,SAAMsD,EAH9B,EAIJhD,WAAuB+C,GAJnB,mBAI7BE,EAJ6B,KAInBC,EAJmB,OAKRlD,aALQ,mBAK7BmD,EAL6B,KAKrBC,EALqB,KAO9BC,EACJP,GACAnD,GACCA,EAAaD,KACbC,EAAaD,MAAQoD,EAgBxB,OARA9C,aAAgB,WAEZkD,EADa,YAAXC,EACUL,EAEAC,KAEb,CAACI,EAAQJ,EAAWD,IAGrB,uBAAK1C,UAAWX,EAAQ+B,MACtB,gBAACqB,EAAD,iBAAgBlD,EAAhB,CAA4BD,IAAKuD,KAChCI,GACC,uBAAKjD,UAAWX,EAAQiC,MACtB,gBAAC4B,EAAA,EAAD,CACErE,MAAO,WACL,OAAOsE,YAAe,CACpBC,QAAS,CAAEC,KAAM,YAIrB,gBAACC,EAAA,EAAD,CACEjE,QAAS,CAAEiD,QAASjD,EAAQiD,SAC5BiB,YAAY,WACZC,MAAOT,EACPU,WAAS,EACTC,SA/BS,SACnBC,EACAC,GAEAZ,EAAUY,KA6BA,gBAACC,EAAA,EAAD,CAAcL,MAAM,WAClB,gBAACM,EAAA,EAAD,YCtGlB,qE,iCCAA,2BAGMC,EAAoBvB,YAAUrD,KAcrB6E,UAZQ,WACrB,OACE,uBAAKC,MAAO,CAAEjF,MAAO,MACnB,gBAAC+E,EAAD,CACElD,SAAS,EACT6B,WAAW,8CACXpD,IAAI","file":"static/js/12.d4ae1ea3.chunk.js","sourcesContent":["import * as React from \"react\";\nimport ReactPlayer, { ReactPlayerProps } from \"react-player\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AspectRatioBox } from \"@/components/base/AspectRatioBox\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    player: {\n      width: \"100% !important\",\n      height: \"100% !important\",\n      background: \"#000\"\n    }\n  })\n);\n\nexport interface PlayerBaseProps\n  extends Pick<\n    ReactPlayerProps,\n    \"url\" | \"playing\" | \"controls\" | \"muted\" | \"wrapper\" | \"light\"\n  > {}\n\nexport const ShadowPlayer: React.FC<PlayerBaseProps> = props => {\n  const classes = useStyles();\n  const { url, ...rest } = props;\n  const isM3u8 = url?.toString().endsWith(\".m3u8\");\n  const videoRef = React.createRef<ReactPlayer>();\n\n  return (\n    <AspectRatioBox ratio={16 / 9}>\n      <ReactPlayer\n        ref={videoRef}\n        className={classes.player}\n        {...rest}\n        url={url}\n        config={{\n          file: {\n            forceHLS: isM3u8,\n            attributes: {\n              controlsList: \"nodownload noremoteplayback\",\n              disablePictureInPicture: true,\n              onContextMenu: e => e.preventDefault()\n            }\n          },\n          youtube: {\n            playerVars: {\n              autoplay: rest.playing,\n              modestbranding: 1,\n              rel: 0,\n              showinfo: 0,\n              controls: rest.controls\n            },\n            embedOptions: {}\n          }\n        }}\n      />\n    </AspectRatioBox>\n  );\n};\n\nShadowPlayer.defaultProps = {\n  controls: true,\n  playing: true\n};\n\nexport default ShadowPlayer;\n","import * as React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  ThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core\";\nimport { YouTube } from \"@material-ui/icons\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\n// import { Delete } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrap: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    tool: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      maxHeight: \"50%\",\n      overflow: \"auto\",\n      background: \"rgba(0, 0, 0, .1)\",\n      backdropFilter: \"blur(8px)\",\n      color: \"#fff\",\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius,\n      visibility: \"hidden\",\n      \"$wrap:hover &\": {\n        visibility: \"initial\"\n      }\n    },\n    grouped: {\n      border: \"none\",\n      \"&:not(:first-child)\": {\n        borderRadius: theme.shape.borderRadius\n      },\n      \"&:first-child\": {\n        borderRadius: theme.shape.borderRadius\n      }\n    }\n  })\n);\n\nexport interface WithThirdProps {\n  youtubeUrl?: string | null;\n}\n\nexport function withThird<P>(Component: React.FC<P & WithThirdProps>) {\n  return (props: P & WithThirdProps) => {\n    const classes = useStyles();\n    const { youtubeUrl, ...rest } = props;\n    const originUrl = rest && (rest as any).url ? (rest as any).url : undefined;\n    const [bridgUrl, setBridgUrl] = React.useState<string>(originUrl);\n    const [source, setSource] = React.useState<string>();\n\n    const showThird =\n      youtubeUrl &&\n      rest &&\n      (rest as any).url &&\n      (rest as any).url !== youtubeUrl;\n\n    const handleChange = (\n      event: React.MouseEvent<HTMLElement>,\n      nextValue: string\n    ) => {\n      setSource(nextValue);\n    };\n    React.useEffect(() => {\n      if (source === \"youtube\") {\n        setBridgUrl(youtubeUrl as string);\n      } else {\n        setBridgUrl(originUrl);\n      }\n    }, [source, originUrl, youtubeUrl]);\n\n    return (\n      <div className={classes.wrap}>\n        <Component {...(rest as P)} url={bridgUrl} />\n        {showThird && (\n          <div className={classes.tool}>\n            <ThemeProvider\n              theme={() => {\n                return createMuiTheme({\n                  palette: { type: \"dark\" }\n                });\n              }}\n            >\n              <ToggleButtonGroup\n                classes={{ grouped: classes.grouped }}\n                orientation=\"vertical\"\n                value={source}\n                exclusive\n                onChange={handleChange}\n              >\n                <ToggleButton value=\"youtube\">\n                  <YouTube></YouTube>\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </ThemeProvider>\n          </div>\n        )}\n      </div>\n    );\n  };\n}\nexport default withThird;\n","export * from \"./ShadowPlayer\";\nexport * from \"./withThird\";\n","import * as React from \"react\";\nimport { ShadowPlayer, withThird } from \"@/components/app/Player\";\n\nconst ThirdShadowPlayer = withThird(ShadowPlayer);\n\nconst Test: React.FC = () => {\n  return (\n    <div style={{ width: 600 }}>\n      <ThirdShadowPlayer\n        playing={false}\n        youtubeUrl=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\n        url=\"https://www.w3school.com.cn/example/html5/mov_bbb.mp4\"\n      />\n    </div>\n  );\n};\n\nexport default Test;\n"],"sourceRoot":""}