{"version":3,"sources":["components/base/Editor/NormalEditor.tsx","views/movies/MovieUpload/modules/EditAbout/index.tsx","views/movies/MovieUpload/modules/EditCast/index.tsx","views/movies/MovieUpload/modules/EditMediumInfo/EditMediumSource.tsx","views/movies/MovieUpload/modules/EditMediumInfo/index.tsx","views/movies/MovieUpload/modules/EditMovieMain/index.tsx","views/movies/MovieUpload/modules/EditTop/index.tsx","views/movies/MovieUpload/index.tsx"],"names":["NormalEditor","props","React","EditorState","createEmpty","editorState","setEditorState","onChange","EditAbout","ref","useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","background","paper","EditCast","classes","credits","setCredits","handleChange","e","target","dataset","value","idx","key","cur","handleDelete","currentTarget","newCredits","splice","Box","className","List","subheader","ListSubheader","Typography","IconButton","onClick","avatar","name","description","tags","size","AddCircle","fontSize","length","map","item","ListItem","ListItemAvatar","Avatar","src","ListItemText","primary","Input","data-idx","data-key","placeholder","secondary","ListItemSecondaryAction","Delete","Placeholder","title","EditMediumSource","height","body","display","margin","content","padding","spacing","borderRight","divider","aider","overflow","EditMediumInfo","open","setOpen","handleClose","Dialog","fullScreen","onClose","AppBar","Toolbar","Button","autoFocus","color","sticky","box","borderTop","EditMovieMain","forwardRef","useState","openMedium","setOpenMedium","useImperativeHandle","variant","gutterBottom","GridList","cellHeight","cols","GridListTile","position","width","main","top","right","transform","EditTop","sub_title","movie","setMovie","Image","aspectRatio","DEFULAT_MOVIE_COVER","component","rows","mt","disabled","MovieUpload","tab","setTab","topRef","mainRef","aboutRef","castRef","Tabs","val","Tab","label","hidden"],"mappings":"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","file":"static/js/16.5ff4b749.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Editor, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { BaseEditorProps } from \"./editor\";\n\nexport const NormalEditor: React.FC<BaseEditorProps> = (\n  props: BaseEditorProps\n) => {\n  //   const { value, onChange } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    EditorState.createEmpty()\n  );\n\n  const handleChange = (editorState: EditorState) => {\n    setEditorState(editorState);\n  };\n\n  return <Editor editorState={editorState} onChange={handleChange} />;\n};\n","import * as React from \"react\";\nimport { NormalEditor } from \"@/components/base/Editor\";\n\nexport const EditAbout = React.forwardRef((props, ref) => {\n  React.useImperativeHandle(ref, () => ({}));\n\n  return (\n    <div>\n      <NormalEditor />\n    </div>\n  );\n});\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Box,\n  ListSubheader,\n  Typography,\n  Input\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { Placeholder } from \"@/components/base/Placeholder\";\nimport { Character } from \"@/schema\";\n\ninterface CharacterEdit extends Character {\n  // status:\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\nexport const EditCast = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n  const [credits, setCredits] = React.useState<CharacterEdit[]>([]);\n\n  React.useImperativeHandle(ref, () => ({\n    credits\n  }));\n\n  const handleAddCredit = () => {\n    setCredits([\n      ...credits,\n      {\n        avatar: \"\",\n        name: \"\",\n        description: \"\",\n        tags: []\n      }\n    ]);\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const { dataset, value } = e.target;\n    if (dataset.idx && dataset.key) {\n      const cur = credits[dataset.idx];\n      cur[dataset.key] = value;\n      setCredits([...credits, cur]);\n    }\n  };\n\n  const handleDelete = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    const { dataset } = e.currentTarget;\n    if (dataset.idx) {\n      const newCredits = credits.splice(+dataset.idx, 1);\n      setCredits([...newCredits]);\n    }\n  };\n\n  return (\n    <Box className={classes.root}>\n      <List\n        subheader={\n          <ListSubheader>\n            <Typography>演职表</Typography>\n            <IconButton onClick={handleAddCredit} size=\"small\">\n              <AddCircle fontSize=\"small\" />\n            </IconButton>\n          </ListSubheader>\n        }\n      >\n        {credits.length ? (\n          <>\n            {credits.map((item, idx) => {\n              return (\n                <ListItem key={idx}>\n                  {\n                    <div>\n                      <ListItemAvatar>\n                        <Avatar src={item.avatar}></Avatar>\n                      </ListItemAvatar>\n                    </div>\n                  }\n                  <ListItemText\n                    primary={\n                      <div>\n                        <Input\n                          data-idx={idx}\n                          data-key=\"name\"\n                          onChange={handleChange}\n                          value={item.name}\n                          placeholder=\"请输入名字\"\n                        />\n                      </div>\n                    }\n                    secondary={\n                      <div>\n                        <Input\n                          data-idx={idx}\n                          data-key=\"description\"\n                          value={item.description}\n                          placeholder=\"请输入描述\"\n                        />\n                      </div>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    {/* <IconButton>\n                      <Edit />\n                    </IconButton> */}\n                    {/* <IconButton>\n                      <Done />\n                    </IconButton> */}\n                    <IconButton data-idx={idx} onClick={handleDelete}>\n                      <Delete />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n          </>\n        ) : (\n          <div>\n            <Placeholder title=\"请添加演职人员\" />\n          </div>\n        )}\n      </List>\n    </Box>\n  );\n});\n\nexport default EditCast;\n","import * as React from \"react\";\n\nexport const EditMediumSource: React.FC = () => {\n  return <div></div>;\n};\n","import * as React from \"react\";\nimport {\n  Dialog,\n  Toolbar,\n  AppBar,\n  Button,\n  Box,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport {\n  FullScreen,\n  BodyScreen,\n  ContentScreen,\n  AiderScreen\n} from \"@/layouts/PageLayout\";\nimport { EditMediumSource } from \"./EditMediumSource\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\"\n    },\n    body: {\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      margin: \"0 auto\"\n    },\n    content: {\n      padding: theme.spacing(2, 5),\n      borderRight: `1px solid ${theme.palette.divider}`\n    },\n    aider: {\n      padding: theme.spacing(2, 4),\n      height: \"100%\",\n      overflow: \"auto\"\n    }\n  })\n);\n\nexport interface EditMediumInfoProp {\n  open: boolean;\n}\n\nexport const EditMediumInfo: React.FC<EditMediumInfoProp> = (\n  props: EditMediumInfoProp\n) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.open);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog open={open} fullScreen onClose={handleClose}>\n        <AppBar>\n          <Toolbar>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.root}>\n          <FullScreen>\n            <BodyScreen>\n              <EditMediumSource />\n            </BodyScreen>\n          </FullScreen>\n          <BodyScreen className={classes.body}>\n            <ContentScreen className={classes.content}>\n              {/* <VideoInfo /> */}\n              {/* <NextPlay /> */}\n            </ContentScreen>\n            <AiderScreen sticky className={classes.aider}>\n              {/* <Comment /> */}\n            </AiderScreen>\n          </BodyScreen>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  GridList,\n  GridListTile,\n  Button\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { MediaNormal } from \"@/components/app/MediaCard\";\nimport { EditMediumInfo } from \"../EditMediumInfo\";\n// import Placeholder from \"@/components/base/Placeholder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0)\n    },\n    box: {\n      padding: theme.spacing(2, 0),\n\n      \"& + &\": {\n        borderTop: `1px solid ${theme.palette.divider}`\n      }\n    }\n  })\n);\n\nexport const EditMovieMain = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n  const [openMedium, setOpenMedium] = React.useState(false);\n\n  React.useImperativeHandle(ref, () => ({}));\n\n  return (\n    <>\n      <Box className={classes.root}>\n        <Box className={classes.box}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            相关资源\n          </Typography>\n          <GridList cellHeight=\"auto\" cols={4}>\n            <GridListTile cols={1}>\n              <MediaNormal />\n            </GridListTile>\n            <Button onClick={() => setOpenMedium(true)}>添加</Button>\n          </GridList>\n        </Box>\n        {/* <Box className={classes.box}>\n        <Typography variant=\"subtitle1\">精彩点评</Typography>\n      </Box> */}\n      </Box>\n      <EditMediumInfo open={openMedium} />\n    </>\n  );\n});\n","import * as React from \"react\";\nimport { Image } from \"@/components/base/Image\";\nimport { DEFULAT_MOVIE_COVER } from \"@/common/constants/default.constant\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Typography, Button, Box, Input } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    main: {\n      position: \"absolute\",\n      top: \"50%\",\n      right: 0,\n      width: \"50%\",\n      padding: theme.spacing(0, 8),\n      transform: \"translate(0, -50%)\",\n      color: \"#fff\"\n    }\n  })\n);\n\nexport const EditTop = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n  const [movie, setMovie] = React.useState({\n    title: \"\",\n    sub_title: \"\",\n    description: \"\"\n  });\n\n  React.useImperativeHandle(ref, () => ({\n    movie\n  }));\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const { dataset, value } = e.target;\n    if (dataset.key) {\n      setMovie({\n        ...movie,\n        [dataset.key]: value\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Image aspectRatio={16 / 9} src={DEFULAT_MOVIE_COVER} />\n      <div className={classes.main}>\n        <Typography gutterBottom variant=\"h4\" component=\"div\">\n          <Input\n            data-key=\"title\"\n            value={movie.title}\n            onChange={handleChange}\n            // placeholder=\"请输入名字\"\n          />\n        </Typography>\n        <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n          <Input\n            data-key=\"sub_title\"\n            value={movie.sub_title}\n            onChange={handleChange}\n            // placeholder=\"请输入名字\"\n          />\n        </Typography>\n        {/* <div></div> */}\n        <Typography variant=\"body2\" component=\"div\">\n          <Input\n            rows={4}\n            data-key=\"description\"\n            value={movie.description}\n            onChange={handleChange}\n            // placeholder=\"请输入名字\"\n          />\n        </Typography>\n        <Box mt={3}>\n          <Button disabled size=\"large\" variant=\"contained\" color=\"primary\">\n            播放\n          </Button>\n        </Box>\n      </div>\n    </div>\n  );\n});\n\nexport default EditTop;\n","import * as React from \"react\";\nimport { EditAbout, EditCast, EditMovieMain, EditTop } from \"./modules\";\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen\n} from \"@/layouts/PageLayout\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 6),\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  })\n);\n\nexport const MovieUpload: React.FC = () => {\n  const classes = useStyles();\n  const [tab, setTab] = React.useState(0);\n  const topRef = React.createRef();\n  const mainRef = React.createRef();\n  const aboutRef = React.createRef();\n  const castRef = React.createRef();\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop ref={topRef} />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen className={classes.main}>\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMovieMain ref={mainRef} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} />\n            </div>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default MovieUpload;\n"],"sourceRoot":""}