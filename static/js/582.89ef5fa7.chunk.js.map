{"version":3,"file":"static/js/582.89ef5fa7.chunk.js","mappings":"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","sources":["views/shadows/shadow-update/index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  EditCast,\n  EditMain,\n  EditTop,\n  EditCastHandles,\n  EditTopHandles,\n  EditMainHandles,\n  EditAboutHandles,\n  EditAbout,\n} from '../shadow-upload/modules';\nimport {\n  ContentScreen,\n  AiderScreen,\n  FullScreen,\n  BodyScreen,\n} from '@/layouts/page-layout';\nimport {\n  Box,\n  Tabs,\n  Tab,\n  SpeedDial,\n  SpeedDialAction,\n  SpeedDialIcon,\n} from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { useUpdateShadowMutation, useShadowQuery } from '@/schema';\nimport Confirm from '@/components/base/confirm';\nimport { Save } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport SpecialBox from '@/components/public/special-box';\n\nexport const ShadowUpdate: React.FC = () => {\n  const navigate = useNavigate();\n  const [tab, setTab] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const topRef = React.createRef<EditTopHandles>();\n  const mainRef = React.createRef<EditMainHandles>();\n  const aboutRef = React.createRef<EditAboutHandles>();\n  const castRef = React.createRef<EditCastHandles>();\n  const { id } = useParams();\n  const { data, error, loading } = useShadowQuery({\n    variables: {\n      id: id!,\n    },\n  });\n\n  console.log(data, loading);\n\n  const [update_shadow] = useUpdateShadowMutation({\n    onCompleted() {\n      Confirm.dialog({\n        title: '提示',\n        content: '更新成功。',\n      }).then(() => {\n        navigate('/home');\n      });\n    },\n  });\n\n  const handleCreateShadow = () => {\n    const topFields = topRef.current;\n    const mainFields = mainRef.current;\n    const castFields = castRef.current;\n    const aboutFields = aboutRef.current;\n\n    update_shadow({\n      variables: {\n        shadow_id: id!,\n        shadow: {\n          title: topFields?.title || '',\n          sub_title: topFields?.sub_title || '',\n          cover: topFields?.cover || '',\n          posters: topFields?.posters,\n          description: topFields?.description,\n          credits: castFields?.credits,\n          about: aboutFields?.about || '',\n          sources: mainFields?.mediums\n            .filter((medium) => !medium.id)\n            .map((medium) => {\n              const { name, sub_name, description, cover, url } = medium;\n              return {\n                name: name || topFields?.title!,\n                sub_name: sub_name || topFields?.sub_title,\n                description: description || topFields?.description,\n                cover: cover || topFields?.cover,\n                url,\n              };\n            }),\n        },\n      },\n    });\n  };\n\n  if (loading || error) {\n    return <SpecialBox error={!!error} loading={loading} />;\n  }\n\n  return (\n    <Box>\n      <FullScreen>\n        <BodyScreen>\n          <EditTop\n            ref={topRef}\n            title={data?.shadow.title}\n            sub_title={data?.shadow.sub_title || ''}\n            description={data?.shadow.description || ''}\n            posters={data?.shadow.posters || []}\n            cover={data?.shadow.cover}\n          />\n        </BodyScreen>\n      </FullScreen>\n      <BodyScreen>\n        <ContentScreen\n          sx={(theme) => ({\n            backgroundColor: theme.palette.background.paper,\n            padding: theme.spacing(1, 6),\n            borderRight: `1px solid ${theme.palette.divider}`,\n          })}\n        >\n          <Tabs value={tab} onChange={(e, val) => setTab(val)}>\n            <Tab label=\"信息\"></Tab>\n            <Tab label=\"相关推荐\" disabled></Tab>\n            <Tab label=\"关于\"></Tab>\n          </Tabs>\n          <div>\n            <div hidden={tab !== 0}>\n              <EditMain ref={mainRef} mediums={data?.shadow.sources || []} />\n            </div>\n            {/* {tab === 1 && <Relative />} */}\n            <div hidden={tab !== 2}>\n              <EditAbout ref={aboutRef} about={data?.shadow.about || ''} />\n            </div>\n            <SpeedDial\n              ariaLabel=\"SpeedDial OpenIcon\"\n              sx={(theme) => ({\n                position: 'fixed',\n                '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n                  bottom: theme.spacing(2),\n                  right: theme.spacing(2),\n                },\n                '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n                  top: theme.spacing(2),\n                  left: theme.spacing(2),\n                },\n              })}\n              // hidden={hidden}\n              // icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n              icon={\n                <SpeedDialIcon\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                />\n              }\n              onClose={() => setOpen(false)}\n              onOpen={() => setOpen(true)}\n              open={open}\n            >\n              <SpeedDialAction\n                icon={<Save />}\n                tooltipTitle=\"Create\"\n                onClick={handleCreateShadow}\n              />\n            </SpeedDial>\n          </div>\n        </ContentScreen>\n        <AiderScreen>\n          <EditCast ref={castRef} credits={data?.shadow.credits || []} />\n        </AiderScreen>\n      </BodyScreen>\n    </Box>\n  );\n};\nexport default ShadowUpdate;\n"],"names":["ShadowUpdate","navigate","useNavigate","React","tab","setTab","open","setOpen","topRef","mainRef","aboutRef","castRef","id","useParams","useShadowQuery","variables","data","error","loading","console","log","useUpdateShadowMutation","onCompleted","Confirm","title","content","then","update_shadow","ref","shadow","sub_title","description","posters","cover","sx","theme","backgroundColor","palette","background","paper","padding","spacing","borderRight","divider","value","onChange","e","val","label","disabled","hidden","mediums","sources","about","ariaLabel","position","bottom","right","top","left","icon","display","alignItems","justifyContent","onClose","onOpen","tooltipTitle","onClick","topFields","current","mainFields","castFields","aboutFields","shadow_id","credits","filter","medium","map","name","sub_name","url"],"sourceRoot":""}