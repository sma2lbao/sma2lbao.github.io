{"version":3,"sources":["../node_modules/@apollo/client/index.js","../node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js","../node_modules/@apollo/client/link/http/serializeFetchParameter.js","../node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js","../node_modules/@apollo/client/link/http/checkFetcher.js","../node_modules/@apollo/client/link/http/createSignalIfSupported.js","../node_modules/@apollo/client/link/http/selectURI.js","../node_modules/@apollo/client/link/http/rewriteURIForGET.js","../node_modules/@apollo/client/link/http/createHttpLink.js","../node_modules/@apollo/client/link/http/HttpLink.js","../node_modules/@apollo/client/link/http/index.js","../node_modules/@apollo/client/cache/inmemory/policies.js","../node_modules/@apollo/client/cache/core/cache.js","../node_modules/@apollo/client/cache/core/types/common.js","../node_modules/@apollo/client/core/Reobserver.js","../node_modules/@apollo/client/core/ObservableQuery.js","../node_modules/@apollo/client/link/core/empty.js","../node_modules/@apollo/client/link/core/from.js","../node_modules/@apollo/client/link/core/split.js","../node_modules/@apollo/client/link/core/concat.js","../node_modules/@apollo/client/link/core/execute.js","../node_modules/@apollo/client/cache/core/types/Cache.js","../node_modules/@apollo/client/react/index.js","../node_modules/@apollo/client/react/data/OperationData.js","../node_modules/@apollo/client/react/data/SubscriptionData.js","../node_modules/@apollo/client/react/data/MutationData.js","../node_modules/@apollo/client/react/data/QueryData.js","../node_modules/@apollo/client/react/hooks/utils/useBaseQuery.js","../node_modules/@apollo/client/react/hooks/utils/useDeepMemo.js","../node_modules/@apollo/client/react/hooks/useLazyQuery.js","../node_modules/@apollo/client/react/hooks/useMutation.js","../node_modules/@apollo/client/react/hooks/useQuery.js","../node_modules/@apollo/client/react/hooks/useSubscription.js","../node_modules/@apollo/client/react/hooks/useReactiveVar.js","../node_modules/@apollo/client/react/hooks/index.js","../node_modules/@apollo/client/core/MutationStore.js","../node_modules/@apollo/client/core/LocalState.js","../node_modules/@apollo/client/core/QueryInfo.js","../node_modules/@apollo/client/core/QueryManager.js","../node_modules/@apollo/client/core/ApolloClient.js","../node_modules/@apollo/client/version.js","../node_modules/@apollo/client/cache/inmemory/entityStore.js","../node_modules/@apollo/client/cache/inmemory/readFromStore.js","../node_modules/@apollo/client/cache/inmemory/writeToStore.js","../node_modules/@apollo/client/cache/inmemory/inMemoryCache.js","../node_modules/@apollo/client/cache/inmemory/helpers.js","../node_modules/@apollo/client/node_modules/symbol-observable/es/ponyfill.js","../node_modules/@apollo/client/link/ws/index.js","../node_modules/@apollo/link-context/lib/bundle.esm.js","../node_modules/@apollo/link-error/lib/bundle.esm.js","../node_modules/@apollo/client/core/networkStatus.js","../node_modules/@apollo/client/node_modules/symbol-observable/es/index.js","../node_modules/@apollo/client/utilities/common/environment.js","../node_modules/@apollo/client/link/utils/fromError.js","../node_modules/@apollo/client/link/utils/toPromise.js","../node_modules/@apollo/client/link/utils/fromPromise.js","../node_modules/@apollo/client/link/utils/throwServerError.js","../node_modules/@apollo/client/link/utils/validateOperation.js","../node_modules/@apollo/client/link/utils/createOperation.js","../node_modules/@apollo/client/link/utils/transformOperation.js","../node_modules/@apollo/client/link/utils/index.js","../node_modules/@apollo/client/errors/index.js","../node_modules/@apollo/client/link/core/index.js","../node_modules/@apollo/client/core/index.js","../node_modules/@apollo/client/utilities/graphql/directives.js","../node_modules/@apollo/client/utilities/graphql/fragments.js","../node_modules/@apollo/client/utilities/graphql/storeUtils.js","../node_modules/@apollo/client/utilities/graphql/getFromAST.js","../node_modules/@apollo/client/utilities/common/filterInPlace.js","../node_modules/@apollo/client/utilities/graphql/transform.js","../node_modules/@apollo/client/utilities/observables/Observable.js","../node_modules/@apollo/client/utilities/common/mergeDeep.js","../node_modules/@apollo/client/utilities/common/cloneDeep.js","../node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js","../node_modules/@apollo/client/utilities/observables/iteration.js","../node_modules/@apollo/client/utilities/observables/asyncMap.js","../node_modules/@apollo/client/utilities/observables/Concast.js","../node_modules/@apollo/client/utilities/common/arrays.js","../node_modules/@apollo/client/utilities/common/errorHandling.js","../node_modules/@apollo/client/utilities/common/canUse.js","../node_modules/@apollo/client/utilities/common/compact.js","../node_modules/@apollo/client/utilities/index.js","../node_modules/@apollo/client/react/context/ApolloContext.js","../node_modules/@apollo/client/react/context/ApolloConsumer.js","../node_modules/@apollo/client/react/context/ApolloProvider.js","../node_modules/@apollo/client/react/context/index.js","../node_modules/@apollo/client/react/parser/index.js","../node_modules/@apollo/client/link/core/ApolloLink.js","../node_modules/@apollo/client/cache/index.js","../node_modules/@apollo/client/cache/inmemory/reactiveVars.js"],"names":["Object","prototype","hasOwnProperty","parseAndCheckHttpResponse","operations","response","text","then","bodyText","JSON","parse","err","parseError","name","statusCode","status","result","Array","isArray","call","map","op","operationName","p","label","serialized","stringify","e","fallbackHttpConfig","http","includeQuery","includeExtensions","headers","accept","options","method","operation","fallbackConfig","configs","_i","arguments","length","credentials","forEach","config","extensions","variables","query","body","fetcher","fetch","createSignalIfSupported","AbortController","controller","signal","selectURI","fallbackURI","contextURI","getContext","uri","rewriteURIForGET","chosenURI","queryParams","addQueryParam","key","value","push","encodeURIComponent","serializedVariables","serializedExtensions","fragment","preFragment","fragmentStart","indexOf","substr","queryParamsPrefix","newURI","join","linkOptions","_a","useGETForQueries","requestOptions","linkConfig","fetchOptions","context","clientAwarenessHeaders","clientAwareness","name_1","version","contextHeaders","contextConfig","_b","_c","_controller","definitions","some","d","kind","_d","observer","setContext","next","complete","catch","errors","data","error","abort","_super","HttpLink","_this","this","request","argsFromFieldSpecifier","spec","args","field","defaultDataIdFromObject","__typename","id","_id","keyObject","nullKeyFieldsFn","simpleKeyArgsFn","_args","fieldName","mergeTrueFn","existing","incoming","mergeObjects","mergeFalseFn","_","Policies","typePolicies","create","supertypeMap","Map","fuzzySubtypes","rootIdsByTypename","rootTypenamesById","usingPossibleTypes","dataIdFromObject","cache","setRootTypename","possibleTypes","addPossibleTypes","addTypePolicies","identify","object","selectionSet","fragmentMap","typename","ROOT_QUERY","policy","getTypePolicy","keyFn","specifierOrId","keyFieldsFnFromSpecifier","String","keys","keyFields","fields","queryType","mutationType","subscriptionType","getFieldPolicy","read","keyArgs","merge","keyArgsFnFromSpecifier","which","rootId","toUpperCase","old","supertype","getSupertypeSet","subtype","add","match","set","RegExp","createIfMissing","typePolicy","fieldPolicies","supertypeSet","get","Set","fragmentMatches","typeCondition","has","typenameSupertypeSet","workQueue_1","maybeEnqueue_1","size","needToCheckFuzzySubtypes","i","regExp","fuzzyString","getStoreFieldName","fieldSpec","storeFieldName","specifierOrString","readField","objectOrReference","from","store","getFieldValue","readOptions","makeFieldFunctionOptions","getStorage","__ref","withValue","hasMergeFunction","applyMerges","storageKeys","__field","__value","apply","item","newFields_1","e_1","i_1","firstStorageKey_1","incomingValue","appliedValue","policies","storage","toReference","canRead","isReference","fieldNameOrOptions","eType","iType","typesDiffer","applied","specifier","computeKeyObject","trie","aliasMap","info","lookupArray","makeAliasMap","workQueue","selections","selection","alias","responseKey","storeKey","aliases","subsets","prevKey","keyObj","s","subset","responseName","ApolloCache","getFragmentDoc","recordOptimisticTransaction","transaction","optimisticId","performTransaction","transformDocument","document","gc","modify","transformForLink","readQuery","optimistic","readFragment","fragmentName","writeQuery","write","dataId","broadcast","writeFragment","MissingFieldError","message","path","clientOnly","Reobserver","shouldFetch","reobserve","newOptions","newNetworkStatus","updateOptions","updatePolling","concast","removeObserver","addObserver","promise","assign","stop","pollingInfo","clearTimeout","timeout","pollInterval","interval","maybeFetch","fetchPolicy","nextFetchPolicy","poll","setTimeout","ObservableQuery","queryManager","queryInfo","onSubscribe","observers","subscriptions","lastError","isDifferentFromLastResult","updateLastResult","_error","lastResult","graphQLErrors","networkStatus","loading","isTornDown","queryId","generateQueryId","opDef","queryName","defineProperty","enumerable","configurable","Promise","resolve","reject","delete","removeQuery","subscription","unsubscribe","subscribe","getCurrentResult","saveAsLastResult","ready","partial","transform","hasForcedResolvers","diff","getDiff","returnPartialData","newResult","lastResultSnapshot","getLastResult","getLastError","resetLastResults","resetQueryStoreErrors","resetErrors","refetch","reobserveOptions","newReobserver","fetchMore","fetchMoreOptions","combinedOptions","qid","notifyOnNetworkStatusChange","observe","fetchQuery","fetchMoreResult","updateQuery","previous","finally","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","onError","setOptions","setVariables","mapFn","previousResult","broadcastQueries","startPolling","getReobserver","stopPolling","reobserver","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","first","tearDownQuery","shareOptions","setObservableQuery","currentOptions","fetchQueryObservable","ssrMode","sub","clear","empty","split","concat","execute","Cache","OperationData","isMounted","previousOptions","getOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","type","parser","SubscriptionData","setResult","currentObservable","initialize","skip","undefined","currentResult","getLoadingResult","shouldResubscribe","startSubscription","afterExecute","endSubscription","updateCurrentData","bind","updateError","completeSubscription","updateResult","onSubscriptionData","onSubscriptionComplete","MutationData","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","ignoreResults","called","onCompleted","isMostRecentMutation","QueryData","onNewData","previousData","runLazy","runLazyQuery","lazyOptions","getQueryResult","observableQueryFields","partialRefetch","obsRefetch","obsFetchMore","obsUpdateQuery","obsStartPolling","obsStopPolling","obsSubscribeToMore","removeQuerySubscription","updateObservableQuery","startQuerySubscription","getExecuteSsrResult","getExecuteResult","executeLazy","fetchData","ssr","lazy","handleErrorOrCompleted","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","addQueryPromise","prepareObservableQueryOptions","Query","displayName","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","currentSubscription","resubscribeToQuery","useBaseQuery","x","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","memoFn","ref","useDeepMemo","queryResult","useLazyQuery","useMutation","mutationDataRef","mutationData","useQuery","useSubscription","subscriptionDataRef","useReactiveVar","rv","mute","onNextChange","MutationStore","getStore","initMutation","markMutationError","markMutationResult","reset","LocalState","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","serverQuery","prepareContext","getCacheKey","obj","addExportedVariables","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","Directive","enter","node","arg","rootValue","mainDefinition","fragments","definitionOperation","defaultOperationType","execContext","charAt","slice","resolveSelectionSet","resultsToMerge","resolveField","fieldResult","fragmentResult","all","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","directives","directive","resolveSubSelectedArray","destructiveMethodCounts","WeakMap","wrapDestructiveCacheMethod","methodName","original","QueryInfo","listeners","lastRequestId","dirty","observableQuery","init","networkError","updateWatch","setDiff","oldDiff","notifyTimeout","notify","oq","oqListener","fromOptimisticTransaction","shouldNotify","listener","cancel","lastWatch","watch","callback","shouldWrite","lastWrite","dmCount","markResult","allowCacheWrite","shouldWriteResult","errorPolicy","markReady","markError","ignoreErrors","writeWithErrors","QueryManager","link","queryDeduplication","onBroadcast","_e","localState","mutationStore","queries","fetchCancelFns","transformCache","queryIdCounter","requestIdCounter","mutationIdCounter","inFlightLinkObservables","_info","stopQueryNoBroadcast","cancelPendingFetches","optimisticResponse","updateQueriesByName","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","update","generateUpdateQueriesInfo","optimistic_1","self","_f","generateMutationId","getVariables","hasClientExports","sent","ret","updater","queryUpdatersById","storeResult","getObservableFromLink","removeOptimistic","refetchQueryPromises","refetchQuery","queryOptions","getQueryStore","transformed","forLink","cacheEntry_1","defaultVars","doc","observable","generateRequestId","stopQueryInStore","stopQueryInStoreNoBroadcast","clearStore","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","getQuery","makeObservable","observablePromise_1","getLocalState","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","of","getResultsFromLink","hasErrors","aqr","oldNetworkStatus","normalized","fromVariables","fetchQueryByPolicy","reason","readCache","resultsFromCache","fromData","resolved","resultsFromLink","newContext","cacheWrites_1","queryUpdatersById_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","c","ApolloClient","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","clientAwarenessName","clientAwarenessVersion","window","__APOLLO_CLIENT__","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","extract","__actionHookForDevTools","cb","__requestRaw","payload","fn","onResetStore","filter","onClearStore","restore","serializedState","setLocalStateFragmentMatcher","setLink","newLink","DELETE","delModifier","INVALIDATE","EntityStore","group","rootIds","refs","objOrRef","objOrIdOrRef","mergeIntoStore","toObject","lookup","depend","storeObject","parent","dependOnExistence","merged","storeObjectReconciler","caching","fieldsToDirty_1","__exists","changedFields_1","needToMerge_1","allDeleted_1","sharedDetails_1","fieldValue","newValue","evict","evicted","replace","newData","retain","release","count","getRootIdSet","ids","snapshot","findChildRefIds","idsToRemove","root_1","found_1","workSet_1","canTraverse_1","values","makeCacheKey","keyMaker","CacheGroup","makeDepKey","Root","resultCaching","seed","storageTrie","sharedLayerGroup","addLayer","layerId","replay","removeLayer","idOrObj","Layer","fromParent","existingObject","incomingObject","property","existingValue","supportsResultCaching","missingFromInvariant","StoreReader","executeSelectionSet","execSelectionSetImpl","varString","knownResults","executeSubSelectedArray","execSubSelectedArrayImpl","array","addTypename","diffQueryAgainstStore","execResult","hasMissingFields","missing","isFresh","latest","peek","objectsToMerge","finalResult","getMissing","handleMissing","workSet","resultName","wasClientOnly","added","pop","childResult","StoreWriter","reader","writeToStore","operationDefinition","merger","processSelectionSet","written","out","shouldApplyMerges","sets","mergedFields","resultFieldKey","processFieldValue","entityRef_1","defaultConfig","InMemoryCache","watches","typenameDocumentCache","makeVar","txCount","maybeBroadcastWatch","broadcastWatch","optimisticData","watchDep","storeWriter","storeReader","broadcastWatches","immediate","idToRemove","newOptimisticData","perform","layer","hasOwn","TypeOrFieldNameRegExp","fieldNameFromStoreName","selectionSetMatchesResult","every","storeValueIsStoreObject","isFieldValueToBeMerged","makeProcessedFieldsMerger","reconcileProcessedFields","symbolObservablePonyfill","root","Symbol","for","WebSocketLink","paramsOrClient","subscriptionClient","webSocketImpl","setter","forward","handle","req","errorHandler","retriedSub","retriedResult","ErrorLink","NetworkStatus","isNetworkRequestInFlight","global","module","fromError","errorValue","toPromise","completed","fromPromise","throwServerError","Error","validateOperation","OPERATION_FIELDS","createOperation","starting","transformOperation","transformedOperation","isApolloError","ApolloError","errorMessage","extraInfo","graphQLError","generateErrorMessage","__proto__","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","shouldInclude","isInclusionDirective","directiveArguments","ifArgument","ifValue","getInclusionDirectives","evaledValue","hasDirectives","names","getDirectiveNames","getFragmentQueryDocument","actualFragmentName","definition","createFragmentMap","symTable","getFragmentFromSelection","makeReference","Boolean","valueToObjectRepresentation","argObj","isIntValue","isFloatValue","Number","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","isVariable","variableValue","isListValue","listValue","nestedArgArrayObj","isEnumValue","isNullValue","storeKeyNameFromField","directivesObj","getStoreKeyName","KNOWN_DIRECTIVES","filterKeys","sort","filteredArgs_1","completeFieldName","stringifiedArgs","argumentsObjectFromField","argObj_1","resultKeyNameFromField","getTypenameFromResult","isField","isInlineFragment","checkDocument","getOperationDefinition","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","getMainDefinition","queryDoc","fragmentDefinition","getDefaultValues","defaultValues","defs","variableDefinitions","def","defaultValue","variable","filterInPlace","test","target","elem","TYPENAME_FIELD","nullIfDocIsEmpty","isEmpty","fragmentDef","getFragmentDefinition","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","_key","Field","remove","getAllFragmentSpreadsFromSelectionSet","allFragments","frag","FragmentSpread","v","argMatcher","argument","aConfig","getArgumentMatcher","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","removeArgumentsFromDocument","fs","FragmentDefinition","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","buildQueryFromSelectionSet","removeClientSetsFromDocument","mergeDeep","sources","mergeDeepArray","isObject","defaultReconciler","source","DeepMerger","reconciler","pastCopies","sourceKey","targetValue","shallowCopyForMerge","getPrototypeOf","toString","cloneDeep","cloneDeepHelper","val","seen","copy_1","child","copy_2","maybeDeepFreeze","iterateObserversSafely","observersWithMethod","obs","asyncMap","catchFn","_complete","activeCallbackCount","makeCallback","examiner","delegate","handler","isPromiseLike","Concast","handlers","shift","iterable","start","nextOrError","quietly","once","isNonEmptyArray","graphQLResultHasError","species","canUseWeakMap","navigator","product","compact","objects","contextSymbol","getApolloContext","createContext","writable","ApolloContext","createElement","Consumer","Provider","DocumentType","Subscription","cached","passthrough","toLink","ApolloLink","isTerminating","LinkError","links","reduce","y","left","right","leftLink","rightLink","second","firstLink","nextLink","setOnError","varDep","cacheSlot","consumeAndIterate","items","caches","getValue"],"mappings":"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","file":"static/js/npm.@apollo.0858eb4e.chunk.js","sourcesContent":["export * from \"./core/index.js\";\nexport * from \"./react/index.js\";","import { throwServerError } from \"../utils/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function parseAndCheckHttpResponse(operations) {\n  return function (response) {\n    return response.text().then(function (bodyText) {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        var parseError = err;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    }).then(function (result) {\n      if (response.status >= 300) {\n        throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n      }\n\n      if (!Array.isArray(result) && !hasOwnProperty.call(result, 'data') && !hasOwnProperty.call(result, 'errors')) {\n        throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations) ? operations.map(function (op) {\n          return op.operationName;\n        }) : operations.operationName) + \"'.\");\n      }\n\n      return result;\n    });\n  };\n}","import { InvariantError } from 'ts-invariant';\nexport var serializeFetchParameter = function serializeFetchParameter(p, label) {\n  var serialized;\n\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    var parseError = process.env.NODE_ENV === \"production\" ? new InvariantError(23) : new InvariantError(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n    parseError.parseError = e;\n    throw parseError;\n  }\n\n  return serialized;\n};","import { __assign } from \"tslib\";\nimport { print } from 'graphql/language/printer';\nvar defaultHttpOptions = {\n  includeQuery: true,\n  includeExtensions: false\n};\nvar defaultHeaders = {\n  accept: '*/*',\n  'content-type': 'application/json'\n};\nvar defaultOptions = {\n  method: 'POST'\n};\nexport var fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions\n};\nexport var selectHttpOptionsAndBody = function selectHttpOptionsAndBody(operation, fallbackConfig) {\n  var configs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n\n  var options = __assign(__assign({}, fallbackConfig.options), {\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials\n  });\n\n  var http = fallbackConfig.http || {};\n  configs.forEach(function (config) {\n    options = __assign(__assign(__assign({}, options), config.options), {\n      headers: __assign(__assign({}, options.headers), config.headers)\n    });\n    if (config.credentials) options.credentials = config.credentials;\n    http = __assign(__assign({}, http), config.http);\n  });\n  var operationName = operation.operationName,\n      extensions = operation.extensions,\n      variables = operation.variables,\n      query = operation.query;\n  var body = {\n    operationName: operationName,\n    variables: variables\n  };\n  if (http.includeExtensions) body.extensions = extensions;\n  if (http.includeQuery) body.query = print(query);\n  return {\n    options: options,\n    body: body\n  };\n};","import { InvariantError } from 'ts-invariant';\nexport var checkFetcher = function checkFetcher(fetcher) {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(22) : new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \");\n  }\n};","export var createSignalIfSupported = function createSignalIfSupported() {\n  if (typeof AbortController === 'undefined') return {\n    controller: false,\n    signal: false\n  };\n  var controller = new AbortController();\n  var signal = controller.signal;\n  return {\n    controller: controller,\n    signal: signal\n  };\n};","export var selectURI = function selectURI(operation, fallbackURI) {\n  var context = operation.getContext();\n  var contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return fallbackURI || '/graphql';\n  }\n};","import { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nexport function rewriteURIForGET(chosenURI, body) {\n  var queryParams = [];\n\n  var addQueryParam = function addQueryParam(key, value) {\n    queryParams.push(key + \"=\" + encodeURIComponent(value));\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query);\n  }\n\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n\n  if (body.variables) {\n    var serializedVariables = void 0;\n\n    try {\n      serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\n    } catch (parseError) {\n      return {\n        parseError: parseError\n      };\n    }\n\n    addQueryParam('variables', serializedVariables);\n  }\n\n  if (body.extensions) {\n    var serializedExtensions = void 0;\n\n    try {\n      serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\n    } catch (parseError) {\n      return {\n        parseError: parseError\n      };\n    }\n\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  var fragment = '',\n      preFragment = chosenURI;\n  var fragmentStart = chosenURI.indexOf('#');\n\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n\n  var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return {\n    newURI: newURI\n  };\n}","import { __assign, __rest } from \"tslib\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport { parseAndCheckHttpResponse } from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport { selectHttpOptionsAndBody, fallbackHttpConfig } from \"./selectHttpOptionsAndBody.js\";\nimport { createSignalIfSupported } from \"./createSignalIfSupported.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError } from \"../utils/index.js\";\nexport var createHttpLink = function createHttpLink(linkOptions) {\n  if (linkOptions === void 0) {\n    linkOptions = {};\n  }\n\n  var _a = linkOptions.uri,\n      uri = _a === void 0 ? '/graphql' : _a,\n      fetcher = linkOptions.fetch,\n      includeExtensions = linkOptions.includeExtensions,\n      useGETForQueries = linkOptions.useGETForQueries,\n      requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\n\n  checkFetcher(fetcher);\n\n  if (!fetcher) {\n    fetcher = fetch;\n  }\n\n  var linkConfig = {\n    http: {\n      includeExtensions: includeExtensions\n    },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers\n  };\n  return new ApolloLink(function (operation) {\n    var chosenURI = selectURI(operation, uri);\n    var context = operation.getContext();\n    var clientAwarenessHeaders = {};\n\n    if (context.clientAwareness) {\n      var _a = context.clientAwareness,\n          name_1 = _a.name,\n          version = _a.version;\n\n      if (name_1) {\n        clientAwarenessHeaders['apollographql-client-name'] = name_1;\n      }\n\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);\n\n    var contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders\n    };\n\n    var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig),\n        options = _b.options,\n        body = _b.body;\n\n    var controller;\n\n    if (!options.signal) {\n      var _c = createSignalIfSupported(),\n          _controller = _c.controller,\n          signal = _c.signal;\n\n      controller = _controller;\n      if (controller) options.signal = signal;\n    }\n\n    var definitionIsMutation = function definitionIsMutation(d) {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n\n    if (useGETForQueries && !operation.query.definitions.some(definitionIsMutation)) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      var _d = rewriteURIForGET(chosenURI, body),\n          newURI = _d.newURI,\n          parseError = _d.parseError;\n\n      if (parseError) {\n        return fromError(parseError);\n      }\n\n      chosenURI = newURI;\n    } else {\n      try {\n        options.body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(function (observer) {\n      fetcher(chosenURI, options).then(function (response) {\n        operation.setContext({\n          response: response\n        });\n        return response;\n      }).then(parseAndCheckHttpResponse(operation)).then(function (result) {\n        observer.next(result);\n        observer.complete();\n        return result;\n      }).catch(function (err) {\n        if (err.name === 'AbortError') return;\n\n        if (err.result && err.result.errors && err.result.data) {\n          observer.next(err.result);\n        }\n\n        observer.error(err);\n      });\n      return function () {\n        if (controller) controller.abort();\n      };\n    });\n  });\n};","import { __extends } from \"tslib\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { createHttpLink } from \"./createHttpLink.js\";\n\nvar HttpLink = function (_super) {\n  __extends(HttpLink, _super);\n\n  function HttpLink(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this, createHttpLink(options).request) || this;\n\n    _this.options = options;\n    return _this;\n  }\n\n  return HttpLink;\n}(ApolloLink);\n\nexport { HttpLink };","export { parseAndCheckHttpResponse } from \"./parseAndCheckHttpResponse.js\";\nexport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nexport { fallbackHttpConfig, selectHttpOptionsAndBody } from \"./selectHttpOptionsAndBody.js\";\nexport { checkFetcher } from \"./checkFetcher.js\";\nexport { createSignalIfSupported } from \"./createSignalIfSupported.js\";\nexport { selectURI } from \"./selectURI.js\";\nexport { createHttpLink } from \"./createHttpLink.js\";\nexport { HttpLink } from \"./HttpLink.js\";\nexport { rewriteURIForGET } from \"./rewriteURIForGET.js\";","import { __assign } from \"tslib\";\nimport { KeyTrie } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { getFragmentFromSelection, isField, getTypenameFromResult, storeKeyNameFromField, argumentsObjectFromField, isReference, getStoreKeyName, canUseWeakMap } from \"../../utilities/index.js\";\nimport { hasOwn, fieldNameFromStoreName, isFieldValueToBeMerged, storeValueIsStoreObject, selectionSetMatchesResult, TypeOrFieldNameRegExp } from \"./helpers.js\";\nimport { cacheSlot } from \"./reactiveVars.js\";\n\nfunction argsFromFieldSpecifier(spec) {\n  return spec.args !== void 0 ? spec.args : spec.field ? argumentsObjectFromField(spec.field, spec.variables) : null;\n}\n\nexport var defaultDataIdFromObject = function defaultDataIdFromObject(_a, context) {\n  var __typename = _a.__typename,\n      id = _a.id,\n      _id = _a._id;\n\n  if (typeof __typename === \"string\") {\n    if (context) {\n      context.keyObject = id !== void 0 ? {\n        id: id\n      } : _id !== void 0 ? {\n        _id: _id\n      } : void 0;\n    }\n\n    if (id === void 0) id = _id;\n\n    if (id !== void 0) {\n      return __typename + \":\" + (typeof id === \"number\" || typeof id === \"string\" ? id : JSON.stringify(id));\n    }\n  }\n};\n\nvar nullKeyFieldsFn = function nullKeyFieldsFn() {\n  return void 0;\n};\n\nvar simpleKeyArgsFn = function simpleKeyArgsFn(_args, context) {\n  return context.fieldName;\n};\n\nvar mergeTrueFn = function mergeTrueFn(existing, incoming, _a) {\n  var mergeObjects = _a.mergeObjects;\n  return mergeObjects(existing, incoming);\n};\n\nvar mergeFalseFn = function mergeFalseFn(_, incoming) {\n  return incoming;\n};\n\nvar Policies = function () {\n  function Policies(config) {\n    this.config = config;\n    this.typePolicies = Object.create(null);\n    this.supertypeMap = new Map();\n    this.fuzzySubtypes = new Map();\n    this.rootIdsByTypename = Object.create(null);\n    this.rootTypenamesById = Object.create(null);\n    this.usingPossibleTypes = false;\n    this.config = __assign({\n      dataIdFromObject: defaultDataIdFromObject\n    }, config);\n    this.cache = this.config.cache;\n    this.setRootTypename(\"Query\");\n    this.setRootTypename(\"Mutation\");\n    this.setRootTypename(\"Subscription\");\n\n    if (config.possibleTypes) {\n      this.addPossibleTypes(config.possibleTypes);\n    }\n\n    if (config.typePolicies) {\n      this.addTypePolicies(config.typePolicies);\n    }\n  }\n\n  Policies.prototype.identify = function (object, selectionSet, fragmentMap) {\n    var typename = selectionSet && fragmentMap ? getTypenameFromResult(object, selectionSet, fragmentMap) : object.__typename;\n\n    if (typename === this.rootTypenamesById.ROOT_QUERY) {\n      return [\"ROOT_QUERY\"];\n    }\n\n    var context = {\n      typename: typename,\n      selectionSet: selectionSet,\n      fragmentMap: fragmentMap\n    };\n    var id;\n    var policy = this.getTypePolicy(typename, false);\n    var keyFn = policy && policy.keyFn || this.config.dataIdFromObject;\n\n    while (keyFn) {\n      var specifierOrId = keyFn(object, context);\n\n      if (Array.isArray(specifierOrId)) {\n        keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n      } else {\n        id = specifierOrId;\n        break;\n      }\n    }\n\n    id = id && String(id);\n    return context.keyObject ? [id, context.keyObject] : [id];\n  };\n\n  Policies.prototype.addTypePolicies = function (typePolicies) {\n    var _this = this;\n\n    Object.keys(typePolicies).forEach(function (typename) {\n      var existing = _this.getTypePolicy(typename, true);\n\n      var incoming = typePolicies[typename];\n      var keyFields = incoming.keyFields,\n          fields = incoming.fields;\n      if (incoming.queryType) _this.setRootTypename(\"Query\", typename);\n      if (incoming.mutationType) _this.setRootTypename(\"Mutation\", typename);\n      if (incoming.subscriptionType) _this.setRootTypename(\"Subscription\", typename);\n      existing.keyFn = keyFields === false ? nullKeyFieldsFn : Array.isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields) : typeof keyFields === \"function\" ? keyFields : existing.keyFn;\n\n      if (fields) {\n        Object.keys(fields).forEach(function (fieldName) {\n          var existing = _this.getFieldPolicy(typename, fieldName, true);\n\n          var incoming = fields[fieldName];\n\n          if (typeof incoming === \"function\") {\n            existing.read = incoming;\n          } else {\n            var keyArgs = incoming.keyArgs,\n                read = incoming.read,\n                merge = incoming.merge;\n            existing.keyFn = keyArgs === false ? simpleKeyArgsFn : Array.isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs) : typeof keyArgs === \"function\" ? keyArgs : existing.keyFn;\n            if (typeof read === \"function\") existing.read = read;\n            existing.merge = typeof merge === \"function\" ? merge : merge === true ? mergeTrueFn : merge === false ? mergeFalseFn : existing.merge;\n          }\n\n          if (existing.read && existing.merge) {\n            existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n          }\n        });\n      }\n    });\n  };\n\n  Policies.prototype.setRootTypename = function (which, typename) {\n    if (typename === void 0) {\n      typename = which;\n    }\n\n    var rootId = \"ROOT_\" + which.toUpperCase();\n    var old = this.rootTypenamesById[rootId];\n\n    if (typename !== old) {\n      process.env.NODE_ENV === \"production\" ? invariant(!old || old === which, 1) : invariant(!old || old === which, \"Cannot change root \" + which + \" __typename more than once\");\n      if (old) delete this.rootIdsByTypename[old];\n      this.rootIdsByTypename[typename] = rootId;\n      this.rootTypenamesById[rootId] = typename;\n    }\n  };\n\n  Policies.prototype.addPossibleTypes = function (possibleTypes) {\n    var _this = this;\n\n    this.usingPossibleTypes = true;\n    Object.keys(possibleTypes).forEach(function (supertype) {\n      _this.getSupertypeSet(supertype, true);\n\n      possibleTypes[supertype].forEach(function (subtype) {\n        _this.getSupertypeSet(subtype, true).add(supertype);\n\n        var match = subtype.match(TypeOrFieldNameRegExp);\n\n        if (!match || match[0] !== subtype) {\n          _this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n        }\n      });\n    });\n  };\n\n  Policies.prototype.getTypePolicy = function (typename, createIfMissing) {\n    if (typename) {\n      return this.typePolicies[typename] || createIfMissing && (this.typePolicies[typename] = Object.create(null));\n    }\n  };\n\n  Policies.prototype.getFieldPolicy = function (typename, fieldName, createIfMissing) {\n    var typePolicy = this.getTypePolicy(typename, createIfMissing);\n\n    if (typePolicy) {\n      var fieldPolicies = typePolicy.fields || createIfMissing && (typePolicy.fields = Object.create(null));\n\n      if (fieldPolicies) {\n        return fieldPolicies[fieldName] || createIfMissing && (fieldPolicies[fieldName] = Object.create(null));\n      }\n    }\n  };\n\n  Policies.prototype.getSupertypeSet = function (subtype, createIfMissing) {\n    var supertypeSet = this.supertypeMap.get(subtype);\n\n    if (!supertypeSet && createIfMissing) {\n      this.supertypeMap.set(subtype, supertypeSet = new Set());\n    }\n\n    return supertypeSet;\n  };\n\n  Policies.prototype.fragmentMatches = function (fragment, typename, result, variables) {\n    var _this = this;\n\n    if (!fragment.typeCondition) return true;\n    if (!typename) return false;\n    var supertype = fragment.typeCondition.name.value;\n    if (typename === supertype) return true;\n\n    if (this.usingPossibleTypes && this.supertypeMap.has(supertype)) {\n      var typenameSupertypeSet = this.getSupertypeSet(typename, true);\n      var workQueue_1 = [typenameSupertypeSet];\n\n      var maybeEnqueue_1 = function maybeEnqueue_1(subtype) {\n        var supertypeSet = _this.getSupertypeSet(subtype, false);\n\n        if (supertypeSet && supertypeSet.size && workQueue_1.indexOf(supertypeSet) < 0) {\n          workQueue_1.push(supertypeSet);\n        }\n      };\n\n      var needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n      var checkingFuzzySubtypes = false;\n\n      for (var i = 0; i < workQueue_1.length; ++i) {\n        var supertypeSet = workQueue_1[i];\n\n        if (supertypeSet.has(supertype)) {\n          if (!typenameSupertypeSet.has(supertype)) {\n            if (checkingFuzzySubtypes) {\n              process.env.NODE_ENV === \"production\" || invariant.warn(\"Inferring subtype \" + typename + \" of supertype \" + supertype);\n            }\n\n            typenameSupertypeSet.add(supertype);\n          }\n\n          return true;\n        }\n\n        supertypeSet.forEach(maybeEnqueue_1);\n\n        if (needToCheckFuzzySubtypes && i === workQueue_1.length - 1 && selectionSetMatchesResult(fragment.selectionSet, result, variables)) {\n          needToCheckFuzzySubtypes = false;\n          checkingFuzzySubtypes = true;\n          this.fuzzySubtypes.forEach(function (regExp, fuzzyString) {\n            var match = typename.match(regExp);\n\n            if (match && match[0] === typename) {\n              maybeEnqueue_1(fuzzyString);\n            }\n          });\n        }\n      }\n    }\n\n    return false;\n  };\n\n  Policies.prototype.getStoreFieldName = function (fieldSpec) {\n    var typename = fieldSpec.typename,\n        fieldName = fieldSpec.fieldName;\n    var policy = this.getFieldPolicy(typename, fieldName, false);\n    var storeFieldName;\n    var keyFn = policy && policy.keyFn;\n\n    if (keyFn && typename) {\n      var context = {\n        typename: typename,\n        fieldName: fieldName,\n        field: fieldSpec.field || null,\n        variables: fieldSpec.variables\n      };\n      var args = argsFromFieldSpecifier(fieldSpec);\n\n      while (keyFn) {\n        var specifierOrString = keyFn(args, context);\n\n        if (Array.isArray(specifierOrString)) {\n          keyFn = keyArgsFnFromSpecifier(specifierOrString);\n        } else {\n          storeFieldName = specifierOrString || fieldName;\n          break;\n        }\n      }\n    }\n\n    if (storeFieldName === void 0) {\n      storeFieldName = fieldSpec.field ? storeKeyNameFromField(fieldSpec.field, fieldSpec.variables) : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n    }\n\n    return fieldName === fieldNameFromStoreName(storeFieldName) ? storeFieldName : fieldName + \":\" + storeFieldName;\n  };\n\n  Policies.prototype.readField = function (options, context) {\n    var objectOrReference = options.from;\n    if (!objectOrReference) return;\n    var nameOrField = options.field || options.fieldName;\n    if (!nameOrField) return;\n\n    if (options.typename === void 0) {\n      var typename = context.store.getFieldValue(objectOrReference, \"__typename\");\n      if (typename) options.typename = typename;\n    }\n\n    var storeFieldName = this.getStoreFieldName(options);\n    var fieldName = fieldNameFromStoreName(storeFieldName);\n    var existing = context.store.getFieldValue(objectOrReference, storeFieldName);\n    var policy = this.getFieldPolicy(options.typename, fieldName, false);\n    var read = policy && policy.read;\n\n    if (read) {\n      var readOptions = makeFieldFunctionOptions(this, objectOrReference, options, context, context.store.getStorage(isReference(objectOrReference) ? objectOrReference.__ref : objectOrReference, storeFieldName));\n      return cacheSlot.withValue(this.cache, read, [existing, readOptions]);\n    }\n\n    return existing;\n  };\n\n  Policies.prototype.hasMergeFunction = function (typename, fieldName) {\n    var policy = this.getFieldPolicy(typename, fieldName, false);\n    return !!(policy && policy.merge);\n  };\n\n  Policies.prototype.applyMerges = function (existing, incoming, context, storageKeys) {\n    var _a;\n\n    var _this = this;\n\n    if (isFieldValueToBeMerged(incoming)) {\n      var field = incoming.__field;\n      var fieldName = field.name.value;\n      var merge = this.getFieldPolicy(incoming.__typename, fieldName, false).merge;\n      incoming = merge(existing, incoming.__value, makeFieldFunctionOptions(this, void 0, {\n        typename: incoming.__typename,\n        fieldName: fieldName,\n        field: field,\n        variables: context.variables\n      }, context, storageKeys ? (_a = context.store).getStorage.apply(_a, storageKeys) : Object.create(null)));\n    }\n\n    if (Array.isArray(incoming)) {\n      return incoming.map(function (item) {\n        return _this.applyMerges(void 0, item, context);\n      });\n    }\n\n    if (storeValueIsStoreObject(incoming)) {\n      var e_1 = existing;\n      var i_1 = incoming;\n      var firstStorageKey_1 = isReference(e_1) ? e_1.__ref : typeof e_1 === \"object\" && e_1;\n      var newFields_1;\n      Object.keys(i_1).forEach(function (storeFieldName) {\n        var incomingValue = i_1[storeFieldName];\n\n        var appliedValue = _this.applyMerges(context.store.getFieldValue(e_1, storeFieldName), incomingValue, context, firstStorageKey_1 ? [firstStorageKey_1, storeFieldName] : void 0);\n\n        if (appliedValue !== incomingValue) {\n          newFields_1 = newFields_1 || Object.create(null);\n          newFields_1[storeFieldName] = appliedValue;\n        }\n      });\n\n      if (newFields_1) {\n        return __assign(__assign({}, i_1), newFields_1);\n      }\n    }\n\n    return incoming;\n  };\n\n  return Policies;\n}();\n\nexport { Policies };\n\nfunction makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, context, storage) {\n  var storeFieldName = policies.getStoreFieldName(fieldSpec);\n  var fieldName = fieldNameFromStoreName(storeFieldName);\n  var variables = fieldSpec.variables || context.variables;\n  var _a = context.store,\n      getFieldValue = _a.getFieldValue,\n      toReference = _a.toReference,\n      canRead = _a.canRead;\n  return {\n    args: argsFromFieldSpecifier(fieldSpec),\n    field: fieldSpec.field || null,\n    fieldName: fieldName,\n    storeFieldName: storeFieldName,\n    variables: variables,\n    isReference: isReference,\n    toReference: toReference,\n    storage: storage,\n    cache: policies.cache,\n    canRead: canRead,\n    readField: function readField(fieldNameOrOptions, from) {\n      var options = typeof fieldNameOrOptions === \"string\" ? {\n        fieldName: fieldNameOrOptions,\n        from: from\n      } : __assign({}, fieldNameOrOptions);\n\n      if (void 0 === options.from) {\n        options.from = objectOrReference;\n      }\n\n      if (void 0 === options.variables) {\n        options.variables = variables;\n      }\n\n      return policies.readField(options, context);\n    },\n    mergeObjects: function mergeObjects(existing, incoming) {\n      if (Array.isArray(existing) || Array.isArray(incoming)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"Cannot automatically merge arrays\");\n      }\n\n      if (existing && typeof existing === \"object\" && incoming && typeof incoming === \"object\") {\n        var eType = getFieldValue(existing, \"__typename\");\n        var iType = getFieldValue(incoming, \"__typename\");\n        var typesDiffer = eType && iType && eType !== iType;\n        var applied = policies.applyMerges(typesDiffer ? void 0 : existing, incoming, context);\n\n        if (typesDiffer || !storeValueIsStoreObject(existing) || !storeValueIsStoreObject(applied)) {\n          return applied;\n        }\n\n        return __assign(__assign({}, existing), applied);\n      }\n\n      return incoming;\n    }\n  };\n}\n\nfunction keyArgsFnFromSpecifier(specifier) {\n  return function (args, context) {\n    return args ? context.fieldName + \":\" + JSON.stringify(computeKeyObject(args, specifier)) : context.fieldName;\n  };\n}\n\nfunction keyFieldsFnFromSpecifier(specifier) {\n  var trie = new KeyTrie(canUseWeakMap);\n  return function (object, context) {\n    var aliasMap;\n\n    if (context.selectionSet && context.fragmentMap) {\n      var info = trie.lookupArray([context.selectionSet, context.fragmentMap]);\n      aliasMap = info.aliasMap || (info.aliasMap = makeAliasMap(context.selectionSet, context.fragmentMap));\n    }\n\n    var keyObject = context.keyObject = computeKeyObject(object, specifier, aliasMap);\n    return context.typename + \":\" + JSON.stringify(keyObject);\n  };\n}\n\nfunction makeAliasMap(selectionSet, fragmentMap) {\n  var map = Object.create(null);\n  var workQueue = new Set([selectionSet]);\n  workQueue.forEach(function (selectionSet) {\n    selectionSet.selections.forEach(function (selection) {\n      if (isField(selection)) {\n        if (selection.alias) {\n          var responseKey = selection.alias.value;\n          var storeKey = selection.name.value;\n\n          if (storeKey !== responseKey) {\n            var aliases = map.aliases || (map.aliases = Object.create(null));\n            aliases[storeKey] = responseKey;\n          }\n        }\n\n        if (selection.selectionSet) {\n          var subsets = map.subsets || (map.subsets = Object.create(null));\n          subsets[selection.name.value] = makeAliasMap(selection.selectionSet, fragmentMap);\n        }\n      } else {\n        var fragment = getFragmentFromSelection(selection, fragmentMap);\n\n        if (fragment) {\n          workQueue.add(fragment.selectionSet);\n        }\n      }\n    });\n  });\n  return map;\n}\n\nfunction computeKeyObject(response, specifier, aliasMap) {\n  var keyObj = Object.create(null);\n  var prevKey;\n  specifier.forEach(function (s) {\n    if (Array.isArray(s)) {\n      if (typeof prevKey === \"string\") {\n        var subsets = aliasMap && aliasMap.subsets;\n        var subset = subsets && subsets[prevKey];\n        keyObj[prevKey] = computeKeyObject(response[prevKey], s, subset);\n      }\n    } else {\n      var aliases = aliasMap && aliasMap.aliases;\n      var responseName = aliases && aliases[s] || s;\n      process.env.NODE_ENV === \"production\" ? invariant(hasOwn.call(response, responseName), 3) : invariant(hasOwn.call(response, responseName), \"Missing field '\" + responseName + \"' while computing key fields\");\n      keyObj[prevKey = s] = response[responseName];\n    }\n  });\n  return keyObj;\n}","import { wrap } from 'optimism';\nimport { getFragmentQueryDocument } from \"../../utilities/index.js\";\n\nvar ApolloCache = function () {\n  function ApolloCache() {\n    this.getFragmentDoc = wrap(getFragmentQueryDocument);\n  }\n\n  ApolloCache.prototype.recordOptimisticTransaction = function (transaction, optimisticId) {\n    this.performTransaction(transaction, optimisticId);\n  };\n\n  ApolloCache.prototype.transformDocument = function (document) {\n    return document;\n  };\n\n  ApolloCache.prototype.identify = function (object) {\n    return;\n  };\n\n  ApolloCache.prototype.gc = function () {\n    return [];\n  };\n\n  ApolloCache.prototype.modify = function (options) {\n    return false;\n  };\n\n  ApolloCache.prototype.transformForLink = function (document) {\n    return document;\n  };\n\n  ApolloCache.prototype.readQuery = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.read({\n      rootId: options.id || 'ROOT_QUERY',\n      query: options.query,\n      variables: options.variables,\n      optimistic: optimistic\n    });\n  };\n\n  ApolloCache.prototype.readFragment = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.read({\n      query: this.getFragmentDoc(options.fragment, options.fragmentName),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic: optimistic\n    });\n  };\n\n  ApolloCache.prototype.writeQuery = function (options) {\n    return this.write({\n      dataId: options.id || 'ROOT_QUERY',\n      result: options.data,\n      query: options.query,\n      variables: options.variables,\n      broadcast: options.broadcast\n    });\n  };\n\n  ApolloCache.prototype.writeFragment = function (options) {\n    return this.write({\n      dataId: options.id,\n      result: options.data,\n      variables: options.variables,\n      query: this.getFragmentDoc(options.fragment, options.fragmentName),\n      broadcast: options.broadcast\n    });\n  };\n\n  return ApolloCache;\n}();\n\nexport { ApolloCache };","var MissingFieldError = function () {\n  function MissingFieldError(message, path, query, clientOnly, variables) {\n    this.message = message;\n    this.path = path;\n    this.query = query;\n    this.clientOnly = clientOnly;\n    this.variables = variables;\n  }\n\n  return MissingFieldError;\n}();\n\nexport { MissingFieldError };","import { NetworkStatus } from \"./networkStatus.js\";\nimport { compact } from \"../utilities/index.js\";\nimport { invariant } from 'ts-invariant';\n\nvar Reobserver = function () {\n  function Reobserver(observer, options, fetch, shouldFetch) {\n    this.observer = observer;\n    this.options = options;\n    this.fetch = fetch;\n    this.shouldFetch = shouldFetch;\n  }\n\n  Reobserver.prototype.reobserve = function (newOptions, newNetworkStatus) {\n    if (newOptions) {\n      this.updateOptions(newOptions);\n    } else {\n      this.updatePolling();\n    }\n\n    var concast = this.fetch(this.options, newNetworkStatus);\n\n    if (this.concast) {\n      this.concast.removeObserver(this.observer, true);\n    }\n\n    concast.addObserver(this.observer);\n    return (this.concast = concast).promise;\n  };\n\n  Reobserver.prototype.updateOptions = function (newOptions) {\n    Object.assign(this.options, compact(newOptions));\n    this.updatePolling();\n    return this;\n  };\n\n  Reobserver.prototype.stop = function () {\n    if (this.concast) {\n      this.concast.removeObserver(this.observer);\n      delete this.concast;\n    }\n\n    if (this.pollingInfo) {\n      clearTimeout(this.pollingInfo.timeout);\n      this.options.pollInterval = 0;\n      this.updatePolling();\n    }\n  };\n\n  Reobserver.prototype.updatePolling = function () {\n    var _this = this;\n\n    var _a = this,\n        pollingInfo = _a.pollingInfo,\n        pollInterval = _a.options.pollInterval;\n\n    if (!pollInterval) {\n      if (pollingInfo) {\n        clearTimeout(pollingInfo.timeout);\n        delete this.pollingInfo;\n      }\n\n      return;\n    }\n\n    if (pollingInfo && pollingInfo.interval === pollInterval) {\n      return;\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(pollInterval, 20) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n\n    if (this.shouldFetch === false) {\n      return;\n    }\n\n    var info = pollingInfo || (this.pollingInfo = {});\n    info.interval = pollInterval;\n\n    var maybeFetch = function maybeFetch() {\n      if (_this.pollingInfo) {\n        if (_this.shouldFetch && _this.shouldFetch()) {\n          _this.reobserve({\n            fetchPolicy: \"network-only\",\n            nextFetchPolicy: _this.options.fetchPolicy || \"cache-first\"\n          }, NetworkStatus.poll).then(poll, poll);\n        } else {\n          poll();\n        }\n      }\n\n      ;\n    };\n\n    var poll = function poll() {\n      var info = _this.pollingInfo;\n\n      if (info) {\n        clearTimeout(info.timeout);\n        info.timeout = setTimeout(maybeFetch, info.interval);\n      }\n    };\n\n    poll();\n  };\n\n  return Reobserver;\n}();\n\nexport { Reobserver };","import { __assign, __extends } from \"tslib\";\nimport { invariant } from 'ts-invariant';\nimport { equal } from '@wry/equality';\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport { cloneDeep, getOperationDefinition, Observable, iterateObserversSafely, isNonEmptyArray } from \"../utilities/index.js\";\nimport { Reobserver } from \"./Reobserver.js\";\nvar warnedAboutUpdateQuery = false;\n\nvar ObservableQuery = function (_super) {\n  __extends(ObservableQuery, _super);\n\n  function ObservableQuery(_a) {\n    var queryManager = _a.queryManager,\n        queryInfo = _a.queryInfo,\n        options = _a.options;\n\n    var _this = _super.call(this, function (observer) {\n      return _this.onSubscribe(observer);\n    }) || this;\n\n    _this.observers = new Set();\n    _this.subscriptions = new Set();\n    _this.observer = {\n      next: function next(result) {\n        if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n          _this.updateLastResult(result);\n\n          iterateObserversSafely(_this.observers, 'next', result);\n        }\n      },\n      error: function error(_error) {\n        _this.updateLastResult(__assign(__assign({}, _this.lastResult), {\n          error: _error,\n          errors: _error.graphQLErrors,\n          networkStatus: NetworkStatus.error,\n          loading: false\n        }));\n\n        iterateObserversSafely(_this.observers, 'error', _this.lastError = _error);\n      }\n    };\n    _this.isTornDown = false;\n    _this.options = options;\n    _this.queryId = queryManager.generateQueryId();\n    var opDef = getOperationDefinition(options.query);\n    _this.queryName = opDef && opDef.name && opDef.name.value;\n    _this.queryManager = queryManager;\n    _this.queryInfo = queryInfo;\n    return _this;\n  }\n\n  Object.defineProperty(ObservableQuery.prototype, \"variables\", {\n    get: function get() {\n      return this.options.variables;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ObservableQuery.prototype.result = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var observer = {\n        next: function next(result) {\n          resolve(result);\n\n          _this.observers.delete(observer);\n\n          if (!_this.observers.size) {\n            _this.queryManager.removeQuery(_this.queryId);\n          }\n\n          setTimeout(function () {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject\n      };\n\n      var subscription = _this.subscribe(observer);\n    });\n  };\n\n  ObservableQuery.prototype.getCurrentResult = function (saveAsLastResult) {\n    if (saveAsLastResult === void 0) {\n      saveAsLastResult = true;\n    }\n\n    var lastResult = this.lastResult;\n    var networkStatus = this.queryInfo.networkStatus || lastResult && lastResult.networkStatus || NetworkStatus.ready;\n\n    var result = __assign(__assign({}, lastResult), {\n      loading: isNetworkRequestInFlight(networkStatus),\n      networkStatus: networkStatus\n    });\n\n    if (this.isTornDown) {\n      return result;\n    }\n\n    var _a = this.options.fetchPolicy,\n        fetchPolicy = _a === void 0 ? 'cache-first' : _a;\n\n    if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n      delete result.partial;\n    } else if (!result.data || !this.queryManager.transform(this.options.query).hasForcedResolvers) {\n      var diff = this.queryInfo.getDiff();\n      result.data = diff.complete || this.options.returnPartialData ? diff.result : void 0;\n\n      if (diff.complete) {\n        if (result.networkStatus === NetworkStatus.loading && (fetchPolicy === 'cache-first' || fetchPolicy === 'cache-only')) {\n          result.networkStatus = NetworkStatus.ready;\n          result.loading = false;\n        }\n\n        delete result.partial;\n      } else {\n        result.partial = true;\n      }\n    }\n\n    if (saveAsLastResult) {\n      this.updateLastResult(result);\n    }\n\n    return result;\n  };\n\n  ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n    return !equal(this.lastResultSnapshot, newResult);\n  };\n\n  ObservableQuery.prototype.getLastResult = function () {\n    return this.lastResult;\n  };\n\n  ObservableQuery.prototype.getLastError = function () {\n    return this.lastError;\n  };\n\n  ObservableQuery.prototype.resetLastResults = function () {\n    delete this.lastResult;\n    delete this.lastResultSnapshot;\n    delete this.lastError;\n    this.isTornDown = false;\n  };\n\n  ObservableQuery.prototype.resetQueryStoreErrors = function () {\n    this.queryManager.resetErrors(this.queryId);\n  };\n\n  ObservableQuery.prototype.refetch = function (variables) {\n    var reobserveOptions = {\n      pollInterval: 0\n    };\n    var fetchPolicy = this.options.fetchPolicy;\n\n    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'cache-and-network') {\n      reobserveOptions.fetchPolicy = 'network-only';\n      reobserveOptions.nextFetchPolicy = fetchPolicy || \"cache-first\";\n    }\n\n    if (variables && !equal(this.options.variables, variables)) {\n      reobserveOptions.variables = this.options.variables = __assign(__assign({}, this.options.variables), variables);\n    }\n\n    return this.newReobserver(false).reobserve(reobserveOptions, NetworkStatus.refetch);\n  };\n\n  ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n    var _this = this;\n\n    var combinedOptions = __assign(__assign({}, fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), {\n      variables: __assign(__assign({}, this.options.variables), fetchMoreOptions.variables)\n    })), {\n      fetchPolicy: \"no-cache\"\n    });\n\n    var qid = this.queryManager.generateQueryId();\n\n    if (combinedOptions.notifyOnNetworkStatusChange) {\n      this.queryInfo.networkStatus = NetworkStatus.fetchMore;\n      this.observe();\n    }\n\n    return this.queryManager.fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore).then(function (fetchMoreResult) {\n      var data = fetchMoreResult.data;\n      var updateQuery = fetchMoreOptions.updateQuery;\n\n      if (updateQuery) {\n        if (process.env.NODE_ENV !== \"production\" && !warnedAboutUpdateQuery) {\n          process.env.NODE_ENV === \"production\" || invariant.warn(\"The updateQuery callback for fetchMore is deprecated, and will be removed\\nin the next major version of Apollo Client.\\n\\nPlease convert updateQuery functions to field policies with appropriate\\nread and merge functions, or use/adapt a helper function (such as\\nconcatPagination, offsetLimitPagination, or relayStylePagination) from\\n@apollo/client/utilities.\\n\\nThe field policy system handles pagination more effectively than a\\nhand-written updateQuery function, and you only need to define the policy\\nonce, rather than every time you call fetchMore.\");\n          warnedAboutUpdateQuery = true;\n        }\n\n        _this.updateQuery(function (previous) {\n          return updateQuery(previous, {\n            fetchMoreResult: data,\n            variables: combinedOptions.variables\n          });\n        });\n      } else {\n        _this.queryManager.cache.writeQuery({\n          query: combinedOptions.query,\n          variables: combinedOptions.variables,\n          data: data\n        });\n      }\n\n      return fetchMoreResult;\n    }).finally(function () {\n      _this.queryManager.stopQuery(qid);\n\n      _this.reobserve();\n    });\n  };\n\n  ObservableQuery.prototype.subscribeToMore = function (options) {\n    var _this = this;\n\n    var subscription = this.queryManager.startGraphQLSubscription({\n      query: options.document,\n      variables: options.variables,\n      context: options.context\n    }).subscribe({\n      next: function next(subscriptionData) {\n        var updateQuery = options.updateQuery;\n\n        if (updateQuery) {\n          _this.updateQuery(function (previous, _a) {\n            var variables = _a.variables;\n            return updateQuery(previous, {\n              subscriptionData: subscriptionData,\n              variables: variables\n            });\n          });\n        }\n      },\n      error: function error(err) {\n        if (options.onError) {\n          options.onError(err);\n          return;\n        }\n\n        process.env.NODE_ENV === \"production\" || invariant.error('Unhandled GraphQL subscription error', err);\n      }\n    });\n    this.subscriptions.add(subscription);\n    return function () {\n      if (_this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  };\n\n  ObservableQuery.prototype.setOptions = function (newOptions) {\n    return this.reobserve(newOptions);\n  };\n\n  ObservableQuery.prototype.setVariables = function (variables) {\n    if (equal(this.variables, variables)) {\n      return this.observers.size ? this.result() : Promise.resolve();\n    }\n\n    this.options.variables = variables;\n\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    var _a = this.options.fetchPolicy,\n        fetchPolicy = _a === void 0 ? 'cache-first' : _a;\n    var reobserveOptions = {\n      fetchPolicy: fetchPolicy,\n      variables: variables\n    };\n\n    if (fetchPolicy !== 'cache-first' && fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n      reobserveOptions.fetchPolicy = 'cache-and-network';\n      reobserveOptions.nextFetchPolicy = fetchPolicy;\n    }\n\n    return this.reobserve(reobserveOptions, NetworkStatus.setVariables);\n  };\n\n  ObservableQuery.prototype.updateQuery = function (mapFn) {\n    var _a;\n\n    var queryManager = this.queryManager;\n    var result = queryManager.cache.diff({\n      query: this.options.query,\n      variables: this.variables,\n      previousResult: (_a = this.lastResult) === null || _a === void 0 ? void 0 : _a.data,\n      returnPartialData: true,\n      optimistic: false\n    }).result;\n    var newResult = mapFn(result, {\n      variables: this.variables\n    });\n\n    if (newResult) {\n      queryManager.cache.writeQuery({\n        query: this.options.query,\n        data: newResult,\n        variables: this.variables\n      });\n      queryManager.broadcastQueries();\n    }\n  };\n\n  ObservableQuery.prototype.startPolling = function (pollInterval) {\n    this.getReobserver().updateOptions({\n      pollInterval: pollInterval\n    });\n  };\n\n  ObservableQuery.prototype.stopPolling = function () {\n    if (this.reobserver) {\n      this.reobserver.updateOptions({\n        pollInterval: 0\n      });\n    }\n  };\n\n  ObservableQuery.prototype.updateLastResult = function (newResult) {\n    var previousResult = this.lastResult;\n    this.lastResult = newResult;\n    this.lastResultSnapshot = this.queryManager.assumeImmutableResults ? newResult : cloneDeep(newResult);\n\n    if (!isNonEmptyArray(newResult.errors)) {\n      delete this.lastError;\n    }\n\n    return previousResult;\n  };\n\n  ObservableQuery.prototype.onSubscribe = function (observer) {\n    var _this = this;\n\n    if (observer === this.observer) {\n      return function () {};\n    }\n\n    try {\n      var subObserver = observer._subscription._observer;\n\n      if (subObserver && !subObserver.error) {\n        subObserver.error = defaultSubscriptionObserverErrorCallback;\n      }\n    } catch (_a) {}\n\n    var first = !this.observers.size;\n    this.observers.add(observer);\n\n    if (this.lastError) {\n      observer.error && observer.error(this.lastError);\n    } else if (this.lastResult) {\n      observer.next && observer.next(this.lastResult);\n    }\n\n    if (first) {\n      this.reobserve().catch(function (_) {});\n    }\n\n    return function () {\n      if (_this.observers.delete(observer) && !_this.observers.size) {\n        _this.tearDownQuery();\n      }\n    };\n  };\n\n  ObservableQuery.prototype.getReobserver = function () {\n    return this.reobserver || (this.reobserver = this.newReobserver(true));\n  };\n\n  ObservableQuery.prototype.newReobserver = function (shareOptions) {\n    var _this = this;\n\n    var _a = this,\n        queryManager = _a.queryManager,\n        queryId = _a.queryId;\n\n    queryManager.setObservableQuery(this);\n    return new Reobserver(this.observer, shareOptions ? this.options : __assign({}, this.options), function (currentOptions, newNetworkStatus) {\n      queryManager.setObservableQuery(_this);\n      return queryManager.fetchQueryObservable(queryId, currentOptions, newNetworkStatus);\n    }, !queryManager.ssrMode && function () {\n      return !isNetworkRequestInFlight(_this.queryInfo.networkStatus);\n    });\n  };\n\n  ObservableQuery.prototype.reobserve = function (newOptions, newNetworkStatus) {\n    this.isTornDown = false;\n    return this.getReobserver().reobserve(newOptions, newNetworkStatus);\n  };\n\n  ObservableQuery.prototype.observe = function () {\n    this.observer.next(this.getCurrentResult(false));\n  };\n\n  ObservableQuery.prototype.tearDownQuery = function () {\n    var queryManager = this.queryManager;\n\n    if (this.reobserver) {\n      this.reobserver.stop();\n      delete this.reobserver;\n    }\n\n    this.isTornDown = true;\n    this.subscriptions.forEach(function (sub) {\n      return sub.unsubscribe();\n    });\n    this.subscriptions.clear();\n    queryManager.stopQuery(this.queryId);\n    this.observers.clear();\n  };\n\n  return ObservableQuery;\n}(Observable);\n\nexport { ObservableQuery };\n\nfunction defaultSubscriptionObserverErrorCallback(error) {\n  process.env.NODE_ENV === \"production\" || invariant.error('Unhandled error', error.message, error.stack);\n}","import { ApolloLink } from \"./ApolloLink.js\";\nexport var empty = ApolloLink.empty;","import { ApolloLink } from \"./ApolloLink.js\";\nexport var from = ApolloLink.from;","import { ApolloLink } from \"./ApolloLink.js\";\nexport var split = ApolloLink.split;","import { ApolloLink } from \"./ApolloLink.js\";\nexport var concat = ApolloLink.concat;","import { ApolloLink } from \"./ApolloLink.js\";\nexport var execute = ApolloLink.execute;","export var Cache;\n\n(function (Cache) {})(Cache || (Cache = {}));","export { ApolloProvider, ApolloConsumer, getApolloContext, resetApolloContext } from \"./context/index.js\";\nexport * from \"./hooks/index.js\";\nexport { DocumentType, operationName, parser } from \"./parser/index.js\";\nexport * from \"./types/types.js\";","import { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport { parser, operationName } from \"../parser/index.js\";\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n    if (storePrevious === void 0) {\n      storePrevious = false;\n    }\n\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 29) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 30) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nexport { OperationData };","import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { OperationData } from \"./OperationData.js\";\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables) || this.previousOptions.skip !== this.getOptions().skip)) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign(__assign({}, currentResult), {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nexport { SubscriptionData };","import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { DocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { OperationData } from \"./OperationData.js\";\nimport { compact } from \"../../utilities/index.js\";\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      }).catch(function (error) {\n        _this.onMutationError(error, mutationId);\n\n        if (!_this.getOptions().onError) throw error;\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    return [this.runMutation, __assign(__assign({}, result), {\n      client: this.refreshClient().client\n    })];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    return this.refreshClient().client.mutate(compact(this.getOptions(), mutationFunctionOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nexport { MutationData };","import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { ApolloError } from \"../../errors/index.js\";\nimport { NetworkStatus } from \"../../core/index.js\";\nimport { DocumentType } from \"../parser/index.js\";\nimport { OperationData } from \"./OperationData.js\";\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        onNewData = _a.onNewData;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.cleanup();\n\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.onNewData();\n    };\n\n    _this.getQueryResult = function () {\n      var result = _this.observableQueryFields();\n\n      var options = _this.getOptions();\n\n      if (options.skip) {\n        result = __assign(__assign({}, result), {\n          data: undefined,\n          error: undefined,\n          loading: false,\n          called: true\n        });\n      } else if (_this.currentObservable) {\n        var currentResult = _this.currentObservable.getCurrentResult();\n\n        var data = currentResult.data,\n            loading = currentResult.loading,\n            partial = currentResult.partial,\n            networkStatus = currentResult.networkStatus,\n            errors = currentResult.errors;\n        var error = currentResult.error;\n\n        if (errors && errors.length > 0) {\n          error = new ApolloError({\n            graphQLErrors: errors\n          });\n        }\n\n        result = __assign(__assign({}, result), {\n          data: data,\n          loading: loading,\n          networkStatus: networkStatus,\n          error: error,\n          called: true\n        });\n\n        if (loading) {} else if (error) {\n          Object.assign(result, {\n            data: (_this.currentObservable.getLastResult() || {}).data\n          });\n        } else {\n          var fetchPolicy = _this.currentObservable.options.fetchPolicy;\n          var partialRefetch = options.partialRefetch;\n\n          if (partialRefetch && partial && (!data || Object.keys(data).length === 0) && fetchPolicy !== 'cache-only') {\n            Object.assign(result, {\n              loading: true,\n              networkStatus: NetworkStatus.loading\n            });\n            result.refetch();\n            return result;\n          }\n        }\n      }\n\n      result.client = _this.client;\n\n      _this.setOptions(options, true);\n\n      _this.previousData.loading = _this.previousData.result && _this.previousData.result.loading || false;\n      _this.previousData.result = result;\n      _this.currentObservable && _this.currentObservable.resetQueryStoreErrors();\n      return result;\n    };\n\n    _this.obsRefetch = function (variables) {\n      return _this.currentObservable.refetch(variables);\n    };\n\n    _this.obsFetchMore = function (fetchMoreOptions) {\n      return _this.currentObservable.fetchMore(fetchMoreOptions);\n    };\n\n    _this.obsUpdateQuery = function (mapFn) {\n      return _this.currentObservable.updateQuery(mapFn);\n    };\n\n    _this.obsStartPolling = function (pollInterval) {\n      var _a;\n\n      (_a = _this.currentObservable) === null || _a === void 0 ? void 0 : _a.startPolling(pollInterval);\n    };\n\n    _this.obsStopPolling = function () {\n      var _a;\n\n      (_a = _this.currentObservable) === null || _a === void 0 ? void 0 : _a.stopPolling();\n    };\n\n    _this.obsSubscribeToMore = function (options) {\n      return _this.currentObservable.subscribeToMore(options);\n    };\n\n    _this.onNewData = onNewData;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    var _this = this;\n\n    var options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    return new Promise(function (resolve) {\n      return _this.startQuerySubscription(resolve);\n    });\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    if (this.lazyOptions) {\n      options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n      options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n    }\n\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  };\n\n  QueryData.prototype.ssrInitiated = function () {\n    return this.context && this.context.renderPromises;\n  };\n\n  QueryData.prototype.getExecuteResult = function () {\n    var result = this.getQueryResult();\n    this.startQuerySubscription();\n    return result;\n  };\n\n  ;\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var ssrDisabled = this.getOptions().ssr === false;\n    var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    var ssrLoading = __assign({\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client\n    }, this.observableQueryFields());\n\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previousData.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    var result;\n\n    if (this.ssrInitiated()) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getQueryResult) || ssrLoading;\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    var options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    var displayName = options.displayName || 'Query';\n\n    if (this.ssrInitiated() && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return __assign(__assign({}, options), {\n      displayName: displayName,\n      context: options.context\n    });\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    if (this.ssrInitiated()) {\n      this.currentObservable = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), {\n        children: null\n      });\n      this.currentObservable = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n\n      if (this.ssrInitiated()) {\n        this.context.renderPromises.registerSSRObservable(this.currentObservable, observableQueryOptions);\n      }\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    if (this.getOptions().skip) return;\n\n    var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.setOptions(newObservableQueryOptions).catch(function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function (onNewData) {\n    var _this = this;\n\n    if (onNewData === void 0) {\n      onNewData = this.onNewData;\n    }\n\n    if (this.currentSubscription || this.getOptions().skip) return;\n    this.currentSubscription = this.currentObservable.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading === loading && previousResult.networkStatus === networkStatus && equal(previousResult.data, data)) {\n          return;\n        }\n\n        onNewData();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading || !equal(_error, _this.previousData.error)) {\n          _this.previousData.error = _error;\n          onNewData();\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var currentObservable = this.currentObservable;\n\n    if (currentObservable) {\n      var lastError = currentObservable.getLastError();\n      var lastResult = currentObservable.getLastResult();\n      currentObservable.resetLastResults();\n      this.startQuerySubscription();\n      Object.assign(currentObservable, {\n        lastError: lastError,\n        lastResult: lastResult\n      });\n    }\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    if (!this.currentObservable || !this.previousData.result) return;\n    var _a = this.previousData.result,\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError,\n          skip = _b.skip;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error && !skip) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentSubscription) {\n      this.currentSubscription.unsubscribe();\n      delete this.currentSubscription;\n    }\n  };\n\n  QueryData.prototype.observableQueryFields = function () {\n    var _a;\n\n    return {\n      variables: (_a = this.currentObservable) === null || _a === void 0 ? void 0 : _a.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    };\n  };\n\n  return QueryData;\n}(OperationData);\n\nexport { QueryData };","import { __assign } from \"tslib\";\nimport { useContext, useEffect, useReducer, useRef } from 'react';\nimport { QueryData } from \"../../data/index.js\";\nimport { useDeepMemo } from \"./useDeepMemo.js\";\nimport { getApolloContext } from \"../../context/index.js\";\nexport function useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n  var queryData = queryDataRef.current || new QueryData({\n    options: updatedOptions,\n    context: context,\n    onNewData: function onNewData() {\n      if (!queryData.ssrInitiated()) {\n        Promise.resolve().then(forceUpdate);\n      } else {\n        forceUpdate();\n      }\n    }\n  });\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  if (queryData.ssrInitiated() && !queryDataRef.current) {\n    queryDataRef.current = queryData;\n  }\n\n  var memo = {\n    options: __assign(__assign({}, updatedOptions), {\n      onError: undefined,\n      onCompleted: undefined\n    }),\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  var queryResult = lazy ? result[1] : result;\n  useEffect(function () {\n    if (!queryDataRef.current) {\n      queryDataRef.current = queryData;\n    }\n\n    return function () {\n      return queryData.cleanup();\n    };\n  }, []);\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, [queryResult.loading, queryResult.networkStatus, queryResult.error, queryResult.data]);\n  return result;\n}","import { useRef } from 'react';\nimport { equal } from '@wry/equality';\nexport function useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}","import { useBaseQuery } from \"./utils/useBaseQuery.js\";\nexport function useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}","import { __assign } from \"tslib\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { MutationData } from \"../data/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nexport function useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}","import { useBaseQuery } from \"./utils/useBaseQuery.js\";\nexport function useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}","import { __assign } from \"tslib\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { SubscriptionData } from \"../data/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nexport function useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _a = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}","import { useState, useEffect } from 'react';\nexport function useReactiveVar(rv) {\n  var value = rv();\n  var mute = rv.onNextChange(useState(value)[1]);\n  useEffect(function () {\n    return mute;\n  }, []);\n  return value;\n}","export * from \"./useApolloClient.js\";\nexport * from \"./useLazyQuery.js\";\nexport * from \"./useMutation.js\";\nexport * from \"./useQuery.js\";\nexport * from \"./useSubscription.js\";\nexport * from \"./useReactiveVar.js\";","var MutationStore = function () {\n  function MutationStore() {\n    this.store = {};\n  }\n\n  MutationStore.prototype.getStore = function () {\n    return this.store;\n  };\n\n  MutationStore.prototype.get = function (mutationId) {\n    return this.store[mutationId];\n  };\n\n  MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n    this.store[mutationId] = {\n      mutation: mutation,\n      variables: variables || {},\n      loading: true,\n      error: null\n    };\n  };\n\n  MutationStore.prototype.markMutationError = function (mutationId, error) {\n    var mutation = this.store[mutationId];\n\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = error;\n    }\n  };\n\n  MutationStore.prototype.markMutationResult = function (mutationId) {\n    var mutation = this.store[mutationId];\n\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = null;\n    }\n  };\n\n  MutationStore.prototype.reset = function () {\n    this.store = {};\n  };\n\n  return MutationStore;\n}();\n\nexport { MutationStore };","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { visit, BREAK } from 'graphql/language/visitor';\nimport { invariant } from 'ts-invariant';\nimport { argumentsObjectFromField, buildQueryFromSelectionSet, createFragmentMap, getFragmentDefinitions, getMainDefinition, hasDirectives, isField, isInlineFragment, mergeDeep, mergeDeepArray, removeClientSetsFromDocument, resultKeyNameFromField, shouldInclude } from \"../utilities/index.js\";\nimport { cacheSlot } from \"../cache/index.js\";\n\nvar LocalState = function () {\n  function LocalState(_a) {\n    var cache = _a.cache,\n        client = _a.client,\n        resolvers = _a.resolvers,\n        fragmentMatcher = _a.fragmentMatcher;\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  LocalState.prototype.addResolvers = function (resolvers) {\n    var _this = this;\n\n    this.resolvers = this.resolvers || {};\n\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(function (resolverGroup) {\n        _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  };\n\n  LocalState.prototype.setResolvers = function (resolvers) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  };\n\n  LocalState.prototype.getResolvers = function () {\n    return this.resolvers || {};\n  };\n\n  LocalState.prototype.runResolvers = function (_a) {\n    var document = _a.document,\n        remoteResult = _a.remoteResult,\n        context = _a.context,\n        variables = _a.variables,\n        _b = _a.onlyRunForcedResolvers,\n        onlyRunForcedResolvers = _b === void 0 ? false : _b;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_c) {\n        if (document) {\n          return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) {\n            return __assign(__assign({}, remoteResult), {\n              data: localResult.result\n            });\n          })];\n        }\n\n        return [2, remoteResult];\n      });\n    });\n  };\n\n  LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  };\n\n  LocalState.prototype.getFragmentMatcher = function () {\n    return this.fragmentMatcher;\n  };\n\n  LocalState.prototype.clientQuery = function (document) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n    }\n\n    return null;\n  };\n\n  LocalState.prototype.serverQuery = function (document) {\n    return removeClientSetsFromDocument(document);\n  };\n\n  LocalState.prototype.prepareContext = function (context) {\n    var cache = this.cache;\n    return __assign(__assign({}, context), {\n      cache: cache,\n      getCacheKey: function getCacheKey(obj) {\n        return cache.identify(obj);\n      }\n    });\n  };\n\n  LocalState.prototype.addExportedVariables = function (document, variables, context) {\n    if (variables === void 0) {\n      variables = {};\n    }\n\n    if (context === void 0) {\n      context = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (document) {\n          return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) {\n            return __assign(__assign({}, variables), data.exportedVariables);\n          })];\n        }\n\n        return [2, __assign({}, variables)];\n      });\n    });\n  };\n\n  LocalState.prototype.shouldForceResolvers = function (document) {\n    var forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter: function enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(function (arg) {\n              return arg.name.value === 'always' && arg.value.kind === 'BooleanValue' && arg.value.value === true;\n            });\n\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        }\n      }\n    });\n    return forceResolvers;\n  };\n\n  LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables: variables,\n      returnPartialData: true,\n      optimistic: false\n    }).result;\n  };\n\n  LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (variables === void 0) {\n      variables = {};\n    }\n\n    if (fragmentMatcher === void 0) {\n      fragmentMatcher = function fragmentMatcher() {\n        return true;\n      };\n    }\n\n    if (onlyRunForcedResolvers === void 0) {\n      onlyRunForcedResolvers = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n\n      return __generator(this, function (_b) {\n        mainDefinition = getMainDefinition(document);\n        fragments = getFragmentDefinitions(document);\n        fragmentMap = createFragmentMap(fragments);\n        definitionOperation = mainDefinition.operation;\n        defaultOperationType = definitionOperation ? definitionOperation.charAt(0).toUpperCase() + definitionOperation.slice(1) : 'Query';\n        _a = this, cache = _a.cache, client = _a.client;\n        execContext = {\n          fragmentMap: fragmentMap,\n          context: __assign(__assign({}, context), {\n            cache: cache,\n            client: client\n          }),\n          variables: variables,\n          fragmentMatcher: fragmentMatcher,\n          defaultOperationType: defaultOperationType,\n          exportedVariables: {},\n          onlyRunForcedResolvers: onlyRunForcedResolvers\n        };\n        return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) {\n          return {\n            result: result,\n            exportedVariables: execContext.exportedVariables\n          };\n        })];\n      });\n    });\n  };\n\n  LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fragmentMap, context, variables, resultsToMerge, execute;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n        resultsToMerge = [rootValue];\n\n        execute = function execute(selection) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var fragment, typeCondition;\n            return __generator(this, function (_a) {\n              if (!shouldInclude(selection, variables)) {\n                return [2];\n              }\n\n              if (isField(selection)) {\n                return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                  var _a;\n\n                  if (typeof fieldResult !== 'undefined') {\n                    resultsToMerge.push((_a = {}, _a[resultKeyNameFromField(selection)] = fieldResult, _a));\n                  }\n                })];\n              }\n\n              if (isInlineFragment(selection)) {\n                fragment = selection;\n              } else {\n                fragment = fragmentMap[selection.name.value];\n                process.env.NODE_ENV === \"production\" ? invariant(fragment, 11) : invariant(fragment, \"No fragment named \" + selection.name.value);\n              }\n\n              if (fragment && fragment.typeCondition) {\n                typeCondition = fragment.typeCondition.name.value;\n\n                if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                  return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                    resultsToMerge.push(fragmentResult);\n                  })];\n                }\n              }\n\n              return [2];\n            });\n          });\n        };\n\n        return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n          return mergeDeepArray(resultsToMerge);\n        })];\n      });\n    });\n  };\n\n  LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n    return __awaiter(this, void 0, void 0, function () {\n      var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        variables = execContext.variables;\n        fieldName = field.name.value;\n        aliasedFieldName = resultKeyNameFromField(field);\n        aliasUsed = fieldName !== aliasedFieldName;\n        defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n        resultPromise = Promise.resolve(defaultResult);\n\n        if (!execContext.onlyRunForcedResolvers || this.shouldForceResolvers(field)) {\n          resolverType = rootValue.__typename || execContext.defaultOperationType;\n          resolverMap = this.resolvers && this.resolvers[resolverType];\n\n          if (resolverMap) {\n            resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n\n            if (resolve) {\n              resultPromise = Promise.resolve(cacheSlot.withValue(this.cache, resolve, [rootValue, argumentsObjectFromField(field, variables), execContext.context, {\n                field: field,\n                fragmentMap: execContext.fragmentMap\n              }]));\n            }\n          }\n        }\n\n        return [2, resultPromise.then(function (result) {\n          if (result === void 0) {\n            result = defaultResult;\n          }\n\n          if (field.directives) {\n            field.directives.forEach(function (directive) {\n              if (directive.name.value === 'export' && directive.arguments) {\n                directive.arguments.forEach(function (arg) {\n                  if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                    execContext.exportedVariables[arg.value.value] = result;\n                  }\n                });\n              }\n            });\n          }\n\n          if (!field.selectionSet) {\n            return result;\n          }\n\n          if (result == null) {\n            return result;\n          }\n\n          if (Array.isArray(result)) {\n            return _this.resolveSubSelectedArray(field, result, execContext);\n          }\n\n          if (field.selectionSet) {\n            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n          }\n        })];\n      });\n    });\n  };\n\n  LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n    var _this = this;\n\n    return Promise.all(result.map(function (item) {\n      if (item === null) {\n        return null;\n      }\n\n      if (Array.isArray(item)) {\n        return _this.resolveSubSelectedArray(field, item, execContext);\n      }\n\n      if (field.selectionSet) {\n        return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n      }\n    }));\n  };\n\n  return LocalState;\n}();\n\nexport { LocalState };","import { equal } from \"@wry/equality\";\nimport { isNonEmptyArray, graphQLResultHasError, canUseWeakMap } from \"../utilities/index.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nvar destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();\n\nfunction wrapDestructiveCacheMethod(cache, methodName) {\n  var original = cache[methodName];\n\n  if (typeof original === \"function\") {\n    cache[methodName] = function () {\n      destructiveMethodCounts.set(cache, (destructiveMethodCounts.get(cache) + 1) % 1e15);\n      return original.apply(this, arguments);\n    };\n  }\n}\n\nvar QueryInfo = function () {\n  function QueryInfo(cache) {\n    this.cache = cache;\n    this.listeners = new Set();\n    this.document = null;\n    this.lastRequestId = 1;\n    this.subscriptions = new Set();\n    this.dirty = false;\n    this.diff = null;\n    this.observableQuery = null;\n\n    if (!destructiveMethodCounts.has(cache)) {\n      destructiveMethodCounts.set(cache, 0);\n      wrapDestructiveCacheMethod(cache, \"evict\");\n      wrapDestructiveCacheMethod(cache, \"modify\");\n    }\n  }\n\n  QueryInfo.prototype.init = function (query) {\n    var networkStatus = query.networkStatus || NetworkStatus.loading;\n\n    if (this.variables && this.networkStatus !== NetworkStatus.loading && !equal(this.variables, query.variables)) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n\n    if (!equal(query.variables, this.variables)) {\n      this.diff = null;\n    }\n\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus: networkStatus\n    });\n\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n\n    return this;\n  };\n\n  QueryInfo.prototype.getDiff = function (variables) {\n    if (variables === void 0) {\n      variables = this.variables;\n    }\n\n    if (this.diff && equal(variables, this.variables)) {\n      return this.diff;\n    }\n\n    this.updateWatch(this.variables = variables);\n    return this.diff = this.cache.diff({\n      query: this.document,\n      variables: variables,\n      returnPartialData: true,\n      optimistic: true\n    });\n  };\n\n  QueryInfo.prototype.setDiff = function (diff) {\n    var _this = this;\n\n    var oldDiff = this.diff;\n    this.diff = diff;\n\n    if (!this.dirty && (diff && diff.result) !== (oldDiff && oldDiff.result)) {\n      this.dirty = true;\n\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(function () {\n          return _this.notify();\n        }, 0);\n      }\n    }\n  };\n\n  QueryInfo.prototype.setObservableQuery = function (oq) {\n    var _this = this;\n\n    if (oq === this.observableQuery) return;\n\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n\n    this.observableQuery = oq;\n\n    if (oq) {\n      oq[\"queryInfo\"] = this;\n      this.listeners.add(this.oqListener = function () {\n        if (_this.getDiff().fromOptimisticTransaction) {\n          oq[\"observe\"]();\n        } else {\n          oq.reobserve();\n        }\n      });\n    } else {\n      delete this.oqListener;\n    }\n  };\n\n  QueryInfo.prototype.notify = function () {\n    var _this = this;\n\n    if (this.notifyTimeout) {\n      clearTimeout(this.notifyTimeout);\n      this.notifyTimeout = void 0;\n    }\n\n    if (this.shouldNotify()) {\n      this.listeners.forEach(function (listener) {\n        return listener(_this);\n      });\n    }\n\n    this.dirty = false;\n  };\n\n  QueryInfo.prototype.shouldNotify = function () {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n\n    if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {\n      var fetchPolicy = this.observableQuery.options.fetchPolicy;\n\n      if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  QueryInfo.prototype.stop = function () {\n    this.cancel();\n    delete this.cancel;\n    var oq = this.observableQuery;\n    if (oq) oq.stopPolling();\n  };\n\n  QueryInfo.prototype.cancel = function () {};\n\n  QueryInfo.prototype.updateWatch = function (variables) {\n    var _this = this;\n\n    if (variables === void 0) {\n      variables = this.variables;\n    }\n\n    var oq = this.observableQuery;\n\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return;\n    }\n\n    if (!this.lastWatch || this.lastWatch.query !== this.document || !equal(variables, this.lastWatch.variables)) {\n      this.cancel();\n      this.cancel = this.cache.watch(this.lastWatch = {\n        query: this.document,\n        variables: variables,\n        optimistic: true,\n        callback: function callback(diff) {\n          return _this.setDiff(diff);\n        }\n      });\n    }\n  };\n\n  QueryInfo.prototype.shouldWrite = function (result, variables) {\n    var lastWrite = this.lastWrite;\n    return !(lastWrite && lastWrite.dmCount === destructiveMethodCounts.get(this.cache) && equal(variables, lastWrite.variables) && equal(result.data, lastWrite.result.data));\n  };\n\n  QueryInfo.prototype.markResult = function (result, options, allowCacheWrite) {\n    var _this = this;\n\n    this.graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n\n    if (options.fetchPolicy === 'no-cache') {\n      this.diff = {\n        result: result.data,\n        complete: true\n      };\n    } else if (allowCacheWrite) {\n      if (shouldWriteResult(result, options.errorPolicy)) {\n        this.cache.performTransaction(function (cache) {\n          if (_this.shouldWrite(result, options.variables)) {\n            cache.writeQuery({\n              query: _this.document,\n              data: result.data,\n              variables: options.variables\n            });\n            _this.lastWrite = {\n              result: result,\n              variables: options.variables,\n              dmCount: destructiveMethodCounts.get(_this.cache)\n            };\n          } else {\n            if (_this.diff && _this.diff.complete) {\n              result.data = _this.diff.result;\n              return;\n            }\n          }\n\n          var diff = cache.diff({\n            query: _this.document,\n            variables: options.variables,\n            returnPartialData: true,\n            optimistic: true\n          });\n\n          _this.updateWatch(options.variables);\n\n          _this.diff = diff;\n\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      } else {\n        this.lastWrite = void 0;\n      }\n    }\n  };\n\n  QueryInfo.prototype.markReady = function () {\n    this.networkError = null;\n    return this.networkStatus = NetworkStatus.ready;\n  };\n\n  QueryInfo.prototype.markError = function (error) {\n    this.networkStatus = NetworkStatus.error;\n    this.lastWrite = void 0;\n\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n\n    return error;\n  };\n\n  return QueryInfo;\n}();\n\nexport { QueryInfo };\nexport function shouldWriteResult(result, errorPolicy) {\n  if (errorPolicy === void 0) {\n    errorPolicy = \"none\";\n  }\n\n  var ignoreErrors = errorPolicy === \"ignore\" || errorPolicy === \"all\";\n  var writeWithErrors = !graphQLResultHasError(result);\n\n  if (!writeWithErrors && ignoreErrors && result.data) {\n    writeWithErrors = true;\n  }\n\n  return writeWithErrors;\n}","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { equal } from '@wry/equality';\nimport { execute } from \"../link/core/index.js\";\nimport { getDefaultValues, getOperationDefinition, getOperationName, hasClientExports, graphQLResultHasError, removeConnectionDirectiveFromDocument, canUseWeakMap, Observable, asyncMap, isNonEmptyArray, Concast } from \"../utilities/index.js\";\nimport { ApolloError, isApolloError } from \"../errors/index.js\";\nimport { MutationStore } from \"./MutationStore.js\";\nimport { ObservableQuery } from \"./ObservableQuery.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport { LocalState } from \"./LocalState.js\";\nimport { QueryInfo, shouldWriteResult } from \"./QueryInfo.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar QueryManager = function () {\n  function QueryManager(_a) {\n    var cache = _a.cache,\n        link = _a.link,\n        _b = _a.queryDeduplication,\n        queryDeduplication = _b === void 0 ? false : _b,\n        _c = _a.onBroadcast,\n        onBroadcast = _c === void 0 ? function () {\n      return undefined;\n    } : _c,\n        _d = _a.ssrMode,\n        ssrMode = _d === void 0 ? false : _d,\n        _e = _a.clientAwareness,\n        clientAwareness = _e === void 0 ? {} : _e,\n        localState = _a.localState,\n        assumeImmutableResults = _a.assumeImmutableResults;\n    this.mutationStore = new MutationStore();\n    this.clientAwareness = {};\n    this.queries = new Map();\n    this.fetchCancelFns = new Map();\n    this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n    this.queryIdCounter = 1;\n    this.requestIdCounter = 1;\n    this.mutationIdCounter = 1;\n    this.inFlightLinkObservables = new Map();\n    this.cache = cache;\n    this.link = link;\n    this.queryDeduplication = queryDeduplication;\n    this.onBroadcast = onBroadcast;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({\n      cache: cache\n    });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = !!assumeImmutableResults;\n  }\n\n  QueryManager.prototype.stop = function () {\n    var _this = this;\n\n    this.queries.forEach(function (_info, queryId) {\n      _this.stopQueryNoBroadcast(queryId);\n    });\n    this.cancelPendingFetches(process.env.NODE_ENV === \"production\" ? new InvariantError(12) : new InvariantError('QueryManager stopped while query was in flight'));\n  };\n\n  QueryManager.prototype.cancelPendingFetches = function (error) {\n    this.fetchCancelFns.forEach(function (cancel) {\n      return cancel(error);\n    });\n    this.fetchCancelFns.clear();\n  };\n\n  QueryManager.prototype.mutate = function (_a) {\n    var mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        updateQueriesByName = _a.updateQueries,\n        _b = _a.refetchQueries,\n        refetchQueries = _b === void 0 ? [] : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        updateWithProxyFn = _a.update,\n        _d = _a.errorPolicy,\n        errorPolicy = _d === void 0 ? 'none' : _d,\n        fetchPolicy = _a.fetchPolicy,\n        _e = _a.context,\n        context = _e === void 0 ? {} : _e;\n    return __awaiter(this, void 0, void 0, function () {\n      var mutationId, generateUpdateQueriesInfo, optimistic_1, self;\n\n      var _this = this;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            process.env.NODE_ENV === \"production\" ? invariant(mutation, 13) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n            process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache', 14) : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n            mutationId = this.generateMutationId();\n            mutation = this.transform(mutation).document;\n            variables = this.getVariables(mutation, variables);\n            if (!this.transform(mutation).hasClientExports) return [3, 2];\n            return [4, this.localState.addExportedVariables(mutation, variables, context)];\n\n          case 1:\n            variables = _f.sent();\n            _f.label = 2;\n\n          case 2:\n            generateUpdateQueriesInfo = function generateUpdateQueriesInfo() {\n              var ret = {};\n\n              if (updateQueriesByName) {\n                _this.queries.forEach(function (_a, queryId) {\n                  var observableQuery = _a.observableQuery;\n\n                  if (observableQuery) {\n                    var queryName = observableQuery.queryName;\n\n                    if (queryName && hasOwnProperty.call(updateQueriesByName, queryName)) {\n                      ret[queryId] = {\n                        updater: updateQueriesByName[queryName],\n                        queryInfo: _this.queries.get(queryId)\n                      };\n                    }\n                  }\n                });\n              }\n\n              return ret;\n            };\n\n            this.mutationStore.initMutation(mutationId, mutation, variables);\n\n            if (optimisticResponse) {\n              optimistic_1 = typeof optimisticResponse === 'function' ? optimisticResponse(variables) : optimisticResponse;\n              this.cache.recordOptimisticTransaction(function (cache) {\n                try {\n                  markMutationResult({\n                    mutationId: mutationId,\n                    result: {\n                      data: optimistic_1\n                    },\n                    document: mutation,\n                    variables: variables,\n                    errorPolicy: errorPolicy,\n                    queryUpdatersById: generateUpdateQueriesInfo(),\n                    update: updateWithProxyFn\n                  }, cache);\n                } catch (error) {\n                  process.env.NODE_ENV === \"production\" || invariant.error(error);\n                }\n              }, mutationId);\n            }\n\n            this.broadcastQueries();\n            self = this;\n            return [2, new Promise(function (resolve, reject) {\n              var storeResult;\n              var error;\n              self.getObservableFromLink(mutation, __assign(__assign({}, context), {\n                optimisticResponse: optimisticResponse\n              }), variables, false).subscribe({\n                next: function next(result) {\n                  if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                    error = new ApolloError({\n                      graphQLErrors: result.errors\n                    });\n                    return;\n                  }\n\n                  self.mutationStore.markMutationResult(mutationId);\n\n                  if (fetchPolicy !== 'no-cache') {\n                    try {\n                      markMutationResult({\n                        mutationId: mutationId,\n                        result: result,\n                        document: mutation,\n                        variables: variables,\n                        errorPolicy: errorPolicy,\n                        queryUpdatersById: generateUpdateQueriesInfo(),\n                        update: updateWithProxyFn\n                      }, self.cache);\n                    } catch (e) {\n                      error = new ApolloError({\n                        networkError: e\n                      });\n                      return;\n                    }\n                  }\n\n                  storeResult = result;\n                },\n                error: function error(err) {\n                  self.mutationStore.markMutationError(mutationId, err);\n\n                  if (optimisticResponse) {\n                    self.cache.removeOptimistic(mutationId);\n                  }\n\n                  self.broadcastQueries();\n                  reject(new ApolloError({\n                    networkError: err\n                  }));\n                },\n                complete: function complete() {\n                  if (error) {\n                    self.mutationStore.markMutationError(mutationId, error);\n                  }\n\n                  if (optimisticResponse) {\n                    self.cache.removeOptimistic(mutationId);\n                  }\n\n                  self.broadcastQueries();\n\n                  if (error) {\n                    reject(error);\n                    return;\n                  }\n\n                  if (typeof refetchQueries === 'function') {\n                    refetchQueries = refetchQueries(storeResult);\n                  }\n\n                  var refetchQueryPromises = [];\n\n                  if (isNonEmptyArray(refetchQueries)) {\n                    refetchQueries.forEach(function (refetchQuery) {\n                      if (typeof refetchQuery === 'string') {\n                        self.queries.forEach(function (_a) {\n                          var observableQuery = _a.observableQuery;\n\n                          if (observableQuery && observableQuery.queryName === refetchQuery) {\n                            refetchQueryPromises.push(observableQuery.refetch());\n                          }\n                        });\n                      } else {\n                        var queryOptions = {\n                          query: refetchQuery.query,\n                          variables: refetchQuery.variables,\n                          fetchPolicy: 'network-only'\n                        };\n\n                        if (refetchQuery.context) {\n                          queryOptions.context = refetchQuery.context;\n                        }\n\n                        refetchQueryPromises.push(self.query(queryOptions));\n                      }\n                    });\n                  }\n\n                  Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                    if (errorPolicy === 'ignore' && storeResult && graphQLResultHasError(storeResult)) {\n                      delete storeResult.errors;\n                    }\n\n                    resolve(storeResult);\n                  }, reject);\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  QueryManager.prototype.fetchQuery = function (queryId, options, networkStatus) {\n    return this.fetchQueryObservable(queryId, options, networkStatus).promise;\n  };\n\n  QueryManager.prototype.getQueryStore = function () {\n    var store = Object.create(null);\n    this.queries.forEach(function (info, queryId) {\n      store[queryId] = {\n        variables: info.variables,\n        networkStatus: info.networkStatus,\n        networkError: info.networkError,\n        graphQLErrors: info.graphQLErrors\n      };\n    });\n    return store;\n  };\n\n  QueryManager.prototype.resetErrors = function (queryId) {\n    var queryInfo = this.queries.get(queryId);\n\n    if (queryInfo) {\n      queryInfo.networkError = undefined;\n      queryInfo.graphQLErrors = [];\n    }\n  };\n\n  QueryManager.prototype.transform = function (document) {\n    var transformCache = this.transformCache;\n\n    if (!transformCache.has(document)) {\n      var transformed = this.cache.transformDocument(document);\n      var forLink = removeConnectionDirectiveFromDocument(this.cache.transformForLink(transformed));\n      var clientQuery = this.localState.clientQuery(transformed);\n      var serverQuery = forLink && this.localState.serverQuery(forLink);\n      var cacheEntry_1 = {\n        document: transformed,\n        hasClientExports: hasClientExports(transformed),\n        hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n        clientQuery: clientQuery,\n        serverQuery: serverQuery,\n        defaultVars: getDefaultValues(getOperationDefinition(transformed))\n      };\n\n      var add = function add(doc) {\n        if (doc && !transformCache.has(doc)) {\n          transformCache.set(doc, cacheEntry_1);\n        }\n      };\n\n      add(document);\n      add(transformed);\n      add(clientQuery);\n      add(serverQuery);\n    }\n\n    return transformCache.get(document);\n  };\n\n  QueryManager.prototype.getVariables = function (document, variables) {\n    return __assign(__assign({}, this.transform(document).defaultVars), variables);\n  };\n\n  QueryManager.prototype.watchQuery = function (options) {\n    options = __assign(__assign({}, options), {\n      variables: this.getVariables(options.query, options.variables)\n    });\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    var queryInfo = new QueryInfo(this.cache);\n    var observable = new ObservableQuery({\n      queryManager: this,\n      queryInfo: queryInfo,\n      options: options\n    });\n    this.queries.set(observable.queryId, queryInfo);\n    queryInfo.init({\n      document: options.query,\n      observableQuery: observable,\n      variables: options.variables\n    });\n    return observable;\n  };\n\n  QueryManager.prototype.query = function (options) {\n    var _this = this;\n\n    process.env.NODE_ENV === \"production\" ? invariant(options.query, 15) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' + 'in the query option.');\n    process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document', 16) : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n    process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData, 17) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n    process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval, 18) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n    var queryId = this.generateQueryId();\n    return this.fetchQuery(queryId, options).finally(function () {\n      return _this.stopQuery(queryId);\n    });\n  };\n\n  QueryManager.prototype.generateQueryId = function () {\n    return String(this.queryIdCounter++);\n  };\n\n  QueryManager.prototype.generateRequestId = function () {\n    return this.requestIdCounter++;\n  };\n\n  QueryManager.prototype.generateMutationId = function () {\n    return String(this.mutationIdCounter++);\n  };\n\n  QueryManager.prototype.stopQueryInStore = function (queryId) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  };\n\n  QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n    var queryInfo = this.queries.get(queryId);\n    if (queryInfo) queryInfo.stop();\n  };\n\n  QueryManager.prototype.clearStore = function () {\n    this.cancelPendingFetches(process.env.NODE_ENV === \"production\" ? new InvariantError(19) : new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n    this.queries.forEach(function (queryInfo) {\n      if (queryInfo.observableQuery) {\n        queryInfo.networkStatus = NetworkStatus.loading;\n      } else {\n        queryInfo.stop();\n      }\n    });\n    this.mutationStore.reset();\n    return this.cache.reset();\n  };\n\n  QueryManager.prototype.resetStore = function () {\n    var _this = this;\n\n    return this.clearStore().then(function () {\n      return _this.reFetchObservableQueries();\n    });\n  };\n\n  QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n    var _this = this;\n\n    if (includeStandby === void 0) {\n      includeStandby = false;\n    }\n\n    var observableQueryPromises = [];\n    this.queries.forEach(function (_a, queryId) {\n      var observableQuery = _a.observableQuery;\n\n      if (observableQuery) {\n        var fetchPolicy = observableQuery.options.fetchPolicy;\n        observableQuery.resetLastResults();\n\n        if (fetchPolicy !== 'cache-only' && (includeStandby || fetchPolicy !== 'standby')) {\n          observableQueryPromises.push(observableQuery.refetch());\n        }\n\n        _this.getQuery(queryId).setDiff(null);\n      }\n    });\n    this.broadcastQueries();\n    return Promise.all(observableQueryPromises);\n  };\n\n  QueryManager.prototype.setObservableQuery = function (observableQuery) {\n    this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n  };\n\n  QueryManager.prototype.startGraphQLSubscription = function (_a) {\n    var _this = this;\n\n    var query = _a.query,\n        fetchPolicy = _a.fetchPolicy,\n        errorPolicy = _a.errorPolicy,\n        variables = _a.variables,\n        _b = _a.context,\n        context = _b === void 0 ? {} : _b;\n    query = this.transform(query).document;\n    variables = this.getVariables(query, variables);\n\n    var makeObservable = function makeObservable(variables) {\n      return _this.getObservableFromLink(query, context, variables, false).map(function (result) {\n        if (fetchPolicy !== 'no-cache') {\n          if (shouldWriteResult(result, errorPolicy)) {\n            _this.cache.write({\n              query: query,\n              result: result.data,\n              dataId: 'ROOT_SUBSCRIPTION',\n              variables: variables\n            });\n          }\n\n          _this.broadcastQueries();\n        }\n\n        if (graphQLResultHasError(result)) {\n          throw new ApolloError({\n            graphQLErrors: result.errors\n          });\n        }\n\n        return result;\n      });\n    };\n\n    if (this.transform(query).hasClientExports) {\n      var observablePromise_1 = this.localState.addExportedVariables(query, variables, context).then(makeObservable);\n      return new Observable(function (observer) {\n        var sub = null;\n        observablePromise_1.then(function (observable) {\n          return sub = observable.subscribe(observer);\n        }, observer.error);\n        return function () {\n          return sub && sub.unsubscribe();\n        };\n      });\n    }\n\n    return makeObservable(variables);\n  };\n\n  QueryManager.prototype.stopQuery = function (queryId) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  };\n\n  QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  };\n\n  QueryManager.prototype.removeQuery = function (queryId) {\n    this.fetchCancelFns.delete(queryId);\n    this.getQuery(queryId).subscriptions.forEach(function (x) {\n      return x.unsubscribe();\n    });\n    this.queries.delete(queryId);\n  };\n\n  QueryManager.prototype.broadcastQueries = function () {\n    this.onBroadcast();\n    this.queries.forEach(function (info) {\n      return info.notify();\n    });\n  };\n\n  QueryManager.prototype.getLocalState = function () {\n    return this.localState;\n  };\n\n  QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n    var _this = this;\n\n    var _a;\n\n    if (deduplication === void 0) {\n      deduplication = (_a = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a !== void 0 ? _a : this.queryDeduplication;\n    }\n\n    var observable;\n    var serverQuery = this.transform(query).serverQuery;\n\n    if (serverQuery) {\n      var _b = this,\n          inFlightLinkObservables_1 = _b.inFlightLinkObservables,\n          link = _b.link;\n\n      var operation = {\n        query: serverQuery,\n        variables: variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext(__assign(__assign({}, context), {\n          forceFetch: !deduplication\n        }))\n      };\n      context = operation.context;\n\n      if (deduplication) {\n        var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n        inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n        var varJson_1 = JSON.stringify(variables);\n        observable = byVariables_1.get(varJson_1);\n\n        if (!observable) {\n          var concast = new Concast([execute(link, operation)]);\n          byVariables_1.set(varJson_1, observable = concast);\n          concast.cleanup(function () {\n            if (byVariables_1.delete(varJson_1) && byVariables_1.size < 1) {\n              inFlightLinkObservables_1.delete(serverQuery);\n            }\n          });\n        }\n      } else {\n        observable = new Concast([execute(link, operation)]);\n      }\n    } else {\n      observable = new Concast([Observable.of({\n        data: {}\n      })]);\n      context = this.prepareContext(context);\n    }\n\n    var clientQuery = this.transform(query).clientQuery;\n\n    if (clientQuery) {\n      observable = asyncMap(observable, function (result) {\n        return _this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context: context,\n          variables: variables\n        });\n      });\n    }\n\n    return observable;\n  };\n\n  QueryManager.prototype.getResultsFromLink = function (queryInfo, allowCacheWrite, options) {\n    var lastRequestId = queryInfo.lastRequestId;\n    return asyncMap(this.getObservableFromLink(queryInfo.document, options.context, options.variables), function (result) {\n      var hasErrors = isNonEmptyArray(result.errors);\n\n      if (lastRequestId >= queryInfo.lastRequestId) {\n        if (hasErrors && options.errorPolicy === \"none\") {\n          throw queryInfo.markError(new ApolloError({\n            graphQLErrors: result.errors\n          }));\n        }\n\n        queryInfo.markResult(result, options, allowCacheWrite);\n        queryInfo.markReady();\n      }\n\n      var aqr = {\n        data: result.data,\n        loading: false,\n        networkStatus: queryInfo.networkStatus || NetworkStatus.ready\n      };\n\n      if (hasErrors && options.errorPolicy !== \"ignore\") {\n        aqr.errors = result.errors;\n      }\n\n      return aqr;\n    }, function (networkError) {\n      var error = isApolloError(networkError) ? networkError : new ApolloError({\n        networkError: networkError\n      });\n\n      if (lastRequestId >= queryInfo.lastRequestId) {\n        queryInfo.markError(error);\n      }\n\n      throw error;\n    });\n  };\n\n  QueryManager.prototype.fetchQueryObservable = function (queryId, options, networkStatus) {\n    var _this = this;\n\n    if (networkStatus === void 0) {\n      networkStatus = NetworkStatus.loading;\n    }\n\n    var query = this.transform(options.query).document;\n    var variables = this.getVariables(query, options.variables);\n    var queryInfo = this.getQuery(queryId);\n    var oldNetworkStatus = queryInfo.networkStatus;\n    var _a = options.fetchPolicy,\n        fetchPolicy = _a === void 0 ? \"cache-first\" : _a,\n        _b = options.errorPolicy,\n        errorPolicy = _b === void 0 ? \"none\" : _b,\n        _c = options.returnPartialData,\n        returnPartialData = _c === void 0 ? false : _c,\n        _d = options.notifyOnNetworkStatusChange,\n        notifyOnNetworkStatusChange = _d === void 0 ? false : _d,\n        _e = options.context,\n        context = _e === void 0 ? {} : _e;\n    var mightUseNetwork = fetchPolicy === \"cache-first\" || fetchPolicy === \"cache-and-network\" || fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\";\n\n    if (mightUseNetwork && notifyOnNetworkStatusChange && typeof oldNetworkStatus === \"number\" && oldNetworkStatus !== networkStatus && isNetworkRequestInFlight(networkStatus)) {\n      if (fetchPolicy !== \"cache-first\") {\n        fetchPolicy = \"cache-and-network\";\n      }\n\n      returnPartialData = true;\n    }\n\n    var normalized = Object.assign({}, options, {\n      query: query,\n      variables: variables,\n      fetchPolicy: fetchPolicy,\n      errorPolicy: errorPolicy,\n      returnPartialData: returnPartialData,\n      notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n      context: context\n    });\n\n    var fromVariables = function fromVariables(variables) {\n      normalized.variables = variables;\n      return _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);\n    };\n\n    this.fetchCancelFns.set(queryId, function (reason) {\n      Promise.resolve().then(function () {\n        return concast.cancel(reason);\n      });\n    });\n    var concast = new Concast(this.transform(normalized.query).hasClientExports ? this.localState.addExportedVariables(normalized.query, normalized.variables, normalized.context).then(fromVariables) : fromVariables(normalized.variables));\n    concast.cleanup(function () {\n      _this.fetchCancelFns.delete(queryId);\n\n      var nextFetchPolicy = options.nextFetchPolicy;\n\n      if (nextFetchPolicy) {\n        options.nextFetchPolicy = void 0;\n        options.fetchPolicy = typeof nextFetchPolicy === \"function\" ? nextFetchPolicy.call(options, options.fetchPolicy || \"cache-first\") : nextFetchPolicy;\n      }\n    });\n    return concast;\n  };\n\n  QueryManager.prototype.fetchQueryByPolicy = function (queryInfo, options, networkStatus) {\n    var _this = this;\n\n    var query = options.query,\n        variables = options.variables,\n        fetchPolicy = options.fetchPolicy,\n        errorPolicy = options.errorPolicy,\n        returnPartialData = options.returnPartialData,\n        context = options.context;\n    queryInfo.init({\n      document: query,\n      variables: variables,\n      lastRequestId: this.generateRequestId(),\n      networkStatus: networkStatus\n    });\n\n    var readCache = function readCache() {\n      return queryInfo.getDiff(variables);\n    };\n\n    var resultsFromCache = function resultsFromCache(diff, networkStatus) {\n      if (networkStatus === void 0) {\n        networkStatus = queryInfo.networkStatus || NetworkStatus.loading;\n      }\n\n      var data = diff.result;\n\n      if (process.env.NODE_ENV !== 'production' && isNonEmptyArray(diff.missing) && !equal(data, {})) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing cache result fields: \" + diff.missing.map(function (m) {\n          return m.path.join('.');\n        }).join(', '), diff.missing);\n      }\n\n      var fromData = function fromData(data) {\n        return Observable.of(__assign({\n          data: data,\n          loading: isNetworkRequestInFlight(networkStatus),\n          networkStatus: networkStatus\n        }, diff.complete ? null : {\n          partial: true\n        }));\n      };\n\n      if (_this.transform(query).hasForcedResolvers) {\n        return _this.localState.runResolvers({\n          document: query,\n          remoteResult: {\n            data: data\n          },\n          context: context,\n          variables: variables,\n          onlyRunForcedResolvers: true\n        }).then(function (resolved) {\n          return fromData(resolved.data);\n        });\n      }\n\n      return fromData(data);\n    };\n\n    var resultsFromLink = function resultsFromLink(allowCacheWrite) {\n      return _this.getResultsFromLink(queryInfo, allowCacheWrite, {\n        variables: variables,\n        context: context,\n        fetchPolicy: fetchPolicy,\n        errorPolicy: errorPolicy\n      });\n    };\n\n    switch (fetchPolicy) {\n      default:\n      case \"cache-first\":\n        {\n          var diff = readCache();\n\n          if (diff.complete) {\n            return [resultsFromCache(diff, queryInfo.markReady())];\n          }\n\n          if (returnPartialData) {\n            return [resultsFromCache(diff), resultsFromLink(true)];\n          }\n\n          return [resultsFromLink(true)];\n        }\n\n      case \"cache-and-network\":\n        {\n          var diff = readCache();\n\n          if (diff.complete || returnPartialData) {\n            return [resultsFromCache(diff), resultsFromLink(true)];\n          }\n\n          return [resultsFromLink(true)];\n        }\n\n      case \"cache-only\":\n        return [resultsFromCache(readCache(), queryInfo.markReady())];\n\n      case \"network-only\":\n        return [resultsFromLink(true)];\n\n      case \"no-cache\":\n        return [resultsFromLink(false)];\n\n      case \"standby\":\n        return [];\n    }\n  };\n\n  QueryManager.prototype.getQuery = function (queryId) {\n    if (queryId && !this.queries.has(queryId)) {\n      this.queries.set(queryId, new QueryInfo(this.cache));\n    }\n\n    return this.queries.get(queryId);\n  };\n\n  QueryManager.prototype.prepareContext = function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    var newContext = this.localState.prepareContext(context);\n    return __assign(__assign({}, newContext), {\n      clientAwareness: this.clientAwareness\n    });\n  };\n\n  return QueryManager;\n}();\n\nexport { QueryManager };\n\nfunction markMutationResult(mutation, cache) {\n  if (shouldWriteResult(mutation.result, mutation.errorPolicy)) {\n    var cacheWrites_1 = [{\n      result: mutation.result.data,\n      dataId: 'ROOT_MUTATION',\n      query: mutation.document,\n      variables: mutation.variables\n    }];\n    var queryUpdatersById_1 = mutation.queryUpdatersById;\n\n    if (queryUpdatersById_1) {\n      Object.keys(queryUpdatersById_1).forEach(function (id) {\n        var _a = queryUpdatersById_1[id],\n            updater = _a.updater,\n            _b = _a.queryInfo,\n            document = _b.document,\n            variables = _b.variables;\n\n        var _c = cache.diff({\n          query: document,\n          variables: variables,\n          returnPartialData: true,\n          optimistic: false\n        }),\n            currentQueryResult = _c.result,\n            complete = _c.complete;\n\n        if (complete && currentQueryResult) {\n          var nextQueryResult = updater(currentQueryResult, {\n            mutationResult: mutation.result,\n            queryName: getOperationName(document) || undefined,\n            queryVariables: variables\n          });\n\n          if (nextQueryResult) {\n            cacheWrites_1.push({\n              result: nextQueryResult,\n              dataId: 'ROOT_QUERY',\n              query: document,\n              variables: variables\n            });\n          }\n        }\n      });\n    }\n\n    cache.performTransaction(function (c) {\n      cacheWrites_1.forEach(function (write) {\n        return c.write(write);\n      });\n      var update = mutation.update;\n\n      if (update) {\n        update(c, mutation.result);\n      }\n    }, null);\n  }\n}","import { __assign } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { ApolloLink, execute } from \"../link/core/index.js\";\nimport { compact } from \"../utilities/index.js\";\nimport { version } from \"../version.js\";\nimport { HttpLink } from \"../link/http/index.js\";\nimport { QueryManager } from \"./QueryManager.js\";\nimport { LocalState } from \"./LocalState.js\";\nvar hasSuggestedDevtools = false;\n\nvar ApolloClient = function () {\n  function ApolloClient(options) {\n    var _this = this;\n\n    this.defaultOptions = {};\n    this.resetStoreCallbacks = [];\n    this.clearStoreCallbacks = [];\n    var uri = options.uri,\n        credentials = options.credentials,\n        headers = options.headers,\n        cache = options.cache,\n        _a = options.ssrMode,\n        ssrMode = _a === void 0 ? false : _a,\n        _b = options.ssrForceFetchDelay,\n        ssrForceFetchDelay = _b === void 0 ? 0 : _b,\n        connectToDevTools = options.connectToDevTools,\n        _c = options.queryDeduplication,\n        queryDeduplication = _c === void 0 ? true : _c,\n        defaultOptions = options.defaultOptions,\n        _d = options.assumeImmutableResults,\n        assumeImmutableResults = _d === void 0 ? false : _d,\n        resolvers = options.resolvers,\n        typeDefs = options.typeDefs,\n        fragmentMatcher = options.fragmentMatcher,\n        clientAwarenessName = options.name,\n        clientAwarenessVersion = options.version;\n    var link = options.link;\n\n    if (!link) {\n      link = uri ? new HttpLink({\n        uri: uri,\n        credentials: credentials,\n        headers: headers\n      }) : ApolloLink.empty();\n    }\n\n    if (!cache) {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"To initialize Apollo Client, you must specify a 'cache' property \" + \"in the options object. \\n\" + \"For more information, please visit: https://go.apollo.dev/c/docs\");\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(function () {\n        return _this.disableNetworkFetches = false;\n      }, ssrForceFetchDelay);\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n    var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && !window.__APOLLO_CLIENT__;\n\n    if (typeof connectToDevTools === 'undefined' ? defaultConnectToDevTools : connectToDevTools && typeof window !== 'undefined') {\n      window.__APOLLO_CLIENT__ = this;\n    }\n\n    if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n      hasSuggestedDevtools = true;\n\n      if (typeof window !== 'undefined' && window.document && window.top === window.self) {\n        if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n          if (window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('Chrome') > -1) {\n            console.debug('Download the Apollo DevTools ' + 'for a better development experience: ' + 'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n          }\n        }\n      }\n    }\n\n    this.version = version;\n    this.localState = new LocalState({\n      cache: cache,\n      client: this,\n      resolvers: resolvers,\n      fragmentMatcher: fragmentMatcher\n    });\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      queryDeduplication: queryDeduplication,\n      ssrMode: ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName,\n        version: clientAwarenessVersion\n      },\n      localState: this.localState,\n      assumeImmutableResults: assumeImmutableResults,\n      onBroadcast: function onBroadcast() {\n        if (_this.devToolsHookCb) {\n          _this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: _this.queryManager.getQueryStore(),\n              mutations: _this.queryManager.mutationStore.getStore()\n            },\n            dataWithOptimisticResults: _this.cache.extract(true)\n          });\n        }\n      }\n    });\n  }\n\n  ApolloClient.prototype.stop = function () {\n    this.queryManager.stop();\n  };\n\n  ApolloClient.prototype.watchQuery = function (options) {\n    if (this.defaultOptions.watchQuery) {\n      options = compact(this.defaultOptions.watchQuery, options);\n    }\n\n    if (this.disableNetworkFetches && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options = __assign(__assign({}, options), {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.queryManager.watchQuery(options);\n  };\n\n  ApolloClient.prototype.query = function (options) {\n    if (this.defaultOptions.query) {\n      options = compact(this.defaultOptions.query, options);\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 10) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' + 'client.query can only return a single result. Please use client.watchQuery ' + 'to receive multiple results from the cache and the network, or consider ' + 'using a different fetchPolicy, such as cache-first or network-only.');\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = __assign(__assign({}, options), {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.queryManager.query(options);\n  };\n\n  ApolloClient.prototype.mutate = function (options) {\n    if (this.defaultOptions.mutate) {\n      options = compact(this.defaultOptions.mutate, options);\n    }\n\n    return this.queryManager.mutate(options);\n  };\n\n  ApolloClient.prototype.subscribe = function (options) {\n    return this.queryManager.startGraphQLSubscription(options);\n  };\n\n  ApolloClient.prototype.readQuery = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.cache.readQuery(options, optimistic);\n  };\n\n  ApolloClient.prototype.readFragment = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.cache.readFragment(options, optimistic);\n  };\n\n  ApolloClient.prototype.writeQuery = function (options) {\n    this.cache.writeQuery(options);\n    this.queryManager.broadcastQueries();\n  };\n\n  ApolloClient.prototype.writeFragment = function (options) {\n    this.cache.writeFragment(options);\n    this.queryManager.broadcastQueries();\n  };\n\n  ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n    this.devToolsHookCb = cb;\n  };\n\n  ApolloClient.prototype.__requestRaw = function (payload) {\n    return execute(this.link, payload);\n  };\n\n  ApolloClient.prototype.resetStore = function () {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.queryManager.clearStore();\n    }).then(function () {\n      return Promise.all(_this.resetStoreCallbacks.map(function (fn) {\n        return fn();\n      }));\n    }).then(function () {\n      return _this.reFetchObservableQueries();\n    });\n  };\n\n  ApolloClient.prototype.clearStore = function () {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.queryManager.clearStore();\n    }).then(function () {\n      return Promise.all(_this.clearStoreCallbacks.map(function (fn) {\n        return fn();\n      }));\n    });\n  };\n\n  ApolloClient.prototype.onResetStore = function (cb) {\n    var _this = this;\n\n    this.resetStoreCallbacks.push(cb);\n    return function () {\n      _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) {\n        return c !== cb;\n      });\n    };\n  };\n\n  ApolloClient.prototype.onClearStore = function (cb) {\n    var _this = this;\n\n    this.clearStoreCallbacks.push(cb);\n    return function () {\n      _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) {\n        return c !== cb;\n      });\n    };\n  };\n\n  ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  };\n\n  ApolloClient.prototype.extract = function (optimistic) {\n    return this.cache.extract(optimistic);\n  };\n\n  ApolloClient.prototype.restore = function (serializedState) {\n    return this.cache.restore(serializedState);\n  };\n\n  ApolloClient.prototype.addResolvers = function (resolvers) {\n    this.localState.addResolvers(resolvers);\n  };\n\n  ApolloClient.prototype.setResolvers = function (resolvers) {\n    this.localState.setResolvers(resolvers);\n  };\n\n  ApolloClient.prototype.getResolvers = function () {\n    return this.localState.getResolvers();\n  };\n\n  ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  };\n\n  ApolloClient.prototype.setLink = function (newLink) {\n    this.link = this.queryManager.link = newLink;\n  };\n\n  return ApolloClient;\n}();\n\nexport { ApolloClient };","export var version = 'local';","import { __assign, __extends } from \"tslib\";\nimport { dep, KeyTrie } from 'optimism';\nimport { equal } from '@wry/equality';\nimport { isReference, makeReference, DeepMerger, maybeDeepFreeze, canUseWeakMap } from \"../../utilities/index.js\";\nimport { hasOwn, fieldNameFromStoreName } from \"./helpers.js\";\nvar DELETE = Object.create(null);\n\nvar delModifier = function delModifier() {\n  return DELETE;\n};\n\nvar INVALIDATE = Object.create(null);\n\nvar EntityStore = function () {\n  function EntityStore(policies, group) {\n    var _this = this;\n\n    this.policies = policies;\n    this.group = group;\n    this.data = Object.create(null);\n    this.rootIds = Object.create(null);\n    this.refs = Object.create(null);\n\n    this.getFieldValue = function (objectOrReference, storeFieldName) {\n      return maybeDeepFreeze(isReference(objectOrReference) ? _this.get(objectOrReference.__ref, storeFieldName) : objectOrReference && objectOrReference[storeFieldName]);\n    };\n\n    this.canRead = function (objOrRef) {\n      return isReference(objOrRef) ? _this.has(objOrRef.__ref) : typeof objOrRef === \"object\";\n    };\n\n    this.toReference = function (objOrIdOrRef, mergeIntoStore) {\n      if (typeof objOrIdOrRef === \"string\") {\n        return makeReference(objOrIdOrRef);\n      }\n\n      if (isReference(objOrIdOrRef)) {\n        return objOrIdOrRef;\n      }\n\n      var id = _this.policies.identify(objOrIdOrRef)[0];\n\n      if (id) {\n        var ref = makeReference(id);\n\n        if (mergeIntoStore) {\n          _this.merge(id, objOrIdOrRef);\n        }\n\n        return ref;\n      }\n    };\n  }\n\n  EntityStore.prototype.toObject = function () {\n    return __assign({}, this.data);\n  };\n\n  EntityStore.prototype.has = function (dataId) {\n    return this.lookup(dataId, true) !== void 0;\n  };\n\n  EntityStore.prototype.get = function (dataId, fieldName) {\n    this.group.depend(dataId, fieldName);\n\n    if (hasOwn.call(this.data, dataId)) {\n      var storeObject = this.data[dataId];\n\n      if (storeObject && hasOwn.call(storeObject, fieldName)) {\n        return storeObject[fieldName];\n      }\n    }\n\n    if (fieldName === \"__typename\" && hasOwn.call(this.policies.rootTypenamesById, dataId)) {\n      return this.policies.rootTypenamesById[dataId];\n    }\n\n    if (this instanceof Layer) {\n      return this.parent.get(dataId, fieldName);\n    }\n  };\n\n  EntityStore.prototype.lookup = function (dataId, dependOnExistence) {\n    if (dependOnExistence) this.group.depend(dataId, \"__exists\");\n    return hasOwn.call(this.data, dataId) ? this.data[dataId] : this instanceof Layer ? this.parent.lookup(dataId, dependOnExistence) : void 0;\n  };\n\n  EntityStore.prototype.merge = function (dataId, incoming) {\n    var _this = this;\n\n    var existing = this.lookup(dataId);\n    var merged = new DeepMerger(storeObjectReconciler).merge(existing, incoming);\n    this.data[dataId] = merged;\n\n    if (merged !== existing) {\n      delete this.refs[dataId];\n\n      if (this.group.caching) {\n        var fieldsToDirty_1 = Object.create(null);\n        if (!existing) fieldsToDirty_1.__exists = 1;\n        Object.keys(incoming).forEach(function (storeFieldName) {\n          if (!existing || existing[storeFieldName] !== merged[storeFieldName]) {\n            fieldsToDirty_1[fieldNameFromStoreName(storeFieldName)] = 1;\n\n            if (merged[storeFieldName] === void 0 && !(_this instanceof Layer)) {\n              delete merged[storeFieldName];\n            }\n          }\n        });\n        Object.keys(fieldsToDirty_1).forEach(function (fieldName) {\n          return _this.group.dirty(dataId, fieldName);\n        });\n      }\n    }\n  };\n\n  EntityStore.prototype.modify = function (dataId, fields) {\n    var _this = this;\n\n    var storeObject = this.lookup(dataId);\n\n    if (storeObject) {\n      var changedFields_1 = Object.create(null);\n      var needToMerge_1 = false;\n      var allDeleted_1 = true;\n      var sharedDetails_1 = {\n        DELETE: DELETE,\n        INVALIDATE: INVALIDATE,\n        isReference: isReference,\n        toReference: this.toReference,\n        canRead: this.canRead,\n        readField: function readField(fieldNameOrOptions, from) {\n          return _this.policies.readField(typeof fieldNameOrOptions === \"string\" ? {\n            fieldName: fieldNameOrOptions,\n            from: from || makeReference(dataId)\n          } : fieldNameOrOptions, {\n            store: _this\n          });\n        }\n      };\n      Object.keys(storeObject).forEach(function (storeFieldName) {\n        var fieldName = fieldNameFromStoreName(storeFieldName);\n        var fieldValue = storeObject[storeFieldName];\n        if (fieldValue === void 0) return;\n        var modify = typeof fields === \"function\" ? fields : fields[storeFieldName] || fields[fieldName];\n\n        if (modify) {\n          var newValue = modify === delModifier ? DELETE : modify(maybeDeepFreeze(fieldValue), __assign(__assign({}, sharedDetails_1), {\n            fieldName: fieldName,\n            storeFieldName: storeFieldName,\n            storage: _this.getStorage(dataId, storeFieldName)\n          }));\n\n          if (newValue === INVALIDATE) {\n            _this.group.dirty(dataId, storeFieldName);\n          } else {\n            if (newValue === DELETE) newValue = void 0;\n\n            if (newValue !== fieldValue) {\n              changedFields_1[storeFieldName] = newValue;\n              needToMerge_1 = true;\n              fieldValue = newValue;\n            }\n          }\n        }\n\n        if (fieldValue !== void 0) {\n          allDeleted_1 = false;\n        }\n      });\n\n      if (needToMerge_1) {\n        this.merge(dataId, changedFields_1);\n\n        if (allDeleted_1) {\n          if (this instanceof Layer) {\n            this.data[dataId] = void 0;\n          } else {\n            delete this.data[dataId];\n          }\n\n          this.group.dirty(dataId, \"__exists\");\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  EntityStore.prototype.delete = function (dataId, fieldName, args) {\n    var _a;\n\n    var storeObject = this.lookup(dataId);\n\n    if (storeObject) {\n      var typename = this.getFieldValue(storeObject, \"__typename\");\n      var storeFieldName = fieldName && args ? this.policies.getStoreFieldName({\n        typename: typename,\n        fieldName: fieldName,\n        args: args\n      }) : fieldName;\n      return this.modify(dataId, storeFieldName ? (_a = {}, _a[storeFieldName] = delModifier, _a) : delModifier);\n    }\n\n    return false;\n  };\n\n  EntityStore.prototype.evict = function (options) {\n    var evicted = false;\n\n    if (options.id) {\n      if (hasOwn.call(this.data, options.id)) {\n        evicted = this.delete(options.id, options.fieldName, options.args);\n      }\n\n      if (this instanceof Layer) {\n        evicted = this.parent.evict(options) || evicted;\n      }\n\n      if (options.fieldName || evicted) {\n        this.group.dirty(options.id, options.fieldName || \"__exists\");\n      }\n    }\n\n    return evicted;\n  };\n\n  EntityStore.prototype.clear = function () {\n    this.replace(null);\n  };\n\n  EntityStore.prototype.replace = function (newData) {\n    var _this = this;\n\n    Object.keys(this.data).forEach(function (dataId) {\n      if (!(newData && hasOwn.call(newData, dataId))) {\n        _this.delete(dataId);\n      }\n    });\n\n    if (newData) {\n      Object.keys(newData).forEach(function (dataId) {\n        _this.merge(dataId, newData[dataId]);\n      });\n    }\n  };\n\n  EntityStore.prototype.retain = function (rootId) {\n    return this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1;\n  };\n\n  EntityStore.prototype.release = function (rootId) {\n    if (this.rootIds[rootId] > 0) {\n      var count = --this.rootIds[rootId];\n      if (!count) delete this.rootIds[rootId];\n      return count;\n    }\n\n    return 0;\n  };\n\n  EntityStore.prototype.getRootIdSet = function (ids) {\n    if (ids === void 0) {\n      ids = new Set();\n    }\n\n    Object.keys(this.rootIds).forEach(ids.add, ids);\n\n    if (this instanceof Layer) {\n      this.parent.getRootIdSet(ids);\n    }\n\n    return ids;\n  };\n\n  EntityStore.prototype.gc = function () {\n    var _this = this;\n\n    var ids = this.getRootIdSet();\n    var snapshot = this.toObject();\n    ids.forEach(function (id) {\n      if (hasOwn.call(snapshot, id)) {\n        Object.keys(_this.findChildRefIds(id)).forEach(ids.add, ids);\n        delete snapshot[id];\n      }\n    });\n    var idsToRemove = Object.keys(snapshot);\n\n    if (idsToRemove.length) {\n      var root_1 = this;\n\n      while (root_1 instanceof Layer) {\n        root_1 = root_1.parent;\n      }\n\n      idsToRemove.forEach(function (id) {\n        return root_1.delete(id);\n      });\n    }\n\n    return idsToRemove;\n  };\n\n  EntityStore.prototype.findChildRefIds = function (dataId) {\n    if (!hasOwn.call(this.refs, dataId)) {\n      var found_1 = this.refs[dataId] = Object.create(null);\n      var workSet_1 = new Set([this.data[dataId]]);\n\n      var canTraverse_1 = function canTraverse_1(obj) {\n        return obj !== null && typeof obj === 'object';\n      };\n\n      workSet_1.forEach(function (obj) {\n        if (isReference(obj)) {\n          found_1[obj.__ref] = true;\n        } else if (canTraverse_1(obj)) {\n          Object.values(obj).filter(canTraverse_1).forEach(workSet_1.add, workSet_1);\n        }\n      });\n    }\n\n    return this.refs[dataId];\n  };\n\n  EntityStore.prototype.makeCacheKey = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return this.group.keyMaker.lookupArray(args);\n  };\n\n  return EntityStore;\n}();\n\nexport { EntityStore };\n\nvar CacheGroup = function () {\n  function CacheGroup(caching) {\n    this.caching = caching;\n    this.d = null;\n    this.keyMaker = new KeyTrie(canUseWeakMap);\n    this.d = caching ? dep() : null;\n  }\n\n  CacheGroup.prototype.depend = function (dataId, storeFieldName) {\n    if (this.d) {\n      this.d(makeDepKey(dataId, storeFieldName));\n    }\n  };\n\n  CacheGroup.prototype.dirty = function (dataId, storeFieldName) {\n    if (this.d) {\n      this.d.dirty(makeDepKey(dataId, storeFieldName));\n    }\n  };\n\n  return CacheGroup;\n}();\n\nfunction makeDepKey(dataId, storeFieldName) {\n  return fieldNameFromStoreName(storeFieldName) + '#' + dataId;\n}\n\n(function (EntityStore) {\n  var Root = function (_super) {\n    __extends(Root, _super);\n\n    function Root(_a) {\n      var policies = _a.policies,\n          _b = _a.resultCaching,\n          resultCaching = _b === void 0 ? true : _b,\n          seed = _a.seed;\n\n      var _this = _super.call(this, policies, new CacheGroup(resultCaching)) || this;\n\n      _this.storageTrie = new KeyTrie(canUseWeakMap);\n      _this.sharedLayerGroup = new CacheGroup(resultCaching);\n      if (seed) _this.replace(seed);\n      return _this;\n    }\n\n    Root.prototype.addLayer = function (layerId, replay) {\n      return new Layer(layerId, this, replay, this.sharedLayerGroup);\n    };\n\n    Root.prototype.removeLayer = function () {\n      return this;\n    };\n\n    Root.prototype.getStorage = function (idOrObj, storeFieldName) {\n      return this.storageTrie.lookup(idOrObj, storeFieldName);\n    };\n\n    return Root;\n  }(EntityStore);\n\n  EntityStore.Root = Root;\n})(EntityStore || (EntityStore = {}));\n\nvar Layer = function (_super) {\n  __extends(Layer, _super);\n\n  function Layer(id, parent, replay, group) {\n    var _this = _super.call(this, parent.policies, group) || this;\n\n    _this.id = id;\n    _this.parent = parent;\n    _this.replay = replay;\n    _this.group = group;\n    replay(_this);\n    return _this;\n  }\n\n  Layer.prototype.addLayer = function (layerId, replay) {\n    return new Layer(layerId, this, replay, this.group);\n  };\n\n  Layer.prototype.removeLayer = function (layerId) {\n    var _this = this;\n\n    var parent = this.parent.removeLayer(layerId);\n\n    if (layerId === this.id) {\n      if (this.group.caching) {\n        Object.keys(this.data).forEach(function (dataId) {\n          if (_this.data[dataId] !== parent.lookup(dataId)) {\n            _this.delete(dataId);\n          }\n        });\n      }\n\n      return parent;\n    }\n\n    if (parent === this.parent) return this;\n    return parent.addLayer(this.id, this.replay);\n  };\n\n  Layer.prototype.toObject = function () {\n    return __assign(__assign({}, this.parent.toObject()), this.data);\n  };\n\n  Layer.prototype.findChildRefIds = function (dataId) {\n    var fromParent = this.parent.findChildRefIds(dataId);\n    return hasOwn.call(this.data, dataId) ? __assign(__assign({}, fromParent), _super.prototype.findChildRefIds.call(this, dataId)) : fromParent;\n  };\n\n  Layer.prototype.getStorage = function (idOrObj, storeFieldName) {\n    return this.parent.getStorage(idOrObj, storeFieldName);\n  };\n\n  return Layer;\n}(EntityStore);\n\nfunction storeObjectReconciler(existingObject, incomingObject, property) {\n  var existingValue = existingObject[property];\n  var incomingValue = incomingObject[property];\n  return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\n\nexport function supportsResultCaching(store) {\n  return !!(store instanceof EntityStore && store.group.caching);\n}","import { __assign } from \"tslib\";\nimport { wrap } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { isField, resultKeyNameFromField, isReference, makeReference, createFragmentMap, shouldInclude, addTypenameToDocument, getDefaultValues, getFragmentDefinitions, getMainDefinition, getQueryDefinition, maybeDeepFreeze, mergeDeepArray, getFragmentFromSelection } from \"../../utilities/index.js\";\nimport { supportsResultCaching } from \"./entityStore.js\";\nimport { getTypenameFromStoreObject } from \"./helpers.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\n;\n\nfunction missingFromInvariant(err, context) {\n  return new MissingFieldError(err.message, context.path.slice(), context.query, context.clientOnly, context.variables);\n}\n\nvar StoreReader = function () {\n  function StoreReader(config) {\n    var _this = this;\n\n    this.config = config;\n    this.executeSelectionSet = wrap(function (options) {\n      return _this.execSelectionSetImpl(options);\n    }, {\n      keyArgs: function keyArgs(options) {\n        return [options.selectionSet, options.objectOrReference, options.context];\n      },\n      makeCacheKey: function makeCacheKey(selectionSet, parent, context) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(selectionSet, isReference(parent) ? parent.__ref : parent, context.varString);\n        }\n      }\n    });\n    this.knownResults = new WeakMap();\n    this.executeSubSelectedArray = wrap(function (options) {\n      return _this.execSubSelectedArrayImpl(options);\n    }, {\n      makeCacheKey: function makeCacheKey(_a) {\n        var field = _a.field,\n            array = _a.array,\n            context = _a.context;\n\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(field, array, context.varString);\n        }\n      }\n    });\n    this.config = __assign({\n      addTypename: true\n    }, config);\n  }\n\n  StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n    var store = _a.store,\n        query = _a.query,\n        _b = _a.rootId,\n        rootId = _b === void 0 ? 'ROOT_QUERY' : _b,\n        variables = _a.variables,\n        _c = _a.returnPartialData,\n        returnPartialData = _c === void 0 ? true : _c;\n    var policies = this.config.cache.policies;\n    variables = __assign(__assign({}, getDefaultValues(getQueryDefinition(query))), variables);\n    var execResult = this.executeSelectionSet({\n      selectionSet: getMainDefinition(query).selectionSet,\n      objectOrReference: makeReference(rootId),\n      context: {\n        store: store,\n        query: query,\n        policies: policies,\n        variables: variables,\n        varString: JSON.stringify(variables),\n        fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n        path: [],\n        clientOnly: false\n      }\n    });\n    var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n\n    if (hasMissingFields && !returnPartialData) {\n      throw execResult.missing[0];\n    }\n\n    return {\n      result: execResult.result,\n      missing: execResult.missing,\n      complete: !hasMissingFields\n    };\n  };\n\n  StoreReader.prototype.isFresh = function (result, parent, selectionSet, context) {\n    if (supportsResultCaching(context.store) && this.knownResults.get(result) === selectionSet) {\n      var latest = this.executeSelectionSet.peek(selectionSet, parent, context);\n\n      if (latest && result === latest.result) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  StoreReader.prototype.execSelectionSetImpl = function (_a) {\n    var _this = this;\n\n    var selectionSet = _a.selectionSet,\n        objectOrReference = _a.objectOrReference,\n        context = _a.context;\n\n    if (isReference(objectOrReference) && !context.policies.rootTypenamesById[objectOrReference.__ref] && !context.store.has(objectOrReference.__ref)) {\n      return {\n        result: {},\n        missing: [missingFromInvariant(process.env.NODE_ENV === \"production\" ? new InvariantError(4) : new InvariantError(\"Dangling reference to missing \" + objectOrReference.__ref + \" object\"), context)]\n      };\n    }\n\n    var variables = context.variables,\n        policies = context.policies,\n        store = context.store;\n    var objectsToMerge = [];\n    var finalResult = {\n      result: null\n    };\n    var typename = store.getFieldValue(objectOrReference, \"__typename\");\n\n    if (this.config.addTypename && typeof typename === \"string\" && !policies.rootIdsByTypename[typename]) {\n      objectsToMerge.push({\n        __typename: typename\n      });\n    }\n\n    function getMissing() {\n      return finalResult.missing || (finalResult.missing = []);\n    }\n\n    function handleMissing(result) {\n      var _a;\n\n      if (result.missing) (_a = getMissing()).push.apply(_a, result.missing);\n      return result.result;\n    }\n\n    var workSet = new Set(selectionSet.selections);\n    workSet.forEach(function (selection) {\n      var _a;\n\n      if (!shouldInclude(selection, variables)) return;\n\n      if (isField(selection)) {\n        var fieldValue = policies.readField({\n          fieldName: selection.name.value,\n          field: selection,\n          variables: context.variables,\n          from: objectOrReference\n        }, context);\n        var resultName = resultKeyNameFromField(selection);\n        context.path.push(resultName);\n        var wasClientOnly = context.clientOnly;\n        context.clientOnly = wasClientOnly || !!(selection.directives && selection.directives.some(function (d) {\n          return d.name.value === \"client\";\n        }));\n\n        if (fieldValue === void 0) {\n          if (!addTypenameToDocument.added(selection)) {\n            getMissing().push(missingFromInvariant(process.env.NODE_ENV === \"production\" ? new InvariantError(5) : new InvariantError(\"Can't find field '\" + selection.name.value + \"' on \" + (isReference(objectOrReference) ? objectOrReference.__ref + \" object\" : \"object \" + JSON.stringify(objectOrReference, null, 2))), context));\n          }\n        } else if (Array.isArray(fieldValue)) {\n          fieldValue = handleMissing(_this.executeSubSelectedArray({\n            field: selection,\n            array: fieldValue,\n            context: context\n          }));\n        } else if (!selection.selectionSet) {\n          if (process.env.NODE_ENV !== 'production') {\n            assertSelectionSetForIdValue(context.store, selection, fieldValue);\n            maybeDeepFreeze(fieldValue);\n          }\n        } else if (fieldValue != null) {\n          fieldValue = handleMissing(_this.executeSelectionSet({\n            selectionSet: selection.selectionSet,\n            objectOrReference: fieldValue,\n            context: context\n          }));\n        }\n\n        if (fieldValue !== void 0) {\n          objectsToMerge.push((_a = {}, _a[resultName] = fieldValue, _a));\n        }\n\n        context.clientOnly = wasClientOnly;\n        invariant(context.path.pop() === resultName);\n      } else {\n        var fragment = getFragmentFromSelection(selection, context.fragmentMap);\n\n        if (fragment && policies.fragmentMatches(fragment, typename)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n    finalResult.result = mergeDeepArray(objectsToMerge);\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(finalResult.result);\n    }\n\n    this.knownResults.set(finalResult.result, selectionSet);\n    return finalResult;\n  };\n\n  StoreReader.prototype.execSubSelectedArrayImpl = function (_a) {\n    var _this = this;\n\n    var field = _a.field,\n        array = _a.array,\n        context = _a.context;\n    var missing;\n\n    function handleMissing(childResult, i) {\n      if (childResult.missing) {\n        missing = missing || [];\n        missing.push.apply(missing, childResult.missing);\n      }\n\n      invariant(context.path.pop() === i);\n      return childResult.result;\n    }\n\n    if (field.selectionSet) {\n      array = array.filter(context.store.canRead);\n    }\n\n    array = array.map(function (item, i) {\n      if (item === null) {\n        return null;\n      }\n\n      context.path.push(i);\n\n      if (Array.isArray(item)) {\n        return handleMissing(_this.executeSubSelectedArray({\n          field: field,\n          array: item,\n          context: context\n        }), i);\n      }\n\n      if (field.selectionSet) {\n        return handleMissing(_this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          objectOrReference: item,\n          context: context\n        }), i);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        assertSelectionSetForIdValue(context.store, field, item);\n      }\n\n      invariant(context.path.pop() === i);\n      return item;\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(array);\n    }\n\n    return {\n      result: array,\n      missing: missing\n    };\n  };\n\n  return StoreReader;\n}();\n\nexport { StoreReader };\n\nfunction assertSelectionSetForIdValue(store, field, fieldValue) {\n  if (!field.selectionSet) {\n    var workSet_1 = new Set([fieldValue]);\n    workSet_1.forEach(function (value) {\n      if (value && typeof value === \"object\") {\n        process.env.NODE_ENV === \"production\" ? invariant(!isReference(value), 6) : invariant(!isReference(value), \"Missing selection set for object of type \" + getTypenameFromStoreObject(store, value) + \" returned for query field \" + field.name.value);\n        Object.values(value).forEach(workSet_1.add, workSet_1);\n      }\n    });\n  }\n}","import { __assign } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { equal } from '@wry/equality';\nimport { createFragmentMap, getFragmentFromSelection, getDefaultValues, getFragmentDefinitions, getOperationDefinition, getTypenameFromResult, makeReference, isField, resultKeyNameFromField, isReference, shouldInclude, hasDirectives, cloneDeep } from \"../../utilities/index.js\";\nimport { makeProcessedFieldsMerger, fieldNameFromStoreName } from \"./helpers.js\";\n;\n\nvar StoreWriter = function () {\n  function StoreWriter(cache, reader) {\n    this.cache = cache;\n    this.reader = reader;\n  }\n\n  StoreWriter.prototype.writeToStore = function (_a) {\n    var query = _a.query,\n        result = _a.result,\n        dataId = _a.dataId,\n        store = _a.store,\n        variables = _a.variables;\n    var operationDefinition = getOperationDefinition(query);\n    var merger = makeProcessedFieldsMerger();\n    variables = __assign(__assign({}, getDefaultValues(operationDefinition)), variables);\n    var ref = this.processSelectionSet({\n      result: result || Object.create(null),\n      dataId: dataId,\n      selectionSet: operationDefinition.selectionSet,\n      context: {\n        store: store,\n        written: Object.create(null),\n        merge: function merge(existing, incoming) {\n          return merger.merge(existing, incoming);\n        },\n        variables: variables,\n        varString: JSON.stringify(variables),\n        fragmentMap: createFragmentMap(getFragmentDefinitions(query))\n      }\n    });\n\n    if (!isReference(ref)) {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(7) : new InvariantError(\"Could not identify object \" + JSON.stringify(result));\n    }\n\n    store.retain(ref.__ref);\n    return ref;\n  };\n\n  StoreWriter.prototype.processSelectionSet = function (_a) {\n    var _this = this;\n\n    var dataId = _a.dataId,\n        result = _a.result,\n        selectionSet = _a.selectionSet,\n        context = _a.context,\n        _b = _a.out,\n        out = _b === void 0 ? {\n      shouldApplyMerges: false\n    } : _b;\n    var policies = this.cache.policies;\n\n    var _c = policies.identify(result, selectionSet, context.fragmentMap),\n        id = _c[0],\n        keyObject = _c[1];\n\n    dataId = dataId || id;\n\n    if (\"string\" === typeof dataId) {\n      var sets = context.written[dataId] || (context.written[dataId] = []);\n      var ref = makeReference(dataId);\n      if (sets.indexOf(selectionSet) >= 0) return ref;\n      sets.push(selectionSet);\n\n      if (this.reader && this.reader.isFresh(result, ref, selectionSet, context)) {\n        return ref;\n      }\n    }\n\n    var mergedFields = Object.create(null);\n\n    if (keyObject) {\n      mergedFields = context.merge(mergedFields, keyObject);\n    }\n\n    var typename = dataId && policies.rootTypenamesById[dataId] || getTypenameFromResult(result, selectionSet, context.fragmentMap) || dataId && context.store.get(dataId, \"__typename\");\n\n    if (\"string\" === typeof typename) {\n      mergedFields.__typename = typename;\n    }\n\n    var workSet = new Set(selectionSet.selections);\n    workSet.forEach(function (selection) {\n      var _a;\n\n      if (!shouldInclude(selection, context.variables)) return;\n\n      if (isField(selection)) {\n        var resultFieldKey = resultKeyNameFromField(selection);\n        var value = result[resultFieldKey];\n\n        if (typeof value !== 'undefined') {\n          var storeFieldName = policies.getStoreFieldName({\n            typename: typename,\n            fieldName: selection.name.value,\n            field: selection,\n            variables: context.variables\n          });\n\n          var incomingValue = _this.processFieldValue(value, selection, context, out);\n\n          if (policies.hasMergeFunction(typename, selection.name.value)) {\n            incomingValue = {\n              __field: selection,\n              __typename: typename,\n              __value: incomingValue\n            };\n            out.shouldApplyMerges = true;\n          }\n\n          mergedFields = context.merge(mergedFields, (_a = {}, _a[storeFieldName] = incomingValue, _a));\n        } else if (policies.usingPossibleTypes && !hasDirectives([\"defer\", \"client\"], selection)) {\n          throw process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError(\"Missing field '\" + resultFieldKey + \"' in \" + JSON.stringify(result, null, 2).substring(0, 100));\n        }\n      } else {\n        var fragment = getFragmentFromSelection(selection, context.fragmentMap);\n\n        if (fragment && policies.fragmentMatches(fragment, typename, result, context.variables)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n\n    if (\"string\" === typeof dataId) {\n      var entityRef_1 = makeReference(dataId);\n\n      if (out.shouldApplyMerges) {\n        mergedFields = policies.applyMerges(entityRef_1, mergedFields, context);\n      }\n\n      if (process.env.NODE_ENV !== \"production\") {\n        Object.keys(mergedFields).forEach(function (storeFieldName) {\n          var fieldName = fieldNameFromStoreName(storeFieldName);\n\n          if (!policies.hasMergeFunction(typename, fieldName)) {\n            warnAboutDataLoss(entityRef_1, mergedFields, storeFieldName, context.store);\n          }\n        });\n      }\n\n      context.store.merge(dataId, mergedFields);\n      return entityRef_1;\n    }\n\n    return mergedFields;\n  };\n\n  StoreWriter.prototype.processFieldValue = function (value, field, context, out) {\n    var _this = this;\n\n    if (!field.selectionSet || value === null) {\n      return process.env.NODE_ENV === 'production' ? value : cloneDeep(value);\n    }\n\n    if (Array.isArray(value)) {\n      return value.map(function (item) {\n        return _this.processFieldValue(item, field, context, out);\n      });\n    }\n\n    return this.processSelectionSet({\n      result: value,\n      selectionSet: field.selectionSet,\n      context: context,\n      out: out\n    });\n  };\n\n  return StoreWriter;\n}();\n\nexport { StoreWriter };\nvar warnings = new Set();\n\nfunction warnAboutDataLoss(existingRef, incomingObj, storeFieldName, store) {\n  var getChild = function getChild(objOrRef) {\n    var child = store.getFieldValue(objOrRef, storeFieldName);\n    return typeof child === \"object\" && child;\n  };\n\n  var existing = getChild(existingRef);\n  if (!existing) return;\n  var incoming = getChild(incomingObj);\n  if (!incoming) return;\n  if (isReference(existing)) return;\n  if (equal(existing, incoming)) return;\n\n  if (Object.keys(existing).every(function (key) {\n    return store.getFieldValue(incoming, key) !== void 0;\n  })) {\n    return;\n  }\n\n  var parentType = store.getFieldValue(existingRef, \"__typename\") || store.getFieldValue(incomingObj, \"__typename\");\n  var fieldName = fieldNameFromStoreName(storeFieldName);\n  var typeDotName = parentType + \".\" + fieldName;\n  if (warnings.has(typeDotName)) return;\n  warnings.add(typeDotName);\n  var childTypenames = [];\n\n  if (!Array.isArray(existing) && !Array.isArray(incoming)) {\n    [existing, incoming].forEach(function (child) {\n      var typename = store.getFieldValue(child, \"__typename\");\n\n      if (typeof typename === \"string\" && !childTypenames.includes(typename)) {\n        childTypenames.push(typename);\n      }\n    });\n  }\n\n  process.env.NODE_ENV === \"production\" || invariant.warn(\"Cache data may be lost when replacing the \" + fieldName + \" field of a \" + parentType + \" object.\\n\\nTo address this problem (which is not a bug in Apollo Client), \" + (childTypenames.length ? \"either ensure all objects of type \" + childTypenames.join(\" and \") + \" have IDs, or \" : \"\") + \"define a custom merge function for the \" + typeDotName + \" field, so InMemoryCache can safely merge these objects:\\n\\n  existing: \" + JSON.stringify(existing).slice(0, 1000) + \"\\n  incoming: \" + JSON.stringify(incoming).slice(0, 1000) + \"\\n\\nFor more information about these options, please refer to the documentation:\\n\\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\\n\");\n}","import { __assign, __extends } from \"tslib\";\nimport \"./fixPolyfills.js\";\nimport { dep, wrap } from 'optimism';\nimport { ApolloCache } from \"../core/cache.js\";\nimport { addTypenameToDocument, isReference } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar } from \"./reactiveVars.js\";\nimport { defaultDataIdFromObject, Policies } from \"./policies.js\";\nimport { hasOwn } from \"./helpers.js\";\nvar defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  typePolicies: {}\n};\n\nvar InMemoryCache = function (_super) {\n  __extends(InMemoryCache, _super);\n\n  function InMemoryCache(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.watches = new Set();\n    _this.typenameDocumentCache = new Map();\n    _this.makeVar = makeVar;\n    _this.txCount = 0;\n    _this.maybeBroadcastWatch = wrap(function (c, fromOptimisticTransaction) {\n      return _this.broadcastWatch.call(_this, c, !!fromOptimisticTransaction);\n    }, {\n      makeCacheKey: function makeCacheKey(c) {\n        var store = c.optimistic ? _this.optimisticData : _this.data;\n\n        if (supportsResultCaching(store)) {\n          var optimistic = c.optimistic,\n              rootId = c.rootId,\n              variables = c.variables;\n          return store.makeCacheKey(c.query, c.callback, JSON.stringify({\n            optimistic: optimistic,\n            rootId: rootId,\n            variables: variables\n          }));\n        }\n      }\n    });\n    _this.watchDep = dep();\n    _this.config = __assign(__assign({}, defaultConfig), config);\n    _this.addTypename = !!_this.config.addTypename;\n    _this.policies = new Policies({\n      cache: _this,\n      dataIdFromObject: _this.config.dataIdFromObject,\n      possibleTypes: _this.config.possibleTypes,\n      typePolicies: _this.config.typePolicies\n    });\n    _this.data = new EntityStore.Root({\n      policies: _this.policies,\n      resultCaching: _this.config.resultCaching\n    });\n    _this.optimisticData = _this.data;\n    _this.storeWriter = new StoreWriter(_this, _this.storeReader = new StoreReader({\n      cache: _this,\n      addTypename: _this.addTypename\n    }));\n    return _this;\n  }\n\n  InMemoryCache.prototype.restore = function (data) {\n    if (data) this.data.replace(data);\n    return this;\n  };\n\n  InMemoryCache.prototype.extract = function (optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return (optimistic ? this.optimisticData : this.data).toObject();\n  };\n\n  InMemoryCache.prototype.read = function (options) {\n    var store = options.optimistic ? this.optimisticData : this.data;\n\n    if (typeof options.rootId === 'string' && !store.has(options.rootId)) {\n      return null;\n    }\n\n    return this.storeReader.diffQueryAgainstStore({\n      store: store,\n      query: options.query,\n      variables: options.variables,\n      rootId: options.rootId,\n      config: this.config,\n      returnPartialData: false\n    }).result || null;\n  };\n\n  InMemoryCache.prototype.write = function (options) {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore({\n        store: this.data,\n        query: options.query,\n        result: options.result,\n        dataId: options.dataId,\n        variables: options.variables\n      });\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.modify = function (options) {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      return false;\n    }\n\n    var store = options.optimistic ? this.optimisticData : this.data;\n\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.diff = function (options) {\n    return this.storeReader.diffQueryAgainstStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      query: options.query,\n      variables: options.variables,\n      returnPartialData: options.returnPartialData,\n      config: this.config\n    });\n  };\n\n  InMemoryCache.prototype.watch = function (watch) {\n    var _this = this;\n\n    this.watches.add(watch);\n\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n\n    return function () {\n      _this.watches.delete(watch);\n    };\n  };\n\n  InMemoryCache.prototype.gc = function () {\n    return this.optimisticData.gc();\n  };\n\n  InMemoryCache.prototype.retain = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  };\n\n  InMemoryCache.prototype.release = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  };\n\n  InMemoryCache.prototype.identify = function (object) {\n    return isReference(object) ? object.__ref : this.policies.identify(object)[0];\n  };\n\n  InMemoryCache.prototype.evict = function (options) {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        return false;\n      }\n\n      options = __assign(__assign({}, options), {\n        id: \"ROOT_QUERY\"\n      });\n    }\n\n    try {\n      ++this.txCount;\n      return this.optimisticData.evict(options);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.reset = function () {\n    this.data.clear();\n    this.optimisticData = this.data;\n    this.broadcastWatches();\n    return Promise.resolve();\n  };\n\n  InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n    var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  };\n\n  InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n    var _this = this;\n\n    var perform = function perform(layer) {\n      var _a = _this,\n          data = _a.data,\n          optimisticData = _a.optimisticData;\n      ++_this.txCount;\n\n      if (layer) {\n        _this.data = _this.optimisticData = layer;\n      }\n\n      try {\n        transaction(_this);\n      } finally {\n        --_this.txCount;\n        _this.data = data;\n        _this.optimisticData = optimisticData;\n      }\n    };\n\n    var fromOptimisticTransaction = false;\n\n    if (typeof optimisticId === 'string') {\n      this.optimisticData = this.optimisticData.addLayer(optimisticId, perform);\n      fromOptimisticTransaction = true;\n    } else if (optimisticId === null) {\n      perform(this.data);\n    } else {\n      perform();\n    }\n\n    this.broadcastWatches(fromOptimisticTransaction);\n  };\n\n  InMemoryCache.prototype.transformDocument = function (document) {\n    if (this.addTypename) {\n      var result = this.typenameDocumentCache.get(document);\n\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        this.typenameDocumentCache.set(result, result);\n      }\n\n      return result;\n    }\n\n    return document;\n  };\n\n  InMemoryCache.prototype.broadcastWatches = function (fromOptimisticTransaction) {\n    var _this = this;\n\n    if (!this.txCount) {\n      this.watches.forEach(function (c) {\n        return _this.maybeBroadcastWatch(c, fromOptimisticTransaction);\n      });\n    }\n  };\n\n  InMemoryCache.prototype.broadcastWatch = function (c, fromOptimisticTransaction) {\n    this.watchDep.dirty(c);\n    this.watchDep(c);\n    var diff = this.diff({\n      query: c.query,\n      variables: c.variables,\n      optimistic: c.optimistic\n    });\n\n    if (c.optimistic && fromOptimisticTransaction) {\n      diff.fromOptimisticTransaction = true;\n    }\n\n    c.callback(diff);\n  };\n\n  return InMemoryCache;\n}(ApolloCache);\n\nexport { InMemoryCache };","import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n  return isReference(objectOrReference) ? store.get(objectOrReference.__ref, \"__typename\") : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n  var match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n  if (result && typeof result === \"object\") {\n    return Array.isArray(result) ? result.every(function (item) {\n      return selectionSetMatchesResult(selectionSet, item, variables);\n    }) : selectionSet.selections.every(function (field) {\n      if (isField(field) && shouldInclude(field, variables)) {\n        var key = resultKeyNameFromField(field);\n        return hasOwn.call(result, key) && (!field.selectionSet || selectionSetMatchesResult(field.selectionSet, result[key], variables));\n      }\n\n      return true;\n    });\n  }\n\n  return false;\n}\nexport function storeValueIsStoreObject(value) {\n  return value !== null && typeof value === \"object\" && !isReference(value) && !Array.isArray(value);\n}\nexport function isFieldValueToBeMerged(value) {\n  var field = value && value.__field;\n  return field && isField(field);\n}\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger(reconcileProcessedFields);\n}\n\nvar reconcileProcessedFields = function reconcileProcessedFields(existingObject, incomingObject, property) {\n  var existing = existingObject[property];\n  var incoming = incomingObject[property];\n\n  if (isFieldValueToBeMerged(existing)) {\n    existing.__value = this.merge(existing.__value, isFieldValueToBeMerged(incoming) ? incoming.__value : incoming);\n    return existing;\n  }\n\n  if (isFieldValueToBeMerged(incoming)) {\n    incoming.__value = this.merge(existing, incoming.__value);\n    return incoming;\n  }\n\n  return this.merge(existing, incoming);\n};","export default function symbolObservablePonyfill(root) {\n  var result;\n  var Symbol = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      result = Symbol.observable;\n    } else {\n      // This just needs to be something that won't trample other user's Symbol.for use\n      // It also will guide people to the source of their issues, if this is problematic.\n      // META: It's a resource locator!\n      result = Symbol.for('https://github.com/benlesh/symbol-observable');\n\n      try {\n        Symbol.observable = result;\n      } catch (err) {// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n        // if it is frozen assigning to it will throw. In this case, we don't care, because\n        // they will need to use the returned value from the ponyfill.\n      }\n    }\n  } else {\n    result = '@@observable';\n  }\n\n  return result;\n}\n;","import { __extends } from \"tslib\";\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { ApolloLink } from \"../core/index.js\";\n\nvar WebSocketLink = function (_super) {\n  __extends(WebSocketLink, _super);\n\n  function WebSocketLink(paramsOrClient) {\n    var _this = _super.call(this) || this;\n\n    if (paramsOrClient instanceof SubscriptionClient) {\n      _this.subscriptionClient = paramsOrClient;\n    } else {\n      _this.subscriptionClient = new SubscriptionClient(paramsOrClient.uri, paramsOrClient.options, paramsOrClient.webSocketImpl);\n    }\n\n    return _this;\n  }\n\n  WebSocketLink.prototype.request = function (operation) {\n    return this.subscriptionClient.request(operation);\n  };\n\n  return WebSocketLink;\n}(ApolloLink);\n\nexport { WebSocketLink };","import { __rest } from 'tslib';\nimport { ApolloLink, Observable } from '@apollo/client/core';\n\nfunction setContext(setter) {\n  return new ApolloLink(function (operation, forward) {\n    var request = __rest(operation, []);\n\n    return new Observable(function (observer) {\n      var handle;\n      Promise.resolve(request).then(function (req) {\n        return setter(req, operation.getContext());\n      }).then(operation.setContext).then(function () {\n        handle = forward(operation).subscribe({\n          next: observer.next.bind(observer),\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        });\n      }).catch(observer.error.bind(observer));\n      return function () {\n        if (handle) handle.unsubscribe();\n      };\n    });\n  });\n}\n\nexport { setContext };","import { __extends } from 'tslib';\nimport { ApolloLink, Observable } from '@apollo/client/core';\n\nfunction onError(errorHandler) {\n  return new ApolloLink(function (operation, forward) {\n    return new Observable(function (observer) {\n      var sub;\n      var retriedSub;\n      var retriedResult;\n\n      try {\n        sub = forward(operation).subscribe({\n          next: function next(result) {\n            if (result.errors) {\n              retriedResult = errorHandler({\n                graphQLErrors: result.errors,\n                response: result,\n                operation: operation,\n                forward: forward\n              });\n\n              if (retriedResult) {\n                retriedSub = retriedResult.subscribe({\n                  next: observer.next.bind(observer),\n                  error: observer.error.bind(observer),\n                  complete: observer.complete.bind(observer)\n                });\n                return;\n              }\n            }\n\n            observer.next(result);\n          },\n          error: function error(networkError) {\n            retriedResult = errorHandler({\n              operation: operation,\n              networkError: networkError,\n              graphQLErrors: networkError && networkError.result && networkError.result.errors,\n              forward: forward\n            });\n\n            if (retriedResult) {\n              retriedSub = retriedResult.subscribe({\n                next: observer.next.bind(observer),\n                error: observer.error.bind(observer),\n                complete: observer.complete.bind(observer)\n              });\n              return;\n            }\n\n            observer.error(networkError);\n          },\n          complete: function complete() {\n            if (!retriedResult) {\n              observer.complete.bind(observer)();\n            }\n          }\n        });\n      } catch (e) {\n        errorHandler({\n          networkError: e,\n          operation: operation,\n          forward: forward\n        });\n        observer.error(e);\n      }\n\n      return function () {\n        if (sub) sub.unsubscribe();\n        if (retriedSub) sub.unsubscribe();\n      };\n    });\n  });\n}\n\nvar ErrorLink = function (_super) {\n  __extends(ErrorLink, _super);\n\n  function ErrorLink(errorHandler) {\n    var _this = _super.call(this) || this;\n\n    _this.link = onError(errorHandler);\n    return _this;\n  }\n\n  ErrorLink.prototype.request = function (operation, forward) {\n    return this.link.request(operation, forward);\n  };\n\n  return ErrorLink;\n}(ApolloLink);\n\nexport { ErrorLink, onError };","export var NetworkStatus;\n\n(function (NetworkStatus) {\n  NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n  NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n  NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n  NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n  NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n  NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n  NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\n\nexport function isNetworkRequestInFlight(networkStatus) {\n  return networkStatus ? networkStatus < 7 : false;\n}","/* global window */\nimport ponyfill from './ponyfill.js';\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;","export function getEnv() {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  return 'development';\n}\nexport function isEnv(env) {\n  return getEnv() === env;\n}\nexport function isDevelopment() {\n  return isEnv('development') === true;\n}\nexport function isTest() {\n  return isEnv('test') === true;\n}","import { Observable } from \"../../utilities/index.js\";\nexport function fromError(errorValue) {\n  return new Observable(function (observer) {\n    observer.error(errorValue);\n  });\n}","import { invariant } from 'ts-invariant';\nexport function toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function next(data) {\n        if (completed) {\n          process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}","import { Observable } from \"../../utilities/index.js\";\nexport function fromPromise(promise) {\n  return new Observable(function (observer) {\n    promise.then(function (value) {\n      observer.next(value);\n      observer.complete();\n    }).catch(observer.error.bind(observer));\n  });\n}","export var throwServerError = function throwServerError(response, result, message) {\n  var error = new Error(message);\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};","import { InvariantError } from 'ts-invariant';\nexport function validateOperation(operation) {\n  var OPERATION_FIELDS = ['query', 'operationName', 'variables', 'extensions', 'context'];\n\n  for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n    var key = _a[_i];\n\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(26) : new InvariantError(\"illegal argument: \" + key);\n    }\n  }\n\n  return operation;\n}","import { __assign } from \"tslib\";\nexport function createOperation(starting, operation) {\n  var context = __assign({}, starting);\n\n  var setContext = function setContext(next) {\n    if (typeof next === 'function') {\n      context = __assign(__assign({}, context), next(context));\n    } else {\n      context = __assign(__assign({}, context), next);\n    }\n  };\n\n  var getContext = function getContext() {\n    return __assign({}, context);\n  };\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext\n  });\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext\n  });\n  return operation;\n}","import { getOperationName } from \"../../utilities/index.js\";\nexport function transformOperation(operation) {\n  var transformedOperation = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query\n  };\n\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName = typeof transformedOperation.query !== 'string' ? getOperationName(transformedOperation.query) || undefined : '';\n  }\n\n  return transformedOperation;\n}","export { fromError } from \"./fromError.js\";\nexport { toPromise } from \"./toPromise.js\";\nexport { fromPromise } from \"./fromPromise.js\";\nexport { throwServerError } from \"./throwServerError.js\";\nexport { validateOperation } from \"./validateOperation.js\";\nexport { createOperation } from \"./createOperation.js\";\nexport { transformOperation } from \"./transformOperation.js\";","import { __extends } from \"tslib\";\nimport { isNonEmptyArray } from \"../utilities/index.js\";\nexport function isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += err.networkError.message + \"\\n\";\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  __extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n    _this.message = errorMessage || generateErrorMessage(_this);\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexport { ApolloError };","export { empty } from \"./empty.js\";\nexport { from } from \"./from.js\";\nexport { split } from \"./split.js\";\nexport { concat } from \"./concat.js\";\nexport { execute } from \"./execute.js\";\nexport { ApolloLink } from \"./ApolloLink.js\";\nexport * from \"./types.js\";","export { ApolloClient } from \"./ApolloClient.js\";\nexport { ObservableQuery } from \"./ObservableQuery.js\";\nexport { NetworkStatus } from \"./networkStatus.js\";\nexport * from \"./types.js\";\nexport { isApolloError, ApolloError } from \"../errors/index.js\";\nexport { Cache, ApolloCache, InMemoryCache, MissingFieldError, defaultDataIdFromObject, makeVar } from \"../cache/index.js\";\nexport * from \"../cache/inmemory/types.js\";\nexport * from \"../link/core/index.js\";\nexport * from \"../link/http/index.js\";\nexport { fromError, toPromise, fromPromise, throwServerError } from \"../link/utils/index.js\";\nexport { Observable, isReference, makeReference } from \"../utilities/index.js\";\nimport gql from 'graphql-tag';\nexport var resetCaches = gql.resetCaches,\n    disableFragmentWarnings = gql.disableFragmentWarnings,\n    enableExperimentalFragmentVariables = gql.enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables = gql.disableExperimentalFragmentVariables;\nexport { gql };","import { visit } from 'graphql/language/visitor';\nimport { invariant } from 'ts-invariant';\nexport function shouldInclude(_a, variables) {\n  var directives = _a.directives;\n\n  if (!directives || !directives.length) {\n    return true;\n  }\n\n  return getInclusionDirectives(directives).every(function (_a) {\n    var directive = _a.directive,\n        ifArgument = _a.ifArgument;\n    var evaledValue = false;\n\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables && variables[ifArgument.value.name.value];\n      process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 38) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n    } else {\n      evaledValue = ifArgument.value.value;\n    }\n\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\nexport function getDirectiveNames(root) {\n  var names = [];\n  visit(root, {\n    Directive: function Directive(node) {\n      names.push(node.name.value);\n    }\n  });\n  return names;\n}\nexport function hasDirectives(names, root) {\n  return getDirectiveNames(root).some(function (name) {\n    return names.indexOf(name) > -1;\n  });\n}\nexport function hasClientExports(document) {\n  return document && hasDirectives(['client'], document) && hasDirectives(['export'], document);\n}\n\nfunction isInclusionDirective(_a) {\n  var value = _a.name.value;\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(directives) {\n  var result = [];\n\n  if (directives && directives.length) {\n    directives.forEach(function (directive) {\n      if (!isInclusionDirective(directive)) return;\n      var directiveArguments = directive.arguments;\n      var directiveName = directive.name.value;\n      process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 39) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n      var ifArgument = directiveArguments[0];\n      process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 40) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n      var ifValue = ifArgument.value;\n      process.env.NODE_ENV === \"production\" ? invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 41) : invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n      result.push({\n        directive: directive,\n        ifArgument: ifArgument\n      });\n    });\n  }\n\n  return result;\n}","import { __assign, __spreadArrays } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nexport function getFragmentQueryDocument(document, fragmentName) {\n  var actualFragmentName = fragmentName;\n  var fragments = [];\n  document.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(42) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" + 'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n    }\n\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  if (typeof actualFragmentName === 'undefined') {\n    process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 43) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  var query = __assign(__assign({}, document), {\n    definitions: __spreadArrays([{\n      kind: 'OperationDefinition',\n      operation: 'query',\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [{\n          kind: 'FragmentSpread',\n          name: {\n            kind: 'Name',\n            value: actualFragmentName\n          }\n        }]\n      }\n    }], document.definitions)\n  });\n\n  return query;\n}\nexport function createFragmentMap(fragments) {\n  if (fragments === void 0) {\n    fragments = [];\n  }\n\n  var symTable = {};\n  fragments.forEach(function (fragment) {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\nexport function getFragmentFromSelection(selection, fragmentMap) {\n  switch (selection.kind) {\n    case 'InlineFragment':\n      return selection;\n\n    case 'FragmentSpread':\n      {\n        var fragment = fragmentMap && fragmentMap[selection.name.value];\n        process.env.NODE_ENV === \"production\" ? invariant(fragment, 44) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n        return fragment;\n      }\n\n    default:\n      return null;\n  }\n}","import stringify from 'fast-json-stable-stringify';\nimport { InvariantError } from 'ts-invariant';\nimport { getFragmentFromSelection } from \"./fragments.js\";\nexport function makeReference(id) {\n  return {\n    __ref: String(id)\n  };\n}\nexport function isReference(obj) {\n  return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\n\nfunction isStringValue(value) {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value) {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value) {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value) {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value) {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value) {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value) {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value) {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value) {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(53) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" + 'is not supported. Use variables instead of inline arguments to ' + 'overcome this limitation.');\n  }\n}\nexport function storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n              value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n\n  var argObj = null;\n\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export'];\nexport function getStoreKeyName(fieldName, args, directives) {\n  if (args && directives && directives['connection'] && directives['connection']['key']) {\n    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {\n      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];\n      filterKeys.sort();\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = args[key];\n      });\n      return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  var completeFieldName = fieldName;\n\n  if (args) {\n    var stringifiedArgs = stringify(args);\n    completeFieldName += \"(\" + stringifiedArgs + \")\";\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n      } else {\n        completeFieldName += \"@\" + key;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\nexport function argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n\n  return null;\n}\nexport function resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n  if (typeof result.__typename === 'string') {\n    return result.__typename;\n  }\n\n  for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n    var selection = _a[_i];\n\n    if (isField(selection)) {\n      if (selection.name.value === '__typename') {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else {\n      var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n\n      if (typeof typename === 'string') {\n        return typename;\n      }\n    }\n  }\n}\nexport function isField(selection) {\n  return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n  return selection.kind === 'InlineFragment';\n}","import { invariant, InvariantError } from 'ts-invariant';\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\nexport function checkDocument(doc) {\n  process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 45) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  var operations = doc.definitions.filter(function (d) {\n    return d.kind !== 'FragmentDefinition';\n  }).map(function (definition) {\n    if (definition.kind !== 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(46) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n    }\n\n    return definition;\n  });\n  process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 47) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n  return doc;\n}\nexport function getOperationDefinition(doc) {\n  checkDocument(doc);\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  })[0];\n}\nexport function getOperationName(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition' && definition.name;\n  }).map(function (x) {\n    return x.name.value;\n  })[0] || null;\n}\nexport function getFragmentDefinitions(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'FragmentDefinition';\n  });\n}\nexport function getQueryDefinition(doc) {\n  var queryDef = getOperationDefinition(doc);\n  process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 48) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n  return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n  process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 49) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 50) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n  var fragmentDef = doc.definitions[0];\n  process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 51) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n  return fragmentDef;\n}\nexport function getMainDefinition(queryDoc) {\n  checkDocument(queryDoc);\n  var fragmentDefinition;\n\n  for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n    var definition = _a[_i];\n\n    if (definition.kind === 'OperationDefinition') {\n      var operation = definition.operation;\n\n      if (operation === 'query' || operation === 'mutation' || operation === 'subscription') {\n        return definition;\n      }\n    }\n\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      fragmentDefinition = definition;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw process.env.NODE_ENV === \"production\" ? new InvariantError(52) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nexport function getDefaultValues(definition) {\n  var defaultValues = Object.create(null);\n  var defs = definition && definition.variableDefinitions;\n\n  if (defs && defs.length) {\n    defs.forEach(function (def) {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n      }\n    });\n  }\n\n  return defaultValues;\n}","export function filterInPlace(array, test, context) {\n  var target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}","import { __assign, __spreadArrays } from \"tslib\";\nimport { visit } from 'graphql/language/visitor';\nimport { invariant } from 'ts-invariant';\nimport { checkDocument, getOperationDefinition, getFragmentDefinition, getFragmentDefinitions, getMainDefinition } from \"./getFromAST.js\";\nimport { filterInPlace } from \"../common/filterInPlace.js\";\nimport { isField, isInlineFragment } from \"./storeUtils.js\";\nimport { createFragmentMap } from \"./fragments.js\";\nvar TYPENAME_FIELD = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename'\n  }\n};\n\nfunction isEmpty(op, fragments) {\n  return op.selectionSet.selections.every(function (selection) {\n    return selection.kind === 'FragmentSpread' && isEmpty(fragments[selection.name.value], fragments);\n  });\n}\n\nfunction nullIfDocIsEmpty(doc) {\n  return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc))) ? null : doc;\n}\n\nfunction getDirectiveMatcher(directives) {\n  return function directiveMatcher(directive) {\n    return directives.some(function (dir) {\n      return dir.name && dir.name === directive.name.value || dir.test && dir.test(directive);\n    });\n  };\n}\n\nexport function removeDirectivesFromDocument(directives, doc) {\n  var variablesInUse = Object.create(null);\n  var variablesToRemove = [];\n  var fragmentSpreadsInUse = Object.create(null);\n  var fragmentSpreadsToRemove = [];\n  var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n    Variable: {\n      enter: function enter(node, _key, parent) {\n        if (parent.kind !== 'VariableDefinition') {\n          variablesInUse[node.name.value] = true;\n        }\n      }\n    },\n    Field: {\n      enter: function enter(node) {\n        if (directives && node.directives) {\n          var shouldRemoveField = directives.some(function (directive) {\n            return directive.remove;\n          });\n\n          if (shouldRemoveField && node.directives && node.directives.some(getDirectiveMatcher(directives))) {\n            if (node.arguments) {\n              node.arguments.forEach(function (arg) {\n                if (arg.value.kind === 'Variable') {\n                  variablesToRemove.push({\n                    name: arg.value.name.value\n                  });\n                }\n              });\n            }\n\n            if (node.selectionSet) {\n              getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                fragmentSpreadsToRemove.push({\n                  name: frag.name.value\n                });\n              });\n            }\n\n            return null;\n          }\n        }\n      }\n    },\n    FragmentSpread: {\n      enter: function enter(node) {\n        fragmentSpreadsInUse[node.name.value] = true;\n      }\n    },\n    Directive: {\n      enter: function enter(node) {\n        if (getDirectiveMatcher(directives)(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n\n  if (modifiedDoc && filterInPlace(variablesToRemove, function (v) {\n    return !!v.name && !variablesInUse[v.name];\n  }).length) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  if (modifiedDoc && filterInPlace(fragmentSpreadsToRemove, function (fs) {\n    return !!fs.name && !fragmentSpreadsInUse[fs.name];\n  }).length) {\n    modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n  }\n\n  return modifiedDoc;\n}\nexport function addTypenameToDocument(doc) {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter: function enter(node, _key, parent) {\n        if (parent && parent.kind === 'OperationDefinition') {\n          return;\n        }\n\n        var selections = node.selections;\n\n        if (!selections) {\n          return;\n        }\n\n        var skip = selections.some(function (selection) {\n          return isField(selection) && (selection.name.value === '__typename' || selection.name.value.lastIndexOf('__', 0) === 0);\n        });\n\n        if (skip) {\n          return;\n        }\n\n        var field = parent;\n\n        if (isField(field) && field.directives && field.directives.some(function (d) {\n          return d.name.value === 'export';\n        })) {\n          return;\n        }\n\n        return __assign(__assign({}, node), {\n          selections: __spreadArrays(selections, [TYPENAME_FIELD])\n        });\n      }\n    }\n  });\n}\n\naddTypenameToDocument.added = function (field) {\n  return field === TYPENAME_FIELD;\n};\n\nvar connectionRemoveConfig = {\n  test: function test(directive) {\n    var willRemove = directive.name.value === 'connection';\n\n    if (willRemove) {\n      if (!directive.arguments || !directive.arguments.some(function (arg) {\n        return arg.name.value === 'key';\n      })) {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' + 'You may want to use the key parameter to specify a store key.');\n      }\n    }\n\n    return willRemove;\n  }\n};\nexport function removeConnectionDirectiveFromDocument(doc) {\n  return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\n\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n\n  return !!selectionSet && selectionSet.selections && selectionSet.selections.some(function (selection) {\n    return hasDirectivesInSelection(directives, selection, nestedCheck);\n  });\n}\n\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return selection.directives.some(getDirectiveMatcher(directives)) || nestedCheck && hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck);\n}\n\nfunction getArgumentMatcher(config) {\n  return function argumentMatcher(argument) {\n    return config.some(function (aConfig) {\n      return argument.value && argument.value.kind === 'Variable' && argument.value.name && (aConfig.name === argument.value.name.value || aConfig.test && aConfig.test(argument));\n    });\n  };\n}\n\nexport function removeArgumentsFromDocument(config, doc) {\n  var argMatcher = getArgumentMatcher(config);\n  return nullIfDocIsEmpty(visit(doc, {\n    OperationDefinition: {\n      enter: function enter(node) {\n        return __assign(__assign({}, node), {\n          variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(function (varDef) {\n            return !config.some(function (arg) {\n              return arg.name === varDef.variable.name.value;\n            });\n          }) : []\n        });\n      }\n    },\n    Field: {\n      enter: function enter(node) {\n        var shouldRemoveField = config.some(function (argConfig) {\n          return argConfig.remove;\n        });\n\n        if (shouldRemoveField) {\n          var argMatchCount_1 = 0;\n\n          if (node.arguments) {\n            node.arguments.forEach(function (arg) {\n              if (argMatcher(arg)) {\n                argMatchCount_1 += 1;\n              }\n            });\n          }\n\n          if (argMatchCount_1 === 1) {\n            return null;\n          }\n        }\n      }\n    },\n    Argument: {\n      enter: function enter(node) {\n        if (argMatcher(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n}\nexport function removeFragmentSpreadFromDocument(config, doc) {\n  function enter(node) {\n    if (config.some(function (def) {\n      return def.name === node.name.value;\n    })) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(visit(doc, {\n    FragmentSpread: {\n      enter: enter\n    },\n    FragmentDefinition: {\n      enter: enter\n    }\n  }));\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n  var allFragments = [];\n  selectionSet.selections.forEach(function (selection) {\n    if ((isField(selection) || isInlineFragment(selection)) && selection.selectionSet) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) {\n        return allFragments.push(frag);\n      });\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n  return allFragments;\n}\n\nexport function buildQueryFromSelectionSet(document) {\n  var definition = getMainDefinition(document);\n  var definitionOperation = definition.operation;\n\n  if (definitionOperation === 'query') {\n    return document;\n  }\n\n  var modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter: function enter(node) {\n        return __assign(__assign({}, node), {\n          operation: 'query'\n        });\n      }\n    }\n  });\n  return modifiedDoc;\n}\nexport function removeClientSetsFromDocument(document) {\n  checkDocument(document);\n  var modifiedDoc = removeDirectivesFromDocument([{\n    test: function test(directive) {\n      return directive.name.value === 'client';\n    },\n    remove: true\n  }], document);\n\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter: function enter(node) {\n          if (node.selectionSet) {\n            var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n              return isField(selection) && selection.name.value === '__typename';\n            });\n\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  return modifiedDoc;\n}","import Observable from 'zen-observable';\nimport 'symbol-observable';\n\nObservable.prototype['@@observable'] = function () {\n  return this;\n};\n\nexport { Observable };","import { __assign, __spreadArrays } from \"tslib\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function mergeDeep() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  return mergeDeepArray(sources);\n}\nexport function mergeDeepArray(sources) {\n  var target = sources[0] || {};\n  var count = sources.length;\n\n  if (count > 1) {\n    var merger = new DeepMerger();\n\n    for (var i = 1; i < count; ++i) {\n      target = merger.merge(target, sources[i]);\n    }\n  }\n\n  return target;\n}\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nvar defaultReconciler = function defaultReconciler(target, source, property) {\n  return this.merge(target[property], source[property]);\n};\n\nvar DeepMerger = function () {\n  function DeepMerger(reconciler) {\n    if (reconciler === void 0) {\n      reconciler = defaultReconciler;\n    }\n\n    this.reconciler = reconciler;\n    this.isObject = isObject;\n    this.pastCopies = new Set();\n  }\n\n  DeepMerger.prototype.merge = function (target, source) {\n    var _this = this;\n\n    var context = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      context[_i - 2] = arguments[_i];\n    }\n\n    if (isObject(source) && isObject(target)) {\n      Object.keys(source).forEach(function (sourceKey) {\n        if (hasOwnProperty.call(target, sourceKey)) {\n          var targetValue = target[sourceKey];\n\n          if (source[sourceKey] !== targetValue) {\n            var result = _this.reconciler.apply(_this, __spreadArrays([target, source, sourceKey], context));\n\n            if (result !== targetValue) {\n              target = _this.shallowCopyForMerge(target);\n              target[sourceKey] = result;\n            }\n          }\n        } else {\n          target = _this.shallowCopyForMerge(target);\n          target[sourceKey] = source[sourceKey];\n        }\n      });\n      return target;\n    }\n\n    return source;\n  };\n\n  DeepMerger.prototype.shallowCopyForMerge = function (value) {\n    if (isObject(value) && !this.pastCopies.has(value)) {\n      if (Array.isArray(value)) {\n        value = value.slice(0);\n      } else {\n        value = __assign({\n          __proto__: Object.getPrototypeOf(value)\n        }, value);\n      }\n\n      this.pastCopies.add(value);\n    }\n\n    return value;\n  };\n\n  return DeepMerger;\n}();\n\nexport { DeepMerger };","var toString = Object.prototype.toString;\nexport function cloneDeep(value) {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper(val, seen) {\n  switch (toString.call(val)) {\n    case \"[object Array]\":\n      {\n        seen = seen || new Map();\n        if (seen.has(val)) return seen.get(val);\n        var copy_1 = val.slice(0);\n        seen.set(val, copy_1);\n        copy_1.forEach(function (child, i) {\n          copy_1[i] = cloneDeepHelper(child, seen);\n        });\n        return copy_1;\n      }\n\n    case \"[object Object]\":\n      {\n        seen = seen || new Map();\n        if (seen.has(val)) return seen.get(val);\n        var copy_2 = Object.create(Object.getPrototypeOf(val));\n        seen.set(val, copy_2);\n        Object.keys(val).forEach(function (key) {\n          copy_2[key] = cloneDeepHelper(val[key], seen);\n        });\n        return copy_2;\n      }\n\n    default:\n      return val;\n  }\n}","import { isDevelopment, isTest } from \"./environment.js\";\n\nfunction isObject(value) {\n  return value !== null && typeof value === \"object\";\n}\n\nfunction deepFreeze(value) {\n  var workSet = new Set([value]);\n  workSet.forEach(function (obj) {\n    if (isObject(obj)) {\n      if (!Object.isFrozen(obj)) Object.freeze(obj);\n      Object.getOwnPropertyNames(obj).forEach(function (name) {\n        if (isObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nexport function maybeDeepFreeze(obj) {\n  if (process.env.NODE_ENV !== \"production\" && (isDevelopment() || isTest())) {\n    deepFreeze(obj);\n  }\n\n  return obj;\n}","export function iterateObserversSafely(observers, method, argument) {\n  var observersWithMethod = [];\n  observers.forEach(function (obs) {\n    return obs[method] && observersWithMethod.push(obs);\n  });\n  observersWithMethod.forEach(function (obs) {\n    return obs[method](argument);\n  });\n}","import { Observable } from \"./Observable.js\";\nexport function asyncMap(observable, mapFn, catchFn) {\n  return new Observable(function (observer) {\n    var next = observer.next,\n        error = observer.error,\n        _complete = observer.complete;\n    var activeCallbackCount = 0;\n    var completed = false;\n\n    function makeCallback(examiner, delegate) {\n      if (examiner) {\n        return function (arg) {\n          ++activeCallbackCount;\n          new Promise(function (resolve) {\n            return resolve(examiner(arg));\n          }).then(function (result) {\n            --activeCallbackCount;\n            next && next.call(observer, result);\n\n            if (completed) {\n              handler.complete();\n            }\n          }, function (e) {\n            --activeCallbackCount;\n            error && error.call(observer, e);\n          });\n        };\n      } else {\n        return function (arg) {\n          return delegate && delegate.call(observer, arg);\n        };\n      }\n    }\n\n    var handler = {\n      next: makeCallback(mapFn, next),\n      error: makeCallback(catchFn, error),\n      complete: function complete() {\n        completed = true;\n\n        if (!activeCallbackCount) {\n          _complete && _complete.call(observer);\n        }\n      }\n    };\n    var sub = observable.subscribe(handler);\n    return function () {\n      return sub.unsubscribe();\n    };\n  });\n}","import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\n\nfunction isPromiseLike(value) {\n  return value && typeof value.then === \"function\";\n}\n\nvar Concast = function (_super) {\n  __extends(Concast, _super);\n\n  function Concast(sources) {\n    var _this = _super.call(this, function (observer) {\n      _this.addObserver(observer);\n\n      return function () {\n        return _this.removeObserver(observer);\n      };\n    }) || this;\n\n    _this.observers = new Set();\n    _this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    _this.handlers = {\n      next: function next(result) {\n        if (_this.sub !== null) {\n          _this.latest = [\"next\", result];\n          iterateObserversSafely(_this.observers, \"next\", result);\n        }\n      },\n      error: function error(_error) {\n        if (_this.sub !== null) {\n          if (_this.sub) _this.sub.unsubscribe();\n          _this.sub = null;\n          _this.latest = [\"error\", _error];\n\n          _this.reject(_error);\n\n          iterateObserversSafely(_this.observers, \"error\", _error);\n        }\n      },\n      complete: function complete() {\n        if (_this.sub !== null) {\n          var value = _this.sources.shift();\n\n          if (!value) {\n            _this.sub = null;\n\n            if (_this.latest && _this.latest[0] === \"next\") {\n              _this.resolve(_this.latest[1]);\n            } else {\n              _this.resolve();\n            }\n\n            iterateObserversSafely(_this.observers, \"complete\");\n          } else if (isPromiseLike(value)) {\n            value.then(function (obs) {\n              return _this.sub = obs.subscribe(_this.handlers);\n            });\n          } else {\n            _this.sub = value.subscribe(_this.handlers);\n          }\n        }\n      }\n    };\n\n    _this.cancel = function (reason) {\n      _this.reject(reason);\n\n      _this.sources = [];\n\n      _this.handlers.complete();\n    };\n\n    _this.promise.catch(function (_) {});\n\n    if (isPromiseLike(sources)) {\n      sources.then(function (iterable) {\n        return _this.start(iterable);\n      }, _this.handlers.error);\n    } else {\n      _this.start(sources);\n    }\n\n    return _this;\n  }\n\n  Concast.prototype.start = function (sources) {\n    if (this.sub !== void 0) return;\n    this.sources = Array.from(sources);\n    this.handlers.complete();\n  };\n\n  Concast.prototype.addObserver = function (observer) {\n    if (!this.observers.has(observer)) {\n      if (this.latest) {\n        var nextOrError = this.latest[0];\n        var method = observer[nextOrError];\n\n        if (method) {\n          method.call(observer, this.latest[1]);\n        }\n\n        if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n          observer.complete();\n        }\n      }\n\n      this.observers.add(observer);\n    }\n  };\n\n  Concast.prototype.removeObserver = function (observer, quietly) {\n    if (this.observers.delete(observer) && this.observers.size < 1) {\n      if (quietly) return;\n\n      if (this.sub) {\n        this.sub.unsubscribe();\n        this.reject(new Error(\"Observable cancelled prematurely\"));\n      }\n\n      this.sub = null;\n    }\n  };\n\n  Concast.prototype.cleanup = function (callback) {\n    var _this = this;\n\n    var called = false;\n\n    var once = function once() {\n      if (!called) {\n        called = true;\n\n        _this.observers.delete(observer);\n\n        callback();\n      }\n    };\n\n    var observer = {\n      next: once,\n      error: once,\n      complete: once\n    };\n    this.addObserver(observer);\n  };\n\n  return Concast;\n}(Observable);\n\nexport { Concast };\n\nif (typeof Symbol === \"function\" && Symbol.species) {\n  Object.defineProperty(Concast, Symbol.species, {\n    value: Observable\n  });\n}","export function isNonEmptyArray(value) {\n  return Array.isArray(value) && value.length > 0;\n}","export function graphQLResultHasError(result) {\n  return result.errors && result.errors.length > 0 || false;\n}","export var canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' && navigator.product === 'ReactNative');","export function compact() {\n  var objects = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    objects[_i] = arguments[_i];\n  }\n\n  var result = Object.create(null);\n  objects.forEach(function (obj) {\n    if (!obj) return;\n    Object.keys(obj).forEach(function (key) {\n      var value = obj[key];\n\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n  return result;\n}","export { shouldInclude, hasDirectives, hasClientExports, getDirectiveNames, getInclusionDirectives } from \"./graphql/directives.js\";\nexport { createFragmentMap, getFragmentQueryDocument, getFragmentFromSelection } from \"./graphql/fragments.js\";\nexport { checkDocument, getOperationDefinition, getOperationName, getFragmentDefinitions, getQueryDefinition, getFragmentDefinition, getMainDefinition, getDefaultValues } from \"./graphql/getFromAST.js\";\nexport { makeReference, isReference, isField, isInlineFragment, valueToObjectRepresentation, storeKeyNameFromField, argumentsObjectFromField, resultKeyNameFromField, getStoreKeyName, getTypenameFromResult } from \"./graphql/storeUtils.js\";\nexport { addTypenameToDocument, buildQueryFromSelectionSet, removeDirectivesFromDocument, removeConnectionDirectiveFromDocument, removeArgumentsFromDocument, removeFragmentSpreadFromDocument, removeClientSetsFromDocument } from \"./graphql/transform.js\";\nexport { concatPagination, offsetLimitPagination, relayStylePagination } from \"./policies/pagination.js\";\nexport { Observable } from \"./observables/Observable.js\";\nexport * from \"./common/mergeDeep.js\";\nexport * from \"./common/cloneDeep.js\";\nexport * from \"./common/maybeDeepFreeze.js\";\nexport * from \"./observables/iteration.js\";\nexport * from \"./observables/asyncMap.js\";\nexport * from \"./observables/Concast.js\";\nexport * from \"./common/arrays.js\";\nexport * from \"./common/errorHandling.js\";\nexport * from \"./common/canUse.js\";\nexport * from \"./common/compact.js\";","import React from 'react';\nvar contextSymbol = typeof Symbol === 'function' && Symbol.for ? Symbol.for('__APOLLO_CONTEXT__') : '__APOLLO_CONTEXT__';\nexport function resetApolloContext() {\n  Object.defineProperty(React, contextSymbol, {\n    value: React.createContext({}),\n    enumerable: false,\n    configurable: true,\n    writable: false\n  });\n}\nexport function getApolloContext() {\n  if (!React[contextSymbol]) {\n    resetApolloContext();\n  }\n\n  return React[contextSymbol];\n}","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloConsumer = function ApolloConsumer(props) {\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    process.env.NODE_ENV === \"production\" ? invariant(context && context.client, 27) : invariant(context && context.client, 'Could not find \"client\" in the context of ApolloConsumer. ' + 'Wrap the root component in an <ApolloProvider>.');\n    return props.children(context.client);\n  });\n};","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function ApolloProvider(_a) {\n  var client = _a.client,\n      children = _a.children;\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (client && context.client !== client) {\n      context = Object.assign({}, context, {\n        client: client\n      });\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(context.client, 28) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.');\n    return React.createElement(ApolloContext.Provider, {\n      value: context\n    }, children);\n  });\n};","export * from \"./ApolloConsumer.js\";\nexport * from \"./ApolloContext.js\";\nexport * from \"./ApolloProvider.js\";","import { invariant } from 'ts-invariant';\nexport var DocumentType;\n\n(function (DocumentType) {\n  DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n  DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n  DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\n\nvar cache = new Map();\nexport function operationName(type) {\n  var name;\n\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n\n  return name;\n}\nexport function parser(document) {\n  var cached = cache.get(document);\n  if (cached) return cached;\n  var variables, type, name;\n  process.env.NODE_ENV === \"production\" ? invariant(!!document && !!document.kind, 34) : invariant(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" + \"DocumentNode. You may need to use 'graphql-tag' or another method \" + \"to convert your operation into a document\");\n  var fragments = document.definitions.filter(function (x) {\n    return x.kind === 'FragmentDefinition';\n  });\n  var queries = document.definitions.filter(function (x) {\n    return x.kind === 'OperationDefinition' && x.operation === 'query';\n  });\n  var mutations = document.definitions.filter(function (x) {\n    return x.kind === 'OperationDefinition' && x.operation === 'mutation';\n  });\n  var subscriptions = document.definitions.filter(function (x) {\n    return x.kind === 'OperationDefinition' && x.operation === 'subscription';\n  });\n  process.env.NODE_ENV === \"production\" ? invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, 35) : invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, \"Passing only a fragment to 'graphql' is not yet supported. \" + \"You must include a query, subscription or mutation as well\");\n  process.env.NODE_ENV === \"production\" ? invariant(queries.length + mutations.length + subscriptions.length <= 1, 36) : invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" + (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") + (\"subscriptions and \" + mutations.length + \" mutations. \") + \"You can use 'compose' to join multiple operation types to a component\");\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n  var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n  process.env.NODE_ENV === \"production\" ? invariant(definitions.length === 1, 37) : invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \" + document + \" had \" + (definitions.length + \" definitions. \") + \"You can use 'compose' to join multiple operation types to a component\");\n  var definition = definitions[0];\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data';\n  }\n\n  var payload = {\n    name: name,\n    type: type,\n    variables: variables\n  };\n  cache.set(document, payload);\n  return payload;\n}","import { __extends } from \"tslib\";\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation } from \"../utils/index.js\";\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link) {\n  return link.request.length <= 1;\n}\n\nvar LinkError = function (_super) {\n  __extends(LinkError, _super);\n\n  function LinkError(message, link) {\n    var _this = _super.call(this, message) || this;\n\n    _this.link = link;\n    return _this;\n  }\n\n  return LinkError;\n}(Error);\n\nvar ApolloLink = function () {\n  function ApolloLink(request) {\n    if (request) this.request = request;\n  }\n\n  ApolloLink.empty = function () {\n    return new ApolloLink(function () {\n      return Observable.of();\n    });\n  };\n\n  ApolloLink.from = function (links) {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce(function (x, y) {\n      return x.concat(y);\n    });\n  };\n\n  ApolloLink.split = function (test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(function (operation) {\n        return test(operation) ? leftLink.request(operation) || Observable.of() : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink(function (operation, forward) {\n        return test(operation) ? leftLink.request(operation, forward) || Observable.of() : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  };\n\n  ApolloLink.execute = function (link, operation) {\n    return link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of();\n  };\n\n  ApolloLink.concat = function (first, second) {\n    var firstLink = toLink(first);\n\n    if (isTerminating(firstLink)) {\n      process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n      return firstLink;\n    }\n\n    var nextLink = toLink(second);\n\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(function (operation) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op) || Observable.of();\n        }) || Observable.of();\n      });\n    } else {\n      return new ApolloLink(function (operation, forward) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of();\n      });\n    }\n  };\n\n  ApolloLink.prototype.split = function (test, left, right) {\n    return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n  };\n\n  ApolloLink.prototype.concat = function (next) {\n    return ApolloLink.concat(this, next);\n  };\n\n  ApolloLink.prototype.request = function (operation, forward) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(21) : new InvariantError('request is not implemented');\n  };\n\n  ApolloLink.prototype.onError = function (reason) {\n    throw reason;\n  };\n\n  ApolloLink.prototype.setOnError = function (fn) {\n    this.onError = fn;\n    return this;\n  };\n\n  return ApolloLink;\n}();\n\nexport { ApolloLink };","export { ApolloCache } from \"./core/cache.js\";\nexport { Cache } from \"./core/types/Cache.js\";\nexport { MissingFieldError } from \"./core/types/common.js\";\nexport { isReference, makeReference } from \"../utilities/index.js\";\nexport { InMemoryCache } from \"./inmemory/inMemoryCache.js\";\nexport { makeVar, cacheSlot } from \"./inmemory/reactiveVars.js\";\nexport { defaultDataIdFromObject } from \"./inmemory/policies.js\";\nexport * from \"./inmemory/types.js\";","import { Slot } from \"@wry/context\";\nimport { dep } from \"optimism\";\nvar varDep = dep();\nexport var cacheSlot = new Slot();\n\nfunction consumeAndIterate(set, callback) {\n  var items = [];\n  set.forEach(function (item) {\n    return items.push(item);\n  });\n  set.clear();\n  items.forEach(callback);\n}\n\nexport function makeVar(value) {\n  var caches = new Set();\n  var listeners = new Set();\n\n  var rv = function rv(newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue;\n        varDep.dirty(rv);\n        caches.forEach(broadcast);\n        consumeAndIterate(listeners, function (listener) {\n          return listener(value);\n        });\n      }\n    } else {\n      var cache = cacheSlot.getValue();\n      if (cache) caches.add(cache);\n      varDep(rv);\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = function (listener) {\n    listeners.add(listener);\n    return function () {\n      listeners.delete(listener);\n    };\n  };\n\n  return rv;\n}\n\nfunction broadcast(cache) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}"],"sourceRoot":""}